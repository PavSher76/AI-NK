version: '3.8'

services:
  # Основной сервис AI-NK (оптимизирован для QNAP)
  ai-nk:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: ai-nk-qnap
    ports:
      - "80:80"
      - "443:443"
      - "8001:8001"
      - "8002:8002"
      - "8003:8003"
      - "8004:8004"
      - "8005:8005"
      - "8006:8006"
      - "8007:8007"
      - "8443:8443"
    volumes:
      - ai-nk-data:/app/data
      - ai-nk-logs:/app/logs
      - ai-nk-uploads:/app/uploads
      - ai-nk-reports:/app/reports
      - ai-nk-models:/app/models
    environment:
      - POSTGRES_HOST=norms-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=norms_db
      - POSTGRES_USER=norms_user
      - POSTGRES_PASSWORD=norms_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redispass
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QNAP_OPTIMIZED=true
      - TZ=Europe/Moscow
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s
    networks:
      - ai-nk-network

  # PostgreSQL (оптимизирован для QNAP)
  norms-db:
    image: pgvector/pgvector:pg15
    container_name: ai-nk-norms-db-qnap
    environment:
      POSTGRES_DB: norms_db
      POSTGRES_USER: norms_user
      POSTGRES_PASSWORD: norms_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
      TZ: Europe/Moscow
    ports:
      - "5432:5432"
    volumes:
      - norms_db_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U norms_user -d norms_db"]
      interval: 60s
      timeout: 30s
      retries: 3
    networks:
      - ai-nk-network

  # Qdrant (оптимизирован для QNAP)
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ai-nk-qdrant-qnap
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - TZ=Europe/Moscow
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 60s
      timeout: 30s
      retries: 3
    networks:
      - ai-nk-network

  # Redis (оптимизирован для QNAP)
  redis:
    image: redis:7-alpine
    container_name: ai-nk-redis-qnap
    command: redis-server --requirepass redispass --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    environment:
      - TZ=Europe/Moscow
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 60s
      timeout: 30s
      retries: 3
    networks:
      - ai-nk-network

volumes:
  ai-nk-data:
    driver: local
  ai-nk-logs:
    driver: local
  ai-nk-uploads:
    driver: local
  ai-nk-reports:
    driver: local
  ai-nk-models:
    driver: local
  norms_db_data:
    driver: local
  qdrant_data:
    driver: local
  redis_data:
    driver: local

networks:
  ai-nk-network:
    driver: bridge
    name: ai-nk-qnap-network
