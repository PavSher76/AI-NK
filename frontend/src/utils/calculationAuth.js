/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ calculation service
 */

const CALCULATION_API_BASE = 'https://localhost/api/calculation';

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è calculation service
 */
export const getCalculationToken = async (username, password) => {
  try {
    const formData = new URLSearchParams();
    formData.append('username', username);
    formData.append('password', password);

    const response = await fetch(`${CALCULATION_API_BASE}/token`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
      },
      body: formData,
    });

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.detail || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ calculation service');
    }

    const data = await response.json();
    return {
      access_token: data.access_token,
      token_type: data.token_type,
      user: data.user
    };
  } catch (error) {
    console.error('üîç [CALCULATION_AUTH] Error getting calculation token:', error);
    throw error;
  }
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞ calculation service
 */
export const validateCalculationToken = async (token) => {
  try {
    const response = await fetch(`${CALCULATION_API_BASE}/me`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    return response.ok;
  } catch (error) {
    console.error('üîç [CALCULATION_AUTH] Error validating calculation token:', error);
    return false;
  }
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ calculation service
 */
export const getCalculationUserInfo = async (token) => {
  try {
    const response = await fetch(`${CALCULATION_API_BASE}/me`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    if (!response.ok) {
      throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
    }

    return await response.json();
  } catch (error) {
    console.error('üîç [CALCULATION_AUTH] Error getting calculation user info:', error);
    throw error;
  }
};
