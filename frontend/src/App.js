import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { 
  MessageSquare, 
  Send, 
  Bot, 
  User, 
  Settings, 
  Zap, 
  Loader2,
  CheckCircle,
  AlertCircle,
  RefreshCw,
  LogOut,
  Shield,
  BookOpen,
  Upload
} from 'lucide-react';

// Components
import Sidebar from './components/Sidebar';
import Header from './components/Header';
import SettingsPanel from './components/SettingsPanel';
import SystemSettings from './components/SystemSettings';
// import AuthModal from './components/AuthModal'; // –û—Ç–∫–ª—é—á–µ–Ω–æ

// Pages
import DashboardPage from './pages/DashboardPage';
import ChatPage from './pages/ChatPage';
import NormcontrolPage from './pages/NormcontrolPage';
import CalculationsPage from './pages/CalculationsPage';
import StructuralCalculationsPage from './pages/StructuralCalculationsPage';
import FoundationCalculationsPage from './pages/FoundationCalculationsPage';
import ThermalCalculationsPage from './pages/ThermalCalculationsPage';
import VentilationCalculationsPage from './pages/VentilationCalculationsPage';
import ElectricalCalculationsPage from './pages/ElectricalCalculationsPage';
import DegasificationCalculationsPage from './pages/DegasificationCalculationsPage';
import WaterSupplyCalculationsPage from './pages/WaterSupplyCalculationsPage';
import FireSafetyCalculationsPage from './pages/FireSafetyCalculationsPage';
import AcousticCalculationsPage from './pages/AcousticCalculationsPage';
import LightingCalculationsPage from './pages/LightingCalculationsPage';
import GeologicalCalculationsPage from './pages/GeologicalCalculationsPage';
import UAVProtectionCalculationsPage from './pages/UAVProtectionCalculationsPage';
import OutgoingControlPage from './pages/OutgoingControlPage';
import DocumentsPage from './pages/DocumentsPage';
import NTDConsultation from './components/NTDConsultation';

function App() {
  const [models, setModels] = useState([]);
  const [selectedModel, setSelectedModel] = useState('');
  const [messages, setMessages] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);
  const [showSettings, setShowSettings] = useState(false);
  const [showSystemSettings, setShowSystemSettings] = useState(false);
  const [showAuthModal, setShowAuthModal] = useState(false);
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [authToken, setAuthToken] = useState('');
  const [authMethod, setAuthMethod] = useState('');
  const [userInfo, setUserInfo] = useState(null);
  const [currentPage, setCurrentPage] = useState('dashboard'); // 'dashboard', 'chat', 'normcontrol', 'documents'
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ç—É—Ä–±–æ —Ä–µ–∂–∏–º–∞ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è
  const [turboMode, setTurboMode] = useState(false);
  const [reasoningDepth, setReasoningDepth] = useState('balanced');
  const [reasoningModes, setReasoningModes] = useState({});
  
  const [systemStatus, setSystemStatus] = useState({
    gateway: false,
    ollama: false,
    keycloak: false
  });
  const [refreshTabs, setRefreshTabs] = useState(false);
  const [isSidebarOpen, setIsSidebarOpen] = useState(true);

  // –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ª–æ–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
  useEffect(() => {
    console.log('üîç [DEBUG] App.js: currentPage changed to:', currentPage);
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (window.innerWidth < 1024) {
      setIsSidebarOpen(false);
    }
  }, [currentPage]);

  useEffect(() => {
    console.log('üîç [DEBUG] App.js: systemStatus updated:', systemStatus);
  }, [systemStatus]);

  useEffect(() => {
    console.log('üîç [DEBUG] App.js: models updated:', models);
  }, [models]);

  // API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  const API_BASE = process.env.REACT_APP_API_BASE || '/api/v1';

  // –û—Ç–∫–ª—é—á–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ
  useEffect(() => {
    console.log('üîç [DEBUG] App.js: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
    const userInfo = {
      token: 'disabled-auth',
      username: 'user',
      method: 'disabled',
      expiresAt: Date.now() + (24 * 60 * 60 * 1000) // 24 —á–∞—Å–∞
    };
    
    setUserInfo(userInfo);
    setAuthToken(userInfo.token);
    setAuthMethod(userInfo.method);
    setIsAuthenticated(true);
    setShowAuthModal(false);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
    localStorage.setItem('userInfo', JSON.stringify(userInfo));
    
    console.log('üîç [DEBUG] App.js: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π');
  }, []);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
  const checkSystemStatus = async () => {
    try {
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ Gateway (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞)
      try {
        const gatewayResponse = await axios.get('/api/health', {
          timeout: 10000
        });
        setSystemStatus(prev => ({ ...prev, gateway: true }));
      } catch (error) {
        if (error.response && error.response.status === 401) {
          setSystemStatus(prev => ({ ...prev, gateway: true }));
        } else {
          setSystemStatus(prev => ({ ...prev, gateway: false }));
        }
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ Ollama —á–µ—Ä–µ–∑ VLLM (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞)
      try {
        const ollamaResponse = await axios.get('http://localhost:8005/health', {
          timeout: 10000 // 10 —Å–µ–∫—É–Ω–¥
        });
        setSystemStatus(prev => ({ ...prev, ollama: true }));
      } catch (error) {
        console.log('üîç [DEBUG] App.js: Ollama health check failed:', error.message);
        setSystemStatus(prev => ({ ...prev, ollama: false }));
      }

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ Keycloak (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞)
      setSystemStatus(prev => ({ ...prev, keycloak: true }));
    } catch (error) {
      console.error('üîç [DEBUG] App.js: Error checking system status:', error);
      setSystemStatus({ gateway: false, ollama: false, keycloak: false });
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const handleAuthSuccess = (userInfo, method) => {
    console.log('üîç [DEBUG] App.js: handleAuthSuccess called with:', { userInfo, method });
    console.log('üîç [DEBUG] App.js: userInfo.token length:', userInfo.token?.length);
    console.log('üîç [DEBUG] App.js: userInfo.token starts with:', userInfo.token?.substring(0, 20));
    
    setUserInfo(userInfo);
    setAuthToken(userInfo.token);
    setAuthMethod(method);
    setIsAuthenticated(true);
    setShowAuthModal(false);
    setError(null); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
    localStorage.setItem('userInfo', JSON.stringify(userInfo));
    
    console.log('üîç [DEBUG] App.js: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≤—ã–∑—ã–≤–∞–µ–º loadModels');
    console.log('üîç [DEBUG] App.js: –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:', { 
      isAuthenticated: true, 
      authToken: !!userInfo.token, 
      authMethod: method 
    });
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª–∏ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    loadModels();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤–∫–ª–∞–¥–æ–∫
    setRefreshTabs(true);
  };

  // –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
  const handleLogout = () => {
    setUserInfo(null);
    setAuthToken('');
    setAuthMethod('');
    setIsAuthenticated(false);
    setModels([]);
    setSelectedModel('');
    setMessages([]);
    
    // –û—á–∏—â–∞–µ–º localStorage
    localStorage.removeItem('userInfo');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    setShowAuthModal(true);
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π
  const loadModels = async () => {
    console.log('üîç [DEBUG] App.js: loadModels started');
    console.log('üîç [DEBUG] App.js: loadModels auth state:', { 
      isAuthenticated, 
      authToken: !!authToken, 
      authTokenLength: authToken?.length,
      authMethod,
      userInfo: !!userInfo
    });
    
    if (!isAuthenticated || !authToken) {
      console.log('loadModels: –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', { isAuthenticated, authToken: !!authToken });
      return;
    }

    try {
      console.log('loadModels: –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ Gateway...');
      
      // –ü–æ–ª—É—á–∞–µ–º –º–æ–¥–µ–ª–∏ —á–µ—Ä–µ–∑ Gateway
      const response = await axios.get('/api/chat/tags', {
        timeout: 10000, // 10 —Å–µ–∫—É–Ω–¥
        headers: {
          'Authorization': `Bearer ${authToken}`
        }
      });
      
      console.log('loadModels: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Gateway:', response.status, response.data);
      
      if (response.data.models && Array.isArray(response.data.models)) {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Gateway –≤ —Ñ–æ—Ä–º–∞—Ç, –æ–∂–∏–¥–∞–µ–º—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º
        const modelsData = response.data.models.map(model => ({
          id: model.name,
          name: model.name,
          status: 'available',
          type: model.details?.family || 'unknown',
          size: model.size,
          parameter_size: model.details?.parameter_size || 'unknown',
          owned_by: model.details?.family || 'Ollama'
        }));
        
        console.log('loadModels: –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', modelsData);
        
        setModels(modelsData);
        if (modelsData.length > 0 && !selectedModel) {
          setSelectedModel(modelsData[0].id);
          console.log('loadModels: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–µ—Ä–≤–∞—è –º–æ–¥–µ–ª—å:', modelsData[0].id);
        }
        setError(null); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
        console.log('loadModels: –ú–æ–¥–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã', modelsData.length);
      } else {
        console.error('loadModels: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç Gateway:', response.data);
        setError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –º–æ–¥–µ–ª–µ–π');
      }
    } catch (error) {
      console.error('üîç [DEBUG] App.js: Error loading models:', error);
      console.error('üîç [DEBUG] App.js: Error response:', error.response?.data);
      console.error('üîç [DEBUG] App.js: Error status:', error.response?.status);
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–µ–π —á–µ—Ä–µ–∑ Gateway');
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∂–∏–º–æ–≤ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è
  const loadReasoningModes = async () => {
    try {
      const response = await axios.get(`/rag/reasoning-modes`);
      if (response.data.status === 'success') {
        setReasoningModes(response.data.reasoning_modes);
      }
    } catch (error) {
      console.error('Error loading reasoning modes:', error);
      // Fallback –Ω–∞ –º–æ–∫-–¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      setReasoningModes({
        "fast": {
          "name": "–ë—ã—Å—Ç—Ä—ã–π",
          "description": "–ö—Ä–∞—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã, –ø—Ä–æ—Å—Ç—ã–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è",
          "temperature": 0.4,
          "max_tokens": 1024,
          "estimated_time": "5-15 —Å–µ–∫—É–Ω–¥"
        },
        "balanced": {
          "name": "–°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π",
          "description": "–ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Å –ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è–º–∏",
          "temperature": 0.6,
          "max_tokens": 2048,
          "estimated_time": "15-30 —Å–µ–∫—É–Ω–¥"
        },
        "deep": {
          "name": "–ì–ª—É–±–æ–∫–∏–π",
          "description": "–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å –ø–æ—à–∞–≥–æ–≤—ã–º–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è–º–∏",
          "temperature": 0.7,
          "max_tokens": 3072,
          "estimated_time": "30-60 —Å–µ–∫—É–Ω–¥"
        },
        "turbo": {
          "name": "–¢—É—Ä–±–æ",
          "description": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã",
          "temperature": 0.3,
          "max_tokens": 1024,
          "estimated_time": "3-10 —Å–µ–∫—É–Ω–¥"
        }
      });
    }
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
  const sendMessage = async (content) => {
    if (!content.trim() || !selectedModel) return;
    if (!isAuthenticated || !authToken) {
      console.log('sendMessage: –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', { isAuthenticated, authToken: !!authToken });
      return;
    }

    const userMessage = {
      id: Date.now(),
      role: 'user',
      content: content,
      timestamp: new Date().toISOString()
    };

    setMessages(prev => [...prev, userMessage]);
    setIsLoading(true);
    setError(null);

    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º RAG —Å–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ç—É—Ä–±–æ —Ä–µ–∂–∏–º–∞
      const response = await axios.post(`/rag/chat`, {
        message: content,
        model: selectedModel,
        turbo_mode: turboMode,
        reasoning_depth: reasoningDepth
      }, {
        timeout: 120000 // 2 –º–∏–Ω—É—Ç—ã
      });

      if (response.data.status === 'success') {
        const assistantMessage = {
          id: Date.now() + 1,
          role: 'assistant',
          content: response.data.response,
          timestamp: new Date().toISOString(),
          usage: {
            prompt_tokens: response.data.prompt_tokens || 0,
            completion_tokens: response.data.response_tokens || 0,
            total_tokens: response.data.tokens_used || 0
          },
          // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —Ç—É—Ä–±–æ —Ä–µ–∂–∏–º–∞
          turbo_mode: response.data.turbo_mode || false,
          reasoning_depth: response.data.reasoning_depth || 'balanced',
          reasoning_steps: response.data.reasoning_steps || 0,
          generation_time_ms: response.data.generation_time_ms || 0
        };

        setMessages(prev => [...prev, assistantMessage]);
      } else {
        throw new Error(response.data.response || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞');
      }
    } catch (error) {
      setError('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è');
      console.error('Error sending message:', error);
    } finally {
      setIsLoading(false);
    }
  };

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ñ–∞–π–ª–æ–º
  const sendMessageWithFile = async (formData, fileName) => {
    if (!isAuthenticated || !authToken) {
      setError('–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
      return;
    }

    const userMessage = {
      id: Date.now(),
      role: 'user',
      content: `üìé ${fileName}\n${formData.get('message') || '–û–±—Ä–∞–±–æ—Ç–∞–π —ç—Ç–æ—Ç —Ñ–∞–π–ª'}`,
      timestamp: new Date().toISOString()
    };

    setMessages(prev => [...prev, userMessage]);
    setIsLoading(true);
    setError(null);

    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é –≤ VLLM —Å–µ—Ä–≤–∏—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
      const response = await axios.post(`http://localhost:8005/chat_with_document`, formData, {
        headers: { 
          'Content-Type': 'multipart/form-data'
        },
        timeout: 600000 // 10 –º–∏–Ω—É—Ç –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
      });

      if (response.data.status === 'success') {
        const assistantMessage = {
          id: Date.now() + 1,
          role: 'assistant',
          content: response.data.ai_response.response,
          timestamp: new Date().toISOString(),
          usage: {
            prompt_tokens: response.data.ai_response.prompt_tokens || 0,
            completion_tokens: response.data.ai_response.response_tokens || 0,
            total_tokens: response.data.ai_response.tokens_used || 0
          },
          document_info: {
            document_id: response.data.document_id,
            file_name: response.data.file_name,
            chunks_count: response.data.chunks_count
          }
        };

        setMessages(prev => [...prev, assistantMessage]);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ
        console.log(`‚úÖ –î–æ–∫—É–º–µ–Ω—Ç ${fileName} –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ:`, {
          document_id: response.data.document_id,
          chunks_count: response.data.chunks_count
        });
      } else {
        throw new Error(response.data.error || '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞');
      }
    } catch (error) {
      console.error('Error processing document:', error);
      
      let errorMessage = '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞';
      if (error.response?.data?.error) {
        errorMessage = error.response.data.error;
      } else if (error.message) {
        errorMessage = error.message;
      }
      
      setError(errorMessage);
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —á–∞—Ç
      const errorMessageObj = {
        id: Date.now() + 1,
        role: 'assistant',
        content: `‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${errorMessage}`,
        timestamp: new Date().toISOString(),
        isError: true
      };
      
      setMessages(prev => [...prev, errorMessageObj]);
    } finally {
      setIsLoading(false);
    }
  };

  // –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
  const clearChat = () => {
    setMessages([]);
    setError(null);
  };

  useEffect(() => {
    console.log('üîç [DEBUG] App.js: Initial useEffect triggered');
    console.log('üîç [DEBUG] App.js: Current auth state:', { isAuthenticated, authToken: !!authToken });
    
    const initializeApp = async () => {
      setIsLoading(true);
      console.log('üîç [DEBUG] App.js: Starting app initialization');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –≤—Å–µ–≥–¥–∞
      await checkSystemStatus();
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã
      if (isAuthenticated && authToken) {
        console.log('üîç [DEBUG] App.js: User is authenticated, loading models');
        await loadModels();
        await loadReasoningModes();
      } else {
        console.log('üîç [DEBUG] App.js: User is not authenticated, skipping models load');
      }
      
      setIsLoading(false);
      console.log('üîç [DEBUG] App.js: App initialization completed');
    };
    initializeApp();
  }, [isAuthenticated, authToken]);

  console.log('üîç [DEBUG] App.js: Rendering with currentPage:', currentPage, 'isLoading:', isLoading);

  return (
    <div className="min-h-screen bg-gray-50 flex">
      {/* Mobile overlay */}
      {isSidebarOpen && (
        <div 
          className="fixed inset-0 bg-gray-600 bg-opacity-75 z-40 lg:hidden"
          onClick={() => setIsSidebarOpen(false)}
        />
      )}

      {/* Sidebar */}
      <div className={`fixed inset-y-0 left-0 z-50 lg:static lg:z-auto ${isSidebarOpen ? 'block' : 'hidden'} lg:block`}>
        <Sidebar
          currentPage={currentPage}
          onPageChange={setCurrentPage}
          systemStatus={systemStatus}
          isAuthenticated={isAuthenticated}
          userInfo={userInfo}
          authMethod={authMethod}
          onLogout={handleLogout}
          onClose={() => setIsSidebarOpen(false)}
        />
      </div>

      {/* Main Content */}
      <div className="flex-1 flex flex-col">
        {/* Header */}
        <Header
          currentPage={currentPage}
          onToggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}
          isSidebarOpen={isSidebarOpen}
          onSystemSettingsClick={() => setShowSystemSettings(true)}
        />

        {/* Page Content */}
        <main className="flex-1 p-6">
          {currentPage === 'dashboard' && (
            <DashboardPage
              systemStatus={systemStatus}
              models={models}
              isAuthenticated={isAuthenticated}
              userInfo={userInfo}
              authMethod={authMethod}
              onPageChange={setCurrentPage}
            />
          )}

          {currentPage === 'chat' && (
            <ChatPage
              models={models}
              selectedModel={selectedModel}
              onModelSelect={setSelectedModel}
              onRefreshModels={loadModels}
              messages={messages}
              onSendMessage={sendMessage}
              onSendMessageWithFile={sendMessageWithFile}
              isLoading={isLoading}
              error={error}
              onClearChat={clearChat}
              isAuthenticated={isAuthenticated}
              showSettings={showSettings}
              SettingsPanel={
                <SettingsPanel
                  onClose={() => setShowSettings(false)}
                  systemStatus={systemStatus}
                  onRefreshStatus={checkSystemStatus}
                />
              }
              // –¢—É—Ä–±–æ —Ä–µ–∂–∏–º —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è
              turboMode={turboMode}
              onTurboModeChange={setTurboMode}
              reasoningDepth={reasoningDepth}
              onReasoningDepthChange={setReasoningDepth}
              reasoningModes={reasoningModes}
            />
          )}

          {currentPage === 'outgoing-control' && (
            <OutgoingControlPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'normcontrol' && (
            <NormcontrolPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
              refreshTrigger={refreshTabs}
              onRefreshComplete={() => setRefreshTabs(false)}
            />
          )}

          {currentPage === 'calculations' && (
            <CalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'structural-calculations' && (
            <StructuralCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'foundation-calculations' && (
            <FoundationCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'degasification-calculations' && (
            <DegasificationCalculationsPage />
          )}

          {currentPage === 'electrical-calculations' && (
            <CalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
              calculationType="electrical"
            />
          )}

          {currentPage === 'mechanical-calculations' && (
            <CalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
              calculationType="mechanical"
            />
          )}

          {currentPage === 'foundation-calculations' && (
            <FoundationCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'thermal-calculations' && (
            <ThermalCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'ventilation-calculations' && (
            <VentilationCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'electrical-calculations' && (
            <ElectricalCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'water-supply-calculations' && (
            <WaterSupplyCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'fire-safety-calculations' && (
            <FireSafetyCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'acoustic-calculations' && (
            <AcousticCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'lighting-calculations' && (
            <LightingCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'geological-calculations' && (
            <GeologicalCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'uav-protection-calculations' && (
            <UAVProtectionCalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}

          {currentPage === 'safety-calculations' && (
            <CalculationsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
              calculationType="safety"
            />
          )}

          {currentPage === 'documents' && (
            <DocumentsPage
              isAuthenticated={isAuthenticated}
              authToken={authToken}
              refreshTrigger={refreshTabs}
              onRefreshComplete={() => setRefreshTabs(false)}
            />
          )}

          {currentPage === 'ntd-consultation' && (
            <NTDConsultation
              isAuthenticated={isAuthenticated}
              authToken={authToken}
            />
          )}
        </main>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω–æ */}
      {/* <AuthModal
        isOpen={showAuthModal}
        onClose={() => setShowAuthModal(false)}
        onAuthSuccess={handleAuthSuccess}
      /> */}

      {/* –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <SystemSettings
        isOpen={showSystemSettings}
        onClose={() => setShowSystemSettings(false)}
        authToken={authToken}
      />
    </div>
  );
}

export default App;
