import React, { useState, useEffect } from 'react';
import { 
  Calculator, 
  FileText, 
  BookOpen, 
  Settings, 
  Play, 
  Download, 
  Upload,
  Save,
  Trash2,
  Eye,
  Edit,
  Plus,
  Search,
  Filter,
  SortAsc,
  SortDesc,
  Calendar,
  User,
  Clock,
  CheckCircle,
  AlertCircle,
  Info,
  X,
  Shield,
  Zap,
  Target
} from 'lucide-react';

const UAVProtectionCalculationsPage = ({ isAuthenticated, authToken }) => {
  const [calculations, setCalculations] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [success, setSuccess] = useState(null);
  const [selectedCalculation, setSelectedCalculation] = useState(null);
  const [showNewCalculationModal, setShowNewCalculationModal] = useState(false);
  const [showViewCalculationModal, setShowViewCalculationModal] = useState(false);
  const [viewingCalculation, setViewingCalculation] = useState(null);
  const [selectedCalculationType, setSelectedCalculationType] = useState(null);
  const [calculationParameters, setCalculationParameters] = useState({});
  const [searchTerm, setSearchTerm] = useState('');
  const [filterType, setFilterType] = useState('all');
  const [sortBy, setSortBy] = useState('date');
  const [sortOrder, setSortOrder] = useState('desc');

  // API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  const API_BASE = process.env.REACT_APP_API_BASE || '/api';

  // –¢–∏–ø—ã —Ä–∞—Å—á–µ—Ç–æ–≤ –∑–∞—â–∏—Ç—ã –æ—Ç –ë–ü–õ–ê
  const calculationTypes = [
    {
      id: 'shock_wave',
      name: '–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã',
      description: '–†–∞—Å—á–µ—Ç –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã –æ—Ç –≤–∑—Ä—ã–≤–∞ –ë–ü–õ–ê –Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
      norms: ['–°–ü 542.1325800.2024', '–°–ü 1.13130.2020', '–°–ü 20.13330.2016'],
      icon: 'üí•',
      parameters: [
        { name: 'explosive_mass', label: '–ú–∞—Å—Å–∞ –í–í', unit: '–∫–≥', type: 'number', required: true },
        { name: 'distance', label: '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –æ–±—ä–µ–∫—Ç–∞', unit: '–º', type: 'number', required: true },
        { name: 'explosive_type', label: '–¢–∏–ø –≤–∑—Ä—ã–≤—á–∞—Ç–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞', unit: '', type: 'select', required: true, options: [
          { value: 'TNT', label: '–¢–ù–¢ (—Ç—Ä–∏–Ω–∏—Ç—Ä–æ—Ç–æ–ª—É–æ–ª)' },
          { value: 'RDX', label: '–†–î–• (–≥–µ–∫—Å–æ–≥–µ–Ω)' },
          { value: 'PETN', label: '–ü–≠–¢–ù (–ø–µ–Ω—Ç–∞—ç—Ä–∏—Ç—Ä–∏—Ç—Ç–µ—Ç—Ä–∞–Ω–∏—Ç—Ä–∞—Ç)' },
          { value: 'HMX', label: '–ì–ú–• (–æ–∫—Ç–æ–≥–µ–Ω)' }
        ]},
        { name: 'explosion_height', label: '–í—ã—Å–æ—Ç–∞ –≤–∑—Ä—ã–≤–∞', unit: '–º', type: 'number', required: true },
        { name: 'structure_material', label: '–ú–∞—Ç–µ—Ä–∏–∞–ª –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', unit: '', type: 'select', required: true, options: [
          { value: 'concrete', label: '–ë–µ—Ç–æ–Ω' },
          { value: 'steel', label: '–°—Ç–∞–ª—å' },
          { value: 'brick', label: '–ö–∏—Ä–ø–∏—á' },
          { value: 'wood', label: '–î–µ—Ä–µ–≤–æ' }
        ]},
        { name: 'structure_thickness', label: '–¢–æ–ª—â–∏–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', unit: '–º–º', type: 'number', required: true }
      ]
    },
    {
      id: 'impact_penetration',
      name: '–ü–æ–ø–∞–¥–∞–Ω–∏–µ –ë–ü–õ–ê –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é',
      description: '–†–∞—Å—á–µ—Ç –ø—Ä–æ–Ω–∏–∫–∞—é—â–µ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ë–ü–õ–ê –∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
      norms: ['–°–ü 542.1325800.2024', '–°–ü 20.13330.2016', '–°–ü 16.13330.2017'],
      icon: 'üéØ',
      parameters: [
        { name: 'uav_velocity', label: '–°–∫–æ—Ä–æ—Å—Ç—å –ë–ü–õ–ê', unit: '–º/—Å', type: 'number', required: true },
        { name: 'uav_mass', label: '–ú–∞—Å—Å–∞ –ë–ü–õ–ê', unit: '–∫–≥', type: 'number', required: true },
        { name: 'uav_material', label: '–ú–∞—Ç–µ—Ä–∏–∞–ª –ë–ü–õ–ê', unit: '', type: 'select', required: true, options: [
          { value: 'aluminum', label: '–ê–ª—é–º–∏–Ω–∏–π' },
          { value: 'carbon_fiber', label: '–£–≥–ª–µ—Ä–æ–¥–Ω–æ–µ –≤–æ–ª–æ–∫–Ω–æ' },
          { value: 'steel', label: '–°—Ç–∞–ª—å' },
          { value: 'plastic', label: '–ü–ª–∞—Å—Ç–∏–∫' }
        ]},
        { name: 'structure_material', label: '–ú–∞—Ç–µ—Ä–∏–∞–ª –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', unit: '', type: 'select', required: true, options: [
          { value: 'concrete', label: '–ë–µ—Ç–æ–Ω' },
          { value: 'steel', label: '–°—Ç–∞–ª—å' },
          { value: 'brick', label: '–ö–∏—Ä–ø–∏—á' },
          { value: 'wood', label: '–î–µ—Ä–µ–≤–æ' }
        ]},
        { name: 'structure_thickness', label: '–¢–æ–ª—â–∏–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', unit: '–º–º', type: 'number', required: true },
        { name: 'structure_strength', label: '–ü—Ä–æ—á–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞', unit: '–ú–ü–∞', type: 'number', required: true },
        { name: 'impact_angle', label: '–£–≥–æ–ª —É–¥–∞—Ä–∞', unit: '–≥—Ä–∞–¥', type: 'number', required: true, min: 0, max: 90 }
      ]
    }
  ];

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
  const fetchCalculations = async () => {
    if (!isAuthenticated || !authToken) {
      console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: Not authenticated, skipping fetch');
      return;
    }

    setLoading(true);
    try {
      const response = await fetch(`${API_BASE}/calculations?type=uav_protection`, {
        headers: {
          'Authorization': `Bearer ${authToken}`,
          'Content-Type': 'application/json'
        }
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();
      console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: Fetched calculations:', data);
      setCalculations(data);
    } catch (error) {
      console.error('Error fetching calculations:', error);
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—á–µ—Ç–æ–≤: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞
  const handleNewCalculation = (calculationType) => {
    if (!isAuthenticated || !authToken) {
      setError('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤');
      return;
    }

    const typeConfig = calculationTypes.find(type => type.id === calculationType);
    setSelectedCalculationType(typeConfig);
    setCalculationParameters({});
    setShowNewCalculationModal(true);
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
  const createCalculationWithParameters = async () => {
    if (!selectedCalculationType) return;

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    const requiredFields = selectedCalculationType.parameters.filter(param => param.required);
    const missingFields = requiredFields.filter(param => 
      !calculationParameters[param.name] || 
      calculationParameters[param.name] === '' ||
      calculationParameters[param.name] === null ||
      calculationParameters[param.name] === undefined
    );

    if (missingFields.length > 0) {
      alert(`–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:\n${missingFields.map(field => `‚Ä¢ ${field.label}`).join('\n')}`);
      setLoading(false);
      return;
    }

    setLoading(true);
    try {
      const response = await fetch(`${API_BASE}/calculations`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${authToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          type: 'uav_protection',
          category: selectedCalculationType.id,
          name: `–†–∞—Å—á–µ—Ç –∑–∞—â–∏—Ç—ã –æ—Ç –ë–ü–õ–ê - ${selectedCalculationType.name} - ${new Date().toLocaleString()}`,
          description: `–ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç ${selectedCalculationType.name.toLowerCase()}`,
          parameters: {
            calculation_subtype: selectedCalculationType.id,
            ...calculationParameters
          }
        })
      });

      if (!response.ok) {
        const errorText = await response.text();
        console.error('üîç [DEBUG] Response error:', errorText);
        let errorData;
        try {
          errorData = JSON.parse(errorText);
        } catch (e) {
          throw new Error(`HTTP error! status: ${response.status}, response: ${errorText}`);
        }
        throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);
      }

      const newCalculation = await response.json();
      console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: Created calculation:', newCalculation);
      
      setSuccess('–†–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
      setShowNewCalculationModal(false);
      setSelectedCalculationType(null);
      setCalculationParameters({});
      fetchCalculations();
    } catch (error) {
      console.error('Error creating calculation:', error);
      setError('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞
  const executeCalculation = async (calculationId, parameters) => {
    if (!isAuthenticated || !authToken) {
      setError('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤');
      return;
    }

    setLoading(true);
    try {
      const response = await fetch(`${API_BASE}/calculations/${calculationId}/execute`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${authToken}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ parameters })
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.detail || `HTTP error! status: ${response.status}`);
      }

      const result = await response.json();
      console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: Calculation result:', result);
      
      setSuccess('–†–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω');
      fetchCalculations();
    } catch (error) {
      console.error('Error executing calculation:', error);
      setError('–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  // –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å—á–µ—Ç–∞
  const handleViewCalculation = async (calculation) => {
    try {
      console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: Viewing calculation:', calculation);
      let calculationToView = { ...calculation };
      
      // –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç
      if (!calculation.result || Object.keys(calculation.result).length === 0) {
        console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: No result found for viewing, executing calculation...');
        setLoading(true);
        try {
          const response = await fetch(`${API_BASE}/calculations/${calculation.id}/execute`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${authToken}`
            },
            body: JSON.stringify({ parameters: calculation.parameters })
          });
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          const result = await response.json();
          calculationToView.result = result;
          console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: Calculation executed, result:', result);
        } catch (error) {
          console.error('Error executing calculation for viewing:', error);
          setError('–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞: ' + error.message);
          return;
        } finally {
          setLoading(false);
        }
      }
      
      setViewingCalculation(calculationToView);
      setShowViewCalculationModal(true);
    } catch (error) {
      console.error('Error viewing calculation:', error);
      setError('–û—à–∏–±–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å—á–µ—Ç–∞: ' + error.message);
    }
  };

  // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ DOCX
  const handleDownloadCalculation = async (calculation) => {
    try {
      console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: Downloading calculation:', calculation);
      let calculationData = { ...calculation };
      
      // –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç
      if (!calculation.result || Object.keys(calculation.result).length === 0) {
        console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: No result found, executing calculation...');
        setLoading(true);
        try {
          const response = await fetch(`${API_BASE}/calculations/${calculation.id}/execute`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${authToken}`
            },
            body: JSON.stringify({ parameters: calculation.parameters })
          });
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          const result = await response.json();
          calculationData.result = result;
          console.log('üîç [DEBUG] UAVProtectionCalculationsPage.js: Calculation executed for download, result:', result);
        } catch (error) {
          console.error('Error executing calculation for download:', error);
          setError('–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞: ' + error.message);
          return;
        } finally {
          setLoading(false);
        }
      }

      // –°–æ–∑–¥–∞–µ–º DOCX –æ—Ç—á–µ—Ç
      await generateDOCXReport(calculationData);
      
    } catch (error) {
      console.error('Error downloading calculation:', error);
      setError('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞: ' + error.message);
    }
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è DOCX –æ—Ç—á–µ—Ç–∞
  const generateDOCXReport = async (calculationData) => {
    try {
      // –°–æ–∑–¥–∞–µ–º HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è –æ—Ç—á–µ—Ç–∞
      const reportHTML = `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="UTF-8">
          <title>–û—Ç—á–µ—Ç –ø–æ —Ä–∞—Å—á–µ—Ç—É –∑–∞—â–∏—Ç—ã –æ—Ç –ë–ü–õ–ê</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            .header { text-align: center; margin-bottom: 30px; }
            .title { font-size: 24px; font-weight: bold; color: #2c3e50; }
            .subtitle { font-size: 16px; color: #7f8c8d; margin-top: 10px; }
            .section { margin: 20px 0; }
            .section-title { font-size: 18px; font-weight: bold; color: #34495e; margin-bottom: 15px; border-bottom: 2px solid #3498db; padding-bottom: 5px; }
            .parameter { margin: 10px 0; display: flex; justify-content: space-between; }
            .parameter-label { font-weight: bold; color: #2c3e50; }
            .parameter-value { color: #34495e; }
            .result { background-color: #ecf0f1; padding: 15px; border-radius: 5px; margin: 10px 0; }
            .result-item { margin: 8px 0; display: flex; justify-content: space-between; }
            .result-label { font-weight: bold; color: #27ae60; }
            .result-value { color: #2c3e50; font-weight: bold; }
            .status-item { background-color: #e3f2fd; padding: 10px; border-radius: 5px; margin: 10px 0; }
            .status-–≤—ã–ø–æ–ª–Ω–µ–Ω { color: #2e7d32; font-weight: bold; }
            .status-–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è { color: #f57c00; font-weight: bold; }
            .status-–æ—à–∏–±–∫–∞ { color: #d32f2f; font-weight: bold; }
            .status-–æ–∂–∏–¥–∞–µ—Ç—Å—è { color: #616161; font-weight: bold; }
            .conclusions-item { background-color: #f3e5f5; padding: 10px; border-radius: 5px; margin: 10px 0; }
            .conclusions-item .result-value { display: block; margin-top: 5px; }
            .footer { margin-top: 40px; text-align: center; color: #7f8c8d; font-size: 12px; }
            .calculation-type { background-color: #3498db; color: white; padding: 10px; border-radius: 5px; margin: 15px 0; text-align: center; }
          </style>
        </head>
        <body>
          <div class="header">
            <div class="title">–û—Ç—á–µ—Ç –ø–æ —Ä–∞—Å—á–µ—Ç—É –∑–∞—â–∏—Ç—ã –æ—Ç –ë–ü–õ–ê</div>
            <div class="subtitle">${calculationData.name}</div>
            <div class="subtitle">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date(calculationData.created_at).toLocaleString('ru-RU')}</div>
          </div>

          <div class="calculation-type">
            <strong>–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞:</strong> ${calculationData.category === 'shock_wave' ? '–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã' : '–ü–æ–ø–∞–¥–∞–Ω–∏–µ –ë–ü–õ–ê –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é'}
          </div>

          <div class="section">
            <div class="section-title">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á–µ—Ç–∞</div>
            ${Object.entries(calculationData.parameters || {}).map(([key, value]) => {
              const paramLabel = getParameterLabel(key, calculationData.category);
              return `<div class="parameter">
                <span class="parameter-label">${paramLabel}:</span>
                <span class="parameter-value">${value}</span>
              </div>`;
            }).join('')}
          </div>

          ${calculationData.result ? `
          <div class="section">
            <div class="section-title">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞</div>
            <div class="result">
              ${calculationData.result.calculation_status ? `
                <div class="result-item status-item">
                  <span class="result-label">–°—Ç–∞—Ç—É—Å —Ä–∞—Å—á–µ—Ç–∞:</span>
                  <span class="result-value status-${calculationData.result.calculation_status.toLowerCase().replace(' ', '-')}">${calculationData.result.calculation_status}</span>
                </div>
              ` : ''}
              
              ${calculationData.result.conclusions ? `
                <div class="result-item conclusions-item">
                  <span class="result-label">–í—ã–≤–æ–¥—ã:</span>
                  <div class="result-value">
                    ${Array.isArray(calculationData.result.conclusions) 
                      ? calculationData.result.conclusions.map(conclusion => `<div>‚Ä¢ ${conclusion}</div>`).join('')
                      : calculationData.result.conclusions
                    }
                  </div>
                </div>
              ` : ''}
              
              ${Object.entries(calculationData.result)
                .filter(([key]) => key !== 'calculation_status' && key !== 'conclusions')
                .map(([key, value]) => {
                  const resultLabel = getResultLabel(key);
                  return `<div class="result-item">
                    <span class="result-label">${resultLabel}:</span>
                    <span class="result-value">${value}</span>
                  </div>`;
                }).join('')}
            </div>
          </div>
          ` : `
          <div class="section">
            <div class="section-title">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞</div>
            <div class="result">
              <div class="result-item">
                <span class="result-label">–°—Ç–∞—Ç—É—Å:</span>
                <span class="result-value">–†–∞—Å—á–µ—Ç –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω</span>
              </div>
            </div>
          </div>
          `}

          <div class="footer">
            <p>–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–∏—Å—Ç–µ–º–æ–π AI-NK</p>
            <p>–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${new Date().toLocaleString('ru-RU')}</p>
          </div>
        </body>
        </html>
      `;

      // –°–æ–∑–¥–∞–µ–º Blob —Å HTML —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
      const htmlBlob = new Blob([reportHTML], { type: 'text/html;charset=utf-8' });
      
      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const url = URL.createObjectURL(htmlBlob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `uav_protection_calculation_${calculationData.id}_${new Date().toISOString().split('T')[0]}.html`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(url);

      setSuccess('–û—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω');
    } catch (error) {
      console.error('Error generating DOCX report:', error);
      setError('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: ' + error.message);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–∏—Ç–∞–µ–º—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  const getParameterLabel = (key, calculationType = null) => {
    const labels = {
      'calculation_subtype': '–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞',
      'explosive_mass': '–ú–∞—Å—Å–∞ –í–í (–∫–≥)',
      'uav_mass': '–ú–∞—Å—Å–∞ –ë–ü–õ–ê (–∫–≥)',
      'distance': '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –æ–±—ä–µ–∫—Ç–∞ (–º)',
      'explosive_type': '–¢–∏–ø –≤–∑—Ä—ã–≤—á–∞—Ç–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞',
      'explosion_height': '–í—ã—Å–æ—Ç–∞ –≤–∑—Ä—ã–≤–∞ (–º)',
      'structure_material': '–ú–∞—Ç–µ—Ä–∏–∞–ª –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
      'structure_thickness': '–¢–æ–ª—â–∏–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (–º–º)',
      'uav_velocity': '–°–∫–æ—Ä–æ—Å—Ç—å –ë–ü–õ–ê (–º/—Å)',
      'uav_material': '–ú–∞—Ç–µ—Ä–∏–∞–ª –ë–ü–õ–ê',
      'structure_strength': '–ü—Ä–æ—á–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (–ú–ü–∞)',
      'impact_angle': '–£–≥–æ–ª —É–¥–∞—Ä–∞ (–≥—Ä–∞–¥)'
    };
    return labels[key] || key;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–∏—Ç–∞–µ–º—ã—Ö –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const getResultLabel = (key) => {
    const labels = {
      'shock_pressure': '–î–∞–≤–ª–µ–Ω–∏–µ —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã (–∫–ü–∞)',
      'shock_velocity': '–°–∫–æ—Ä–æ—Å—Ç—å —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã (–º/—Å)',
      'damage_level': '–£—Ä–æ–≤–µ–Ω—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π',
      'penetration_depth': '–ì–ª—É–±–∏–Ω–∞ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è (–º–º)',
      'impact_force': '–°–∏–ª–∞ —É–¥–∞—Ä–∞ (–ù)',
      'structural_damage': '–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
      'safety_factor': '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
      'recommendations': '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏',
      'calculation_status': '–°—Ç–∞—Ç—É—Å —Ä–∞—Å—á–µ—Ç–∞',
      'conclusions': '–í—ã–≤–æ–¥—ã'
    };
    return labels[key] || key;
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞
  const deleteCalculation = async (calculationId) => {
    if (!isAuthenticated || !authToken) {
      setError('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–æ–≤');
      return;
    }

    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ä–∞—Å—á–µ—Ç?')) {
      return;
    }

    setLoading(true);
    try {
      const response = await fetch(`${API_BASE}/calculations/${calculationId}`, {
        method: 'DELETE',
        headers: {
          'Authorization': `Bearer ${authToken}`,
          'Content-Type': 'application/json'
        }
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      setSuccess('–†–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
      fetchCalculations();
    } catch (error) {
      console.error('Error deleting calculation:', error);
      setError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
  const filteredCalculations = calculations
    .filter(calc => {
      const matchesSearch = calc.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           calc.description.toLowerCase().includes(searchTerm.toLowerCase());
      const matchesFilter = filterType === 'all' || calc.type === filterType;
      return matchesSearch && matchesFilter;
    })
    .sort((a, b) => {
      let aValue, bValue;
      switch (sortBy) {
        case 'name':
          aValue = a.name.toLowerCase();
          bValue = b.name.toLowerCase();
          break;
        case 'date':
          aValue = new Date(a.created_at);
          bValue = new Date(b.created_at);
          break;
        case 'status':
          aValue = a.status;
          bValue = b.status;
          break;
        default:
          aValue = a.name.toLowerCase();
          bValue = b.name.toLowerCase();
      }

      if (sortOrder === 'asc') {
        return aValue > bValue ? 1 : -1;
      } else {
        return aValue < bValue ? 1 : -1;
      }
    });

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    fetchCalculations();
  }, [isAuthenticated, authToken]);

  // –û—á–∏—Å—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
  useEffect(() => {
    if (error || success) {
      const timer = setTimeout(() => {
        setError(null);
        setSuccess(null);
      }, 5000);
      return () => clearTimeout(timer);
    }
  }, [error, success]);

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="mb-8">
          <div className="flex items-center mb-4">
            <Shield className="w-8 h-8 text-blue-600 mr-3" />
            <h1 className="text-3xl font-bold text-gray-900">–ó–∞—â–∏—Ç–∞ –æ—Ç –ë–ü–õ–ê</h1>
          </div>
          <p className="text-gray-600 text-lg">
            –†–∞—Å—á–µ—Ç—ã –∑–∞—â–∏—Ç—ã –æ—Ç –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è –±–µ—Å–ø–∏–ª–æ—Ç–Ω—ã—Ö –ª–µ—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –∞–ø–ø–∞—Ä–∞—Ç–æ–≤
          </p>
          <div className="mt-4 flex flex-wrap gap-2">
            <span className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
              –°–ü 542.1325800.2024
            </span>
            <span className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
              –°–ü 1.13130.2020
            </span>
            <span className="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm">
              –°–ü 2.13130.2020
            </span>
          </div>
        </div>

        {/* –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∏ —É—Å–ø–µ—Ö–µ */}
        {error && (
          <div className="mb-6 bg-red-50 border border-red-200 rounded-md p-4">
            <div className="flex">
              <AlertCircle className="w-5 h-5 text-red-400 mr-3" />
              <div className="text-red-800">{error}</div>
            </div>
          </div>
        )}

        {success && (
          <div className="mb-6 bg-green-50 border border-green-200 rounded-md p-4">
            <div className="flex">
              <CheckCircle className="w-5 h-5 text-green-400 mr-3" />
              <div className="text-green-800">{success}</div>
            </div>
          </div>
        )}

        {/* –¢–∏–ø—ã —Ä–∞—Å—á–µ—Ç–æ–≤ */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
          {calculationTypes.map((type) => (
            <div key={type.id} className="bg-white rounded-lg shadow-md p-6 border border-gray-200">
              <div className="flex items-center mb-4">
                <span className="text-3xl mr-3">{type.icon}</span>
                <div>
                  <h3 className="text-xl font-semibold text-gray-900">{type.name}</h3>
                  <p className="text-gray-600">{type.description}</p>
                </div>
              </div>
              
              <div className="mb-4">
                <h4 className="text-sm font-medium text-gray-700 mb-2">–ü—Ä–∏–º–µ–Ω—è–µ–º—ã–µ –Ω–æ—Ä–º—ã:</h4>
                <div className="flex flex-wrap gap-1">
                  {type.norms.map((norm, index) => (
                    <span key={index} className="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs">
                      {norm}
                    </span>
                  ))}
                </div>
              </div>

              <div className="mb-4">
                <h4 className="text-sm font-medium text-gray-700 mb-2">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á–µ—Ç–∞:</h4>
                <ul className="text-sm text-gray-600 space-y-1">
                  {type.parameters.slice(0, 3).map((param, index) => (
                    <li key={index} className="flex items-center">
                      <span className="w-2 h-2 bg-blue-400 rounded-full mr-2"></span>
                      {param.label} ({param.unit})
                    </li>
                  ))}
                  {type.parameters.length > 3 && (
                    <li className="text-gray-500">–∏ –µ—â–µ {type.parameters.length - 3} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...</li>
                  )}
                </ul>
              </div>
              
              <button 
                className="w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center justify-center"
                onClick={() => handleNewCalculation(type.id)}
                disabled={loading}
              >
                <Plus className="w-4 h-4 mr-2" />
                –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—á–µ—Ç
              </button>
            </div>
          ))}
        </div>

        {/* –°–ø–∏—Å–æ–∫ —Ä–∞—Å—á–µ—Ç–æ–≤ */}
        <div className="bg-white rounded-lg shadow-md">
          <div className="px-6 py-4 border-b border-gray-200">
            <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between">
              <h2 className="text-xl font-semibold text-gray-900 mb-4 sm:mb-0">
                –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã
              </h2>
              
              <div className="flex flex-col sm:flex-row gap-4">
                {/* –ü–æ–∏—Å–∫ */}
                <div className="relative">
                  <Search className="w-5 h-5 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
                  <input
                    type="text"
                    placeholder="–ü–æ–∏—Å–∫ —Ä–∞—Å—á–µ—Ç–æ–≤..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                  />
                </div>

                {/* –§–∏–ª—å—Ç—Ä */}
                <select
                  value={filterType}
                  onChange={(e) => setFilterType(e.target.value)}
                  className="px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                >
                  <option value="all">–í—Å–µ —Ç–∏–ø—ã</option>
                  <option value="shock_wave">–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã</option>
                  <option value="impact_penetration">–ü–æ–ø–∞–¥–∞–Ω–∏–µ –ë–ü–õ–ê –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é</option>
                </select>

                {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
                <button
                  onClick={() => setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc')}
                  className="px-3 py-2 border border-gray-300 rounded-md hover:bg-gray-50 flex items-center"
                >
                  {sortOrder === 'asc' ? <SortAsc className="w-4 h-4" /> : <SortDesc className="w-4 h-4" />}
                </button>
              </div>
            </div>
          </div>

          <div className="divide-y divide-gray-200">
            {loading ? (
              <div className="p-6 text-center">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto"></div>
                <p className="mt-2 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤...</p>
              </div>
            ) : filteredCalculations.length === 0 ? (
              <div className="p-6 text-center text-gray-500">
                <Calculator className="w-12 h-12 mx-auto mb-4 text-gray-300" />
                <p>–†–∞—Å—á–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
              </div>
            ) : (
              filteredCalculations.map((calculation) => (
                <div key={calculation.id} className="p-6 hover:bg-gray-50">
                  <div className="flex items-center justify-between">
                    <div className="flex-1">
                      <div className="flex items-center mb-2">
                        <h3 className="text-lg font-medium text-gray-900">{calculation.name}</h3>
                        <span className={`ml-3 px-2 py-1 rounded-full text-xs font-medium ${
                          calculation.status === 'completed' 
                            ? 'bg-green-100 text-green-800' 
                            : calculation.status === 'pending'
                            ? 'bg-yellow-100 text-yellow-800'
                            : 'bg-red-100 text-red-800'
                        }`}>
                          {calculation.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω' : 
                           calculation.status === 'pending' ? '–í –æ–∂–∏–¥–∞–Ω–∏–∏' : '–û—à–∏–±–∫–∞'}
                        </span>
                      </div>
                      <p className="text-gray-600 mb-2">{calculation.description}</p>
                      <div className="flex items-center text-sm text-gray-500">
                        <Calendar className="w-4 h-4 mr-1" />
                        <span className="mr-4">
                          {new Date(calculation.created_at).toLocaleDateString('ru-RU')}
                        </span>
                        <Clock className="w-4 h-4 mr-1" />
                        <span>
                          {new Date(calculation.created_at).toLocaleTimeString('ru-RU')}
                        </span>
                      </div>
                    </div>
                    
                    <div className="flex items-center space-x-2">
                      <button
                        onClick={() => handleViewCalculation(calculation)}
                        className="text-blue-600 hover:text-blue-900"
                        title="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å—á–µ—Ç"
                      >
                        <Eye className="w-5 h-5" />
                      </button>
                      <button
                        onClick={() => handleDownloadCalculation(calculation)}
                        className="text-green-600 hover:text-green-900"
                        title="–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
                      >
                        <Download className="w-5 h-5" />
                      </button>
                      <button
                        onClick={() => deleteCalculation(calculation.id)}
                        className="text-red-600 hover:text-red-900"
                        title="–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—á–µ—Ç"
                      >
                        <Trash2 className="w-5 h-5" />
                      </button>
                    </div>
                  </div>
                </div>
              ))
            )}
          </div>
        </div>

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å—á–µ—Ç–∞ */}
        {showViewCalculationModal && viewingCalculation && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div className="bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto">
              <div className="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
                <h3 className="text-lg font-semibold text-gray-900">
                  –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å—á–µ—Ç–∞: {viewingCalculation.name}
                </h3>
                <button
                  onClick={() => setShowViewCalculationModal(false)}
                  className="text-gray-400 hover:text-gray-600"
                >
                  <X className="w-6 h-6" />
                </button>
              </div>
              
              <div className="p-6">
                <div className="mb-4">
                  <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
                    <h4 className="text-lg font-semibold text-blue-900 mb-2">
                      {viewingCalculation.category === 'shock_wave' ? '–í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã' : '–ü–æ–ø–∞–¥–∞–Ω–∏–µ –ë–ü–õ–ê –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é'}
                    </h4>
                    <p className="text-blue-700 text-sm">
                      –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {new Date(viewingCalculation.created_at).toLocaleString('ru-RU')}
                    </p>
                    <p className="text-blue-700 text-sm">
                      –°—Ç–∞—Ç—É—Å: <span className={`font-semibold ${
                        viewingCalculation.status === 'completed' ? 'text-green-600' : 
                        viewingCalculation.status === 'pending' ? 'text-yellow-600' : 'text-red-600'
                      }`}>
                        {viewingCalculation.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω' : 
                         viewingCalculation.status === 'pending' ? '–í –æ–∂–∏–¥–∞–Ω–∏–∏' : '–û—à–∏–±–∫–∞'}
                      </span>
                    </p>
                  </div>
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div>
                    <h4 className="text-lg font-medium text-gray-900 mb-3 flex items-center">
                      <Settings className="w-5 h-5 mr-2 text-blue-600" />
                      –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á–µ—Ç–∞
                    </h4>
                    <div className="bg-gray-50 rounded-lg p-4 space-y-3">
                      {Object.entries(viewingCalculation.parameters || {}).map(([key, value]) => {
                        const paramLabel = getParameterLabel(key, viewingCalculation.category);
                        return (
                          <div key={key} className="flex justify-between items-center py-2 border-b border-gray-200 last:border-b-0">
                            <span className="text-sm font-medium text-gray-700">{paramLabel}:</span>
                            <span className="text-sm font-semibold text-gray-900">
                              {typeof value === 'object' ? JSON.stringify(value) : value}
                            </span>
                          </div>
                        );
                      })}
                    </div>
                  </div>
                  
                  <div>
                    <h4 className="text-lg font-medium text-gray-900 mb-3 flex items-center">
                      <Target className="w-5 h-5 mr-2 text-green-600" />
                      –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞
                    </h4>
                    {viewingCalculation.result && Object.keys(viewingCalculation.result).length > 0 ? (
                      <div className="space-y-4">
                        {/* –°—Ç–∞—Ç—É—Å —Ä–∞—Å—á–µ—Ç–∞ */}
                        {viewingCalculation.result.calculation_status && (
                          <div className="bg-blue-50 rounded-lg p-4">
                            <div className="flex items-center justify-between">
                              <span className="text-sm font-medium text-blue-700">–°—Ç–∞—Ç—É—Å —Ä–∞—Å—á–µ—Ç–∞:</span>
                              <span className={`px-3 py-1 rounded-full text-xs font-medium ${
                                viewingCalculation.result.calculation_status === '–í—ã–ø–æ–ª–Ω–µ–Ω' 
                                  ? 'bg-green-100 text-green-800' 
                                  : viewingCalculation.result.calculation_status === '–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è'
                                  ? 'bg-yellow-100 text-yellow-800'
                                  : viewingCalculation.result.calculation_status === '–û—à–∏–±–∫–∞'
                                  ? 'bg-red-100 text-red-800'
                                  : 'bg-gray-100 text-gray-800'
                              }`}>
                                {viewingCalculation.result.calculation_status}
                              </span>
                            </div>
                          </div>
                        )}
                        
                        {/* –í—ã–≤–æ–¥—ã */}
                        {viewingCalculation.result.conclusions && (
                          <div className="bg-purple-50 rounded-lg p-4">
                            <h5 className="text-sm font-medium text-purple-700 mb-2">–í—ã–≤–æ–¥—ã:</h5>
                            <div className="text-sm text-purple-900">
                              {Array.isArray(viewingCalculation.result.conclusions) 
                                ? viewingCalculation.result.conclusions.map((conclusion, index) => (
                                    <div key={index} className="mb-1">‚Ä¢ {conclusion}</div>
                                  ))
                                : viewingCalculation.result.conclusions
                              }
                            </div>
                          </div>
                        )}
                        
                        {/* –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
                        <div className="bg-green-50 rounded-lg p-4 space-y-3">
                          {Object.entries(viewingCalculation.result)
                            .filter(([key]) => key !== 'calculation_status' && key !== 'conclusions')
                            .map(([key, value]) => {
                              const resultLabel = getResultLabel(key);
                              return (
                                <div key={key} className="flex justify-between items-center py-2 border-b border-green-200 last:border-b-0">
                                  <span className="text-sm font-medium text-green-700">{resultLabel}:</span>
                                  <span className="text-sm font-bold text-green-900">
                                    {typeof value === 'object' ? JSON.stringify(value) : value}
                                  </span>
                                </div>
                              );
                            })}
                        </div>
                      </div>
                    ) : (
                      <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                        <div className="flex items-center">
                          <AlertCircle className="w-5 h-5 text-yellow-600 mr-2" />
                          <p className="text-yellow-800 text-sm font-medium">
                            {viewingCalculation.status === 'pending' ? '–†–∞—Å—á–µ—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...' : '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã'}
                          </p>
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </div>
              
              <div className="px-6 py-4 border-t border-gray-200 flex justify-end space-x-3">
                <button
                  onClick={() => handleDownloadCalculation(viewingCalculation)}
                  className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center"
                >
                  <Download className="w-4 h-4 mr-2" />
                  –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                </button>
                <button
                  onClick={() => setShowViewCalculationModal(false)}
                  className="px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50"
                >
                  –ó–∞–∫—Ä—ã—Ç—å
                </button>
              </div>
            </div>
          </div>
        )}

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞ */}
        {showNewCalculationModal && selectedCalculationType && (
          <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div className="bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto">
              <div className="px-6 py-4 border-b border-gray-200 flex items-center justify-between">
                <h3 className="text-lg font-semibold text-gray-900">
                  –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞: {selectedCalculationType.name}
                </h3>
                <button
                  onClick={() => {
                    setShowNewCalculationModal(false);
                    setSelectedCalculationType(null);
                    setCalculationParameters({});
                  }}
                  className="text-gray-400 hover:text-gray-600"
                >
                  <X className="w-6 h-6" />
                </button>
              </div>
              
              <div className="p-6">
                <div className="mb-4">
                  <p className="text-gray-600 mb-4">{selectedCalculationType.description}</p>
                  
                  <div className="space-y-4">
                    {selectedCalculationType.parameters.map((param) => (
                      <div key={param.name} className="space-y-2">
                        <label className="block text-sm font-medium text-gray-700">
                          {param.label} {param.required && <span className="text-red-500">*</span>}
                          {param.unit && <span className="text-gray-500 ml-1">({param.unit})</span>}
                        </label>
                        
                        {param.type === 'select' ? (
                          <select
                            value={calculationParameters[param.name] || ''}
                            onChange={(e) => setCalculationParameters(prev => ({
                              ...prev,
                              [param.name]: e.target.value
                            }))}
                            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                            required={param.required}
                          >
                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ {param.label.toLowerCase()}</option>
                            {param.options.map((option) => (
                              <option key={option.value} value={option.value}>
                                {option.label}
                              </option>
                            ))}
                          </select>
                        ) : (
                          <input
                            type={param.type}
                            value={calculationParameters[param.name] || ''}
                            onChange={(e) => setCalculationParameters(prev => ({
                              ...prev,
                              [param.name]: param.type === 'number' ? parseFloat(e.target.value) || 0 : e.target.value
                            }))}
                            min={param.min}
                            max={param.max}
                            step={param.type === 'number' ? '0.01' : undefined}
                            className="w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                            placeholder={`–í–≤–µ–¥–∏—Ç–µ ${param.label.toLowerCase()}`}
                            required={param.required}
                          />
                        )}
                      </div>
                    ))}
                  </div>
                </div>
              </div>
              
              <div className="px-6 py-4 border-t border-gray-200 flex justify-end space-x-3">
                <button
                  onClick={() => {
                    setShowNewCalculationModal(false);
                    setSelectedCalculationType(null);
                    setCalculationParameters({});
                  }}
                  className="px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50"
                  disabled={loading}
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button
                  onClick={createCalculationWithParameters}
                  className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 flex items-center"
                  disabled={loading}
                >
                  {loading ? (
                    <>
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                      –°–æ–∑–¥–∞–Ω–∏–µ...
                    </>
                  ) : (
                    <>
                      <Plus className="w-4 h-4 mr-2" />
                      –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—á–µ—Ç
                    </>
                  )}
                </button>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default UAVProtectionCalculationsPage;
