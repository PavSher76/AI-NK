import React, { useState, useEffect } from 'react';
import { 
  Calculator, 
  FileText, 
  BookOpen, 
  Settings, 
  Play, 
  Download, 
  Upload,
  Save,
  Trash2,
  Eye,
  Edit,
  Plus,
  Search,
  Filter,
  SortAsc,
  SortDesc,
  Calendar,
  User,
  Clock,
  CheckCircle,
  AlertCircle,
  Info,
  X
} from 'lucide-react';
import StructuralCalculationModal from '../components/StructuralCalculationModal';

const CalculationsPage = ({ isAuthenticated, authToken, calculationType = 'all' }) => {
  const [calculations, setCalculations] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [success, setSuccess] = useState(null);
  const [selectedCalculation, setSelectedCalculation] = useState(null);
  const [showNewCalculationModal, setShowNewCalculationModal] = useState(false);
  const [showStructuralModal, setShowStructuralModal] = useState(false);
  const [searchTerm, setSearchTerm] = useState('');
  const [filterCategory, setFilterCategory] = useState('all');
  const [sortBy, setSortBy] = useState('date');
  const [sortOrder, setSortOrder] = useState('desc');

  // API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  const API_BASE = process.env.REACT_APP_API_BASE || '/api';

  // –í–∏–¥—ã —Ä–∞—Å—á–µ—Ç–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞–º–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∞–º–∏
  const calculationTypes = [
    {
      id: 'structural',
      name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
      category: 'construction',
      description: '–†–∞—Å—á–µ—Ç—ã –ø—Ä–æ—á–Ω–æ—Å—Ç–∏, —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
      norms: ['–°–ü 20.13330.2016', '–°–ü 16.13330.2017', '–°–ü 63.13330.2018'],
      icon: 'üèóÔ∏è',
      subcategories: [
        {
          id: 'strength',
          name: '–†–∞—Å—á—ë—Ç –Ω–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç—å',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
          norms: ['–°–ü 63.13330', '–°–ü 16.13330', 'EN 1992', 'EN 1993'],
          parameters: ['–ù–∞–≥—Ä—É–∑–∫–∏, –∫–ù', '–ü–ª–æ—â–∞–¥—å —Å–µ—á–µ–Ω–∏—è, —Å–º¬≤', '–ü—Ä–æ—á–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –ú–ü–∞']
        },
        {
          id: 'stability',
          name: '–†–∞—Å—á—ë—Ç –Ω–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ —Å–∂–∞—Ç—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
          norms: ['–°–ü 16.13330', '–°–ü 63.13330', 'EN 1993'],
          parameters: ['–î–ª–∏–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞, –º', '–ú–æ–º–µ–Ω—Ç –∏–Ω–µ—Ä—Ü–∏–∏', '–ú–æ–¥—É–ª—å —É–ø—Ä—É–≥–æ—Å—Ç–∏']
        },
        {
          id: 'stiffness',
          name: '–†–∞—Å—á—ë—Ç –Ω–∞ –∂—ë—Å—Ç–∫–æ—Å—Ç—å',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥–∏–±–æ–≤ –∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π',
          norms: ['–°–ü 63.13330', '–°–ü 64.13330', 'EN 1995'],
          parameters: ['–ü—Ä–æ–ª–µ—Ç, –º', '–ù–∞–≥—Ä—É–∑–∫–∞, –∫–ù/–º', '–ú–æ–º–µ–Ω—Ç –∏–Ω–µ—Ä—Ü–∏–∏']
        },
        {
          id: 'cracking',
          name: '–†–∞—Å—á—ë—Ç –Ω–∞ —Ç—Ä–µ—â–∏–Ω–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∏—Ä–∏–Ω—ã —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç—Ä–µ—â–∏–Ω',
          norms: ['–°–ü 63.13330', 'EN 1992'],
          parameters: ['–ê—Ä–º–∞—Ç—É—Ä–∞, –º–º¬≤', '–ö–ª–∞—Å—Å –±–µ—Ç–æ–Ω–∞', '–ú–æ–º–µ–Ω—Ç, –∫–ù¬∑–º']
        },
        {
          id: 'dynamic',
          name: '–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á—ë—Ç',
          description: '–†–∞—Å—á–µ—Ç –Ω–∞ —Å–µ–π—Å–º–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è',
          norms: ['–°–ü 14.13330', 'EN 1998'],
          parameters: ['–°–µ–π—Å–º–∏—á–µ—Å–∫–∏–π —Ä–∞–π–æ–Ω', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≥—Ä—É–Ω—Ç–∞', '–ú–∞—Å—Å–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏']
        }
      ]
    },
    {
      id: 'foundation',
      name: '–û—Å–Ω–æ–≤–∞–Ω–∏—è –∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—ã',
      category: 'construction',
      description: '–†–∞—Å—á–µ—Ç—ã –Ω–µ—Å—É—â–µ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–∞–Ω–∏–π, –æ—Å–∞–¥–æ–∫ –∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–æ–≤',
      norms: ['–°–ü 22.13330.2016', '–°–ü 24.13330.2011', '–°–ü 25.13330.2012'],
      icon: 'üè¢'
    },
    {
      id: 'thermal',
      name: '–¢–µ–ø–ª–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏, —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏–∏ –∏ —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      norms: ['–°–ü 50.13330.2012', '–°–ü 23-101-2004', '–ì–û–°–¢ 30494-2011'],
      icon: 'üå°Ô∏è'
    },
    {
      id: 'ventilation',
      name: '–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã –≤–æ–∑–¥—É—Ö–æ–æ–±–º–µ–Ω–∞, –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏ –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–∞',
      norms: ['–°–ü 60.13330.2016', '–°–ü 7.13130.2013', '–°–ü 54.13330.2016'],
      icon: 'üí®'
    },
    {
      id: 'electrical',
      name: '–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫, –∑–∞–∑–µ–º–ª–µ–Ω–∏—è –∏ –º–æ–ª–Ω–∏–µ–∑–∞—â–∏—Ç—ã',
      norms: ['–°–ü 31.110-2003', '–°–ü 437.1325800.2018', '–°–ü 256.1325800.2016'],
      icon: '‚ö°'
    },
    {
      id: 'water',
      name: '–í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∏ –≤–æ–¥–æ–æ—Ç–≤–µ–¥–µ–Ω–∏–µ',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã –≤–æ–¥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è, –≥–∏–¥—Ä–∞–≤–ª–∏–∫–∏ —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–æ–≤ –∏ –æ—á–∏—Å—Ç–∫–∏',
      norms: ['–°–ü 30.13330.2016', '–°–ü 32.13330.2018', '–°–ü 31.13330.2012'],
      icon: 'üíß'
    },
    {
      id: 'fire',
      name: '–ü–æ–∂–∞—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      category: 'safety',
      description: '–†–∞—Å—á–µ—Ç—ã –ø–æ–∂–∞—Ä–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤, —ç–≤–∞–∫—É–∞—Ü–∏–∏ –∏ –æ–≥–Ω–µ—Å—Ç–æ–π–∫–æ—Å—Ç–∏',
      norms: ['–°–ü 1.13130.2020', '–°–ü 2.13130.2020', '–°–ü 3.13130.2009'],
      icon: 'üî•'
    },
    {
      id: 'acoustic',
      name: '–ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–∏, —à—É–º–∞ –∏ –≤–∏–±—Ä–∞—Ü–∏–π',
      norms: ['–°–ü 51.13330.2011', '–°–ü 23-103-2003', '–°–ü 54.13330.2016'],
      icon: 'üîä'
    },
    {
      id: 'lighting',
      name: '–û—Å–≤–µ—â–µ–Ω–∏–µ –∏ –∏–Ω—Å–æ–ª—è—Ü–∏—è',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è',
      norms: ['–°–ü 52.13330.2016', '–°–ü 54.13330.2016', '–°–ü 23-102-2003'],
      icon: 'üí°'
    },
    {
      id: 'geotechnical',
      name: '–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ-–≥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã',
      category: 'geology',
      description: '–†–∞—Å—á–µ—Ç—ã –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π, —Å–∫–ª–æ–Ω–æ–≤ –∏ –ø–æ–¥–∑–µ–º–Ω—ã—Ö –≤–æ–¥',
      norms: ['–°–ü 47.13330.2016', '–°–ü 11-105-97', '–°–ü 22.13330.2016'],
      icon: 'üåç'
    }
  ];

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  const categories = [
    { id: 'all', name: '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' },
    { id: 'construction', name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ' },
    { id: 'engineering', name: '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã' },
    { id: 'safety', name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å' },
    { id: 'geology', name: '–ì–µ–æ–ª–æ–≥–∏—è' }
  ];

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
  const fetchCalculations = async () => {
    if (!isAuthenticated || !authToken) {
      console.log('üîç [DEBUG] CalculationsPage.js: Not authenticated, skipping fetch');
      return;
    }

    setLoading(true);
    setError(null);

    try {
      console.log('üîç [DEBUG] CalculationsPage.js: Fetching calculations');
      const response = await fetch(`${API_BASE}/calculations`, {
        headers: {
          'Authorization': `Bearer ${authToken}`
        }
      });

      if (response.ok) {
        const data = await response.json();
        console.log('üîç [DEBUG] CalculationsPage.js: Calculations loaded:', data?.length || 0);
        setCalculations(data || []);
      } else if (response.status === 401) {
        setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
      } else if (response.status === 503) {
        setError('–°–µ—Ä–≤–∏—Å —Ä–∞—Å—á–µ—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—á–µ—Ç–æ–≤');
      }
    } catch (error) {
      console.error('üîç [DEBUG] CalculationsPage.js: Fetch error:', error);
      if (error.name === 'TypeError' && error.message.includes('fetch')) {
        setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—á–µ—Ç–æ–≤');
      }
    } finally {
      setLoading(false);
    }
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
  const createCalculation = async (calculationData) => {
    if (!isAuthenticated || !authToken) {
      setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return;
    }

    setLoading(true);
    setError(null);

    try {
      console.log('üîç [DEBUG] CalculationsPage.js: Creating calculation:', calculationData);
      const response = await fetch(`${API_BASE}/calculations`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${authToken}`
        },
        body: JSON.stringify(calculationData)
      });

      if (response.ok) {
        const newCalculation = await response.json();
        setCalculations(prev => [newCalculation, ...prev]);
        setSuccess('–†–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
        setShowNewCalculationModal(false);
        console.log('üîç [DEBUG] CalculationsPage.js: Calculation created successfully');
      } else {
        const errorData = await response.json();
        setError(errorData.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
      }
    } catch (error) {
      console.error('üîç [DEBUG] CalculationsPage.js: Create error:', error);
      setError('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
    } finally {
      setLoading(false);
    }
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
  const createStructuralCalculation = async (calculationData) => {
    if (!isAuthenticated || !authToken) {
      setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return;
    }

    setLoading(true);
    setError(null);

    try {
      console.log('üîç [DEBUG] CalculationsPage.js: Creating structural calculation:', calculationData);
      
      // –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç
      const executeResponse = await fetch(`${API_BASE}/calculations/structural/execute`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${authToken}`
        },
        body: JSON.stringify({
          calculation_type: calculationData.subcategory,
          parameters: calculationData.parameters
        })
      });

      if (!executeResponse.ok) {
        const errorData = await executeResponse.json();
        throw new Error(errorData.detail || '–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
      }

      const calculationResult = await executeResponse.json();
      
      // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      const createResponse = await fetch(`${API_BASE}/calculations`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${authToken}`
        },
        body: JSON.stringify({
          ...calculationData,
          result: calculationResult
        })
      });

      if (createResponse.ok) {
        const newCalculation = await createResponse.json();
        setCalculations(prev => [newCalculation, ...prev]);
        setSuccess('–°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω');
        setShowStructuralModal(false);
        console.log('üîç [DEBUG] CalculationsPage.js: Structural calculation created successfully');
      } else {
        const errorData = await createResponse.json();
        setError(errorData.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
      }
    } catch (error) {
      console.error('üîç [DEBUG] CalculationsPage.js: Structural calculation error:', error);
      setError(error.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞');
    } finally {
      setLoading(false);
    }
  };

  // –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞
  const deleteCalculation = async (calculationId) => {
    if (!isAuthenticated || !authToken) {
      setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return;
    }

    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ä–∞—Å—á–µ—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      return;
    }

    setLoading(true);
    setError(null);

    try {
      console.log('üîç [DEBUG] CalculationsPage.js: Deleting calculation:', calculationId);
      const response = await fetch(`${API_BASE}/calculations/${calculationId}`, {
        method: 'DELETE',
        headers: {
          'Authorization': `Bearer ${authToken}`
        }
      });

      if (response.ok) {
        setCalculations(prev => prev.filter(calc => calc.id !== calculationId));
        setSuccess('–†–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
        console.log('üîç [DEBUG] CalculationsPage.js: Calculation deleted successfully');
      } else {
        const errorData = await response.json();
        setError(errorData.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
      }
    } catch (error) {
      console.error('üîç [DEBUG] CalculationsPage.js: Delete error:', error);
      setError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (isAuthenticated && authToken) {
      fetchCalculations();
    }
  }, [isAuthenticated, authToken]);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
  const filteredCalculations = calculations
    .filter(calc => {
      const matchesSearch = calc.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           calc.description.toLowerCase().includes(searchTerm.toLowerCase());
      const matchesCategory = filterCategory === 'all' || calc.category === filterCategory;
      const matchesType = calculationType === 'all' || calc.type === calculationType;
      return matchesSearch && matchesCategory && matchesType;
    })
    .sort((a, b) => {
      let comparison = 0;
      switch (sortBy) {
        case 'name':
          comparison = a.name.localeCompare(b.name);
          break;
        case 'date':
          comparison = new Date(a.created_at) - new Date(b.created_at);
          break;
        case 'status':
          comparison = a.status.localeCompare(b.status);
          break;
        default:
          comparison = 0;
      }
      return sortOrder === 'asc' ? comparison : -comparison;
    });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  const handleSearchChange = (e) => {
    setSearchTerm(e.target.value);
  };

  const handleFilterChange = (e) => {
    setFilterCategory(e.target.value);
  };

  const handleSortChange = (field) => {
    if (sortBy === field) {
      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');
    } else {
      setSortBy(field);
      setSortOrder('asc');
    }
  };

  const handleNewCalculation = (type) => {
    setSelectedCalculation({ type, ...calculationTypes.find(t => t.id === type) });
    setShowNewCalculationModal(true);
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞
  const NewCalculationModal = () => {
    const [formData, setFormData] = useState({
      name: '',
      description: '',
      parameters: {}
    });

    const handleSubmit = (e) => {
      e.preventDefault();
      createCalculation({
        ...formData,
        type: selectedCalculation.type,
        category: selectedCalculation.category
      });
    };

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div className="bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-xl font-semibold text-gray-900">
              –ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç: {selectedCalculation?.name}
            </h2>
            <button
              onClick={() => setShowNewCalculationModal(false)}
              className="text-gray-400 hover:text-gray-600"
            >
              <X className="w-6 h-6" />
            </button>
          </div>

          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞
              </label>
              <input
                type="text"
                value={formData.name}
                onChange={(e) => setFormData({...formData, name: e.target.value})}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –û–ø–∏—Å–∞–Ω–∏–µ
              </label>
              <textarea
                value={formData.description}
                onChange={(e) => setFormData({...formData, description: e.target.value})}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                rows={3}
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ü—Ä–∏–º–µ–Ω—è–µ–º—ã–µ –Ω–æ—Ä–º—ã
              </label>
              <div className="space-y-2">
                {selectedCalculation?.norms?.map((norm, index) => (
                  <div key={index} className="flex items-center">
                    <CheckCircle className="w-4 h-4 text-green-500 mr-2" />
                    <span className="text-sm text-gray-600">{norm}</span>
                  </div>
                ))}
              </div>
            </div>

            <div className="flex justify-end space-x-3 pt-4">
              <button
                type="button"
                onClick={() => setShowNewCalculationModal(false)}
                className="px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                type="submit"
                disabled={loading}
                className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50"
              >
                {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—á–µ—Ç'}
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  if (!isAuthenticated) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-center">
          <AlertCircle className="w-12 h-12 text-gray-400 mx-auto mb-4" />
          <p className="text-gray-600">–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞—Å—á–µ—Ç–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è</p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-gray-900 flex items-center">
            <Calculator className="w-8 h-8 mr-3 text-blue-600" />
            {calculationType === 'all' ? '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã' : 
             calculationType === 'structural' ? '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏' :
             calculationType === 'electrical' ? '–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã' :
             calculationType === 'mechanical' ? '–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã' :
             calculationType === 'thermal' ? '–¢–µ–ø–ª–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã' :
             calculationType === 'safety' ? '–†–∞—Å—á–µ—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' :
             '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã'}
          </h1>
          <p className="text-gray-600 mt-1">
            {calculationType === 'all' ? '–†–∞—Å—á–µ—Ç—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞–º–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∞–º–∏' :
             calculationType === 'structural' ? '–†–∞—Å—á–µ—Ç—ã –ø—Ä–æ—á–Ω–æ—Å—Ç–∏, —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π' :
             calculationType === 'electrical' ? '–†–∞—Å—á–µ—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ø–µ–π –∏ —Å–∏—Å—Ç–µ–º' :
             calculationType === 'mechanical' ? '–†–∞—Å—á–µ—Ç—ã –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º –∏ –¥–µ—Ç–∞–ª–µ–π' :
             calculationType === 'thermal' ? '–†–∞—Å—á–µ—Ç—ã —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω–∞ –∏ —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏' :
             calculationType === 'safety' ? '–†–∞—Å—á–µ—Ç—ã –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' :
             '–†–∞—Å—á–µ—Ç—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞–º–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∞–º–∏'}
          </p>
        </div>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
      <div className="bg-white rounded-lg shadow p-4">
        <div className="flex flex-col lg:flex-row gap-4">
          <div className="flex-1">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
              <input
                type="text"
                placeholder="–ü–æ–∏—Å–∫ —Ä–∞—Å—á–µ—Ç–æ–≤..."
                value={searchTerm}
                onChange={handleSearchChange}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
            </div>
          </div>
          <div className="flex gap-2">
            <select
              value={filterCategory}
              onChange={handleFilterChange}
              className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              {categories.map(category => (
                <option key={category.id} value={category.id}>
                  {category.name}
                </option>
              ))}
            </select>
            <button
              onClick={() => handleSortChange('date')}
              className="px-3 py-2 border border-gray-300 rounded-md hover:bg-gray-50 flex items-center"
            >
              {sortBy === 'date' && sortOrder === 'asc' ? <SortAsc className="w-4 h-4" /> : <SortDesc className="w-4 h-4" />}
            </button>
          </div>
        </div>
      </div>

      {/* –í–∏–¥—ã —Ä–∞—Å—á–µ—Ç–æ–≤ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {calculationTypes
          .filter(type => calculationType === 'all' || type.id === calculationType)
          .map((type) => (
          <div
            key={type.id}
            className="bg-white rounded-lg shadow p-6 hover:shadow-lg transition-shadow cursor-pointer border border-gray-200"
            onClick={() => handleNewCalculation(type.id)}
          >
            <div className="flex items-start justify-between mb-4">
              <div className="text-3xl">{type.icon}</div>
              <span className="text-xs px-2 py-1 bg-blue-100 text-blue-800 rounded-full">
                {categories.find(c => c.id === type.category)?.name}
              </span>
            </div>
            
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              {type.name}
            </h3>
            
            <p className="text-gray-600 text-sm mb-4">
              {type.description}
            </p>
            
            <div className="space-y-1">
              <p className="text-xs font-medium text-gray-700">–ü—Ä–∏–º–µ–Ω—è–µ–º—ã–µ –Ω–æ—Ä–º—ã:</p>
              {type.norms.slice(0, 2).map((norm, index) => (
                <p key={index} className="text-xs text-gray-500">‚Ä¢ {norm}</p>
              ))}
              {type.norms.length > 2 && (
                <p className="text-xs text-gray-400">–∏ –µ—â–µ {type.norms.length - 2}...</p>
              )}
            </div>
            
            <button 
              className="w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center justify-center"
              onClick={() => {
                if (type.id === 'structural') {
                  setShowStructuralModal(true);
                } else {
                  handleNewCalculation(type.id);
                }
              }}
            >
              <Plus className="w-4 h-4 mr-2" />
              –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—á–µ—Ç
            </button>
          </div>
        ))}
      </div>

      {/* –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ */}
      {calculations.length > 0 && (
        <div className="bg-white rounded-lg shadow">
          <div className="p-6 border-b border-gray-200">
            <h2 className="text-lg font-semibold text-gray-900">
              {calculationType === 'all' ? '–ú–æ–∏ —Ä–∞—Å—á–µ—Ç—ã' :
               calculationType === 'structural' ? '–ú–æ–∏ —Ä–∞—Å—á–µ—Ç—ã —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π' :
               calculationType === 'electrical' ? '–ú–æ–∏ —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã' :
               calculationType === 'mechanical' ? '–ú–æ–∏ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã' :
               calculationType === 'thermal' ? '–ú–æ–∏ —Ç–µ–ø–ª–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã' :
               calculationType === 'safety' ? '–ú–æ–∏ —Ä–∞—Å—á–µ—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' :
               '–ú–æ–∏ —Ä–∞—Å—á–µ—Ç—ã'} ({filteredCalculations.length})
            </h2>
          </div>
          
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –ù–∞–∑–≤–∞–Ω–∏–µ
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –¢–∏–ø
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –°—Ç–∞—Ç—É—Å
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –î–µ–π—Å—Ç–≤–∏—è
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {filteredCalculations.map((calculation) => (
                  <tr key={calculation.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div>
                        <div className="text-sm font-medium text-gray-900">
                          {calculation.name}
                        </div>
                        <div className="text-sm text-gray-500">
                          {calculation.description}
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className="text-sm text-gray-900">
                        {calculationTypes.find(t => t.id === calculation.type)?.name || calculation.type}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                        calculation.status === 'completed' ? 'bg-green-100 text-green-800' :
                        calculation.status === 'processing' ? 'bg-yellow-100 text-yellow-800' :
                        'bg-red-100 text-red-800'
                      }`}>
                        {calculation.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω' :
                         calculation.status === 'processing' ? '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ' : '–û—à–∏–±–∫–∞'}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {new Date(calculation.created_at).toLocaleDateString('ru-RU')}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <div className="flex space-x-2">
                        <button 
                          className="text-blue-600 hover:text-blue-900"
                          title="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å—á–µ—Ç"
                        >
                          <Eye className="w-4 h-4" />
                        </button>
                        <button 
                          className="text-green-600 hover:text-green-900"
                          title="–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
                        >
                          <Download className="w-4 h-4" />
                        </button>
                        <button 
                          onClick={() => deleteCalculation(calculation.id)}
                          className="text-red-600 hover:text-red-900"
                          title="–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—á–µ—Ç"
                        >
                          <Trash2 className="w-4 h-4" />
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}

      {/* –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∏ —É—Å–ø–µ—Ö–µ */}
      {error && (
        <div className="bg-red-50 border border-red-200 rounded-md p-4">
          <div className="flex">
            <AlertCircle className="w-5 h-5 text-red-400 mr-2" />
            <p className="text-red-800">{error}</p>
          </div>
        </div>
      )}

      {success && (
        <div className="bg-green-50 border border-green-200 rounded-md p-4">
          <div className="flex">
            <CheckCircle className="w-5 h-5 text-green-400 mr-2" />
            <p className="text-green-800">{success}</p>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞ */}
      {showNewCalculationModal && selectedCalculation && <NewCalculationModal />}
      {showStructuralModal && (
        <StructuralCalculationModal
          isOpen={showStructuralModal}
          onClose={() => setShowStructuralModal(false)}
          onCreateCalculation={createStructuralCalculation}
          loading={loading}
        />
      )}
    </div>
  );
};

export default CalculationsPage;
