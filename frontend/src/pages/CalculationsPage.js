import React, { useState, useEffect } from 'react';
import { 
  Calculator, 
  FileText, 
  BookOpen, 
  Settings, 
  Play, 
  Download, 
  Upload,
  Save,
  Trash2,
  Eye,
  Edit,
  Plus,
  Search,
  Filter,
  SortAsc,
  SortDesc,
  Calendar,
  User,
  Clock,
  CheckCircle,
  AlertCircle,
  Info,
  X
} from 'lucide-react';
// import StructuralCalculationModal from '../components/StructuralCalculationModal'; // –£–¥–∞–ª–µ–Ω–æ - —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞

const CalculationsPage = ({ isAuthenticated, authToken, calculationType = 'all' }) => {
  const [calculations, setCalculations] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [success, setSuccess] = useState(null);
  const [selectedCalculation, setSelectedCalculation] = useState(null);
  const [showNewCalculationModal, setShowNewCalculationModal] = useState(false);
  const [showViewCalculationModal, setShowViewCalculationModal] = useState(false);
  const [viewingCalculation, setViewingCalculation] = useState(null);
  // const [showStructuralModal, setShowStructuralModal] = useState(false); // –£–¥–∞–ª–µ–Ω–æ - —Ç–µ–ø–µ—Ä—å –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
  const [searchTerm, setSearchTerm] = useState('');
  const [filterCategory, setFilterCategory] = useState('all');
  const [sortBy, setSortBy] = useState('date');
  const [sortOrder, setSortOrder] = useState('desc');

  // API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  const API_BASE = process.env.REACT_APP_API_BASE || '/api';

  // –í–∏–¥—ã —Ä–∞—Å—á–µ—Ç–æ–≤ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞–º–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∞–º–∏
  const calculationTypes = [
    {
      id: 'structural',
      name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
      category: 'construction',
      description: '–†–∞—Å—á–µ—Ç—ã –ø—Ä–æ—á–Ω–æ—Å—Ç–∏, —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
      norms: ['–°–ü 20.13330.2016', '–°–ü 16.13330.2017', '–°–ü 63.13330.2018'],
      icon: 'üèóÔ∏è',
      subcategories: [
        {
          id: 'strength',
          name: '–†–∞—Å—á—ë—Ç –Ω–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç—å',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
          norms: ['–°–ü 63.13330', '–°–ü 16.13330', 'EN 1992', 'EN 1993'],
          parameters: ['–ù–∞–≥—Ä—É–∑–∫–∏, –∫–ù', '–ü–ª–æ—â–∞–¥—å —Å–µ—á–µ–Ω–∏—è, —Å–º¬≤', '–ü—Ä–æ—á–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –ú–ü–∞']
        },
        {
          id: 'stability',
          name: '–†–∞—Å—á—ë—Ç –Ω–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ —Å–∂–∞—Ç—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
          norms: ['–°–ü 16.13330', '–°–ü 63.13330', 'EN 1993'],
          parameters: ['–î–ª–∏–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞, –º', '–ú–æ–º–µ–Ω—Ç –∏–Ω–µ—Ä—Ü–∏–∏', '–ú–æ–¥—É–ª—å —É–ø—Ä—É–≥–æ—Å—Ç–∏']
        },
        {
          id: 'stiffness',
          name: '–†–∞—Å—á—ë—Ç –Ω–∞ –∂—ë—Å—Ç–∫–æ—Å—Ç—å',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–≥–∏–±–æ–≤ –∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π',
          norms: ['–°–ü 63.13330', '–°–ü 64.13330', 'EN 1995'],
          parameters: ['–ü—Ä–æ–ª–µ—Ç, –º', '–ù–∞–≥—Ä—É–∑–∫–∞, –∫–ù/–º', '–ú–æ–º–µ–Ω—Ç –∏–Ω–µ—Ä—Ü–∏–∏']
        },
        {
          id: 'cracking',
          name: '–†–∞—Å—á—ë—Ç –Ω–∞ —Ç—Ä–µ—â–∏–Ω–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —à–∏—Ä–∏–Ω—ã —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç—Ä–µ—â–∏–Ω',
          norms: ['–°–ü 63.13330', 'EN 1992'],
          parameters: ['–ê—Ä–º–∞—Ç—É—Ä–∞, –º–º¬≤', '–ö–ª–∞—Å—Å –±–µ—Ç–æ–Ω–∞', '–ú–æ–º–µ–Ω—Ç, –∫–ù¬∑–º']
        },
        {
          id: 'dynamic',
          name: '–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á—ë—Ç',
          description: '–†–∞—Å—á–µ—Ç –Ω–∞ —Å–µ–π—Å–º–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è',
          norms: ['–°–ü 14.13330', 'EN 1998'],
          parameters: ['–°–µ–π—Å–º–∏—á–µ—Å–∫–∏–π —Ä–∞–π–æ–Ω', '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≥—Ä—É–Ω—Ç–∞', '–ú–∞—Å—Å–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏']
        }
      ]
    },
    {
      id: 'foundation',
      name: '–û—Å–Ω–æ–≤–∞–Ω–∏—è –∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç—ã',
      category: 'construction',
      description: '–†–∞—Å—á–µ—Ç—ã –Ω–µ—Å—É—â–µ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–∞–Ω–∏–π, –æ—Å–∞–¥–æ–∫ –∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–æ–≤',
      norms: ['–°–ü 22.13330.2016', '–°–ü 24.13330.2011', '–°–ü 25.13330.2012'],
      icon: 'üè¢'
    },
    {
      id: 'thermal',
      name: '–¢–µ–ø–ª–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏, —Ç–µ–ø–ª–æ–∏–∑–æ–ª—è—Ü–∏–∏ –∏ —ç–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
      norms: ['–°–ü 50.13330.2012', '–°–ü 23-101-2004', '–ì–û–°–¢ 30494-2011'],
      icon: 'üå°Ô∏è'
    },
    {
      id: 'ventilation',
      name: '–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –∏ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã –≤–æ–∑–¥—É—Ö–æ–æ–±–º–µ–Ω–∞, –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –∏ –º–∏–∫—Ä–æ–∫–ª–∏–º–∞—Ç–∞',
      norms: ['–°–ü 60.13330.2016', '–°–ü 7.13130.2013', '–°–ü 54.13330.2016'],
      icon: 'üí®'
    },
    {
      id: 'electrical',
      name: '–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫, –∑–∞–∑–µ–º–ª–µ–Ω–∏—è –∏ –º–æ–ª–Ω–∏–µ–∑–∞—â–∏—Ç—ã',
      norms: ['–°–ü 31.110-2003', '–°–ü 437.1325800.2018', '–°–ü 256.1325800.2016'],
      icon: '‚ö°'
    },
    {
      id: 'degasification',
      name: '–î–µ–≥–∞–∑–∞—Ü–∏—è —É–≥–æ–ª—å–Ω—ã—Ö —à–∞—Ö—Ç',
      category: 'mining',
      description: '–†–∞—Å—á–µ—Ç—ã —Å–∏—Å—Ç–µ–º –¥–µ–≥–∞–∑–∞—Ü–∏–∏ —É–≥–æ–ª—å–Ω—ã—Ö —à–∞—Ö—Ç –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –º–µ—Ç–∞–Ω–∞',
      norms: ['–ì–û–°–¢ –† 55154-2012', '–ü–ë 05-618-03', '–°–ü 31.110-2003'],
      icon: '‚õèÔ∏è'
    },
    {
      id: 'water',
      name: '–í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –∏ –≤–æ–¥–æ–æ—Ç–≤–µ–¥–µ–Ω–∏–µ',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã –≤–æ–¥–æ–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è, –≥–∏–¥—Ä–∞–≤–ª–∏–∫–∏ —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–æ–≤ –∏ –æ—á–∏—Å—Ç–∫–∏',
      norms: ['–°–ü 30.13330.2016', '–°–ü 32.13330.2018', '–°–ü 31.13330.2012'],
      icon: 'üíß'
    },
    {
      id: 'fire',
      name: '–ü–æ–∂–∞—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      category: 'safety',
      description: '–†–∞—Å—á–µ—Ç—ã –ø–æ–∂–∞—Ä–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤, —ç–≤–∞–∫—É–∞—Ü–∏–∏ –∏ –æ–≥–Ω–µ—Å—Ç–æ–π–∫–æ—Å—Ç–∏',
      norms: ['–°–ü 1.13130.2020', '–°–ü 2.13130.2020', '–°–ü 3.13130.2009'],
      icon: 'üî•'
    },
    {
      id: 'acoustic',
      name: '–ê–∫—É—Å—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã –∑–≤—É–∫–æ–∏–∑–æ–ª—è—Ü–∏–∏, —à—É–º–∞ –∏ –≤–∏–±—Ä–∞—Ü–∏–π',
      norms: ['–°–ü 51.13330.2011', '–°–ü 23-103-2003', '–°–ü 54.13330.2016'],
      icon: 'üîä'
    },
    {
      id: 'lighting',
      name: '–û—Å–≤–µ—â–µ–Ω–∏–µ –∏ –∏–Ω—Å–æ–ª—è—Ü–∏—è',
      category: 'engineering',
      description: '–†–∞—Å—á–µ—Ç—ã –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ—Å–≤–µ—â–µ–Ω–∏—è',
      norms: ['–°–ü 52.13330.2016', '–°–ü 54.13330.2016', '–°–ü 23-102-2003'],
      icon: 'üí°'
    },
    {
      id: 'geotechnical',
      name: '–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ-–≥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã',
      category: 'geology',
      description: '–†–∞—Å—á–µ—Ç—ã –≥—Ä—É–Ω—Ç–æ–≤—ã—Ö —É—Å–ª–æ–≤–∏–π, —Å–∫–ª–æ–Ω–æ–≤ –∏ –ø–æ–¥–∑–µ–º–Ω—ã—Ö –≤–æ–¥',
      norms: ['–°–ü 47.13330.2016', '–°–ü 11-105-97', '–°–ü 22.13330.2016'],
      icon: 'üåç'
    },
    {
      id: 'uav_protection',
      name: '–ó–∞—â–∏—Ç–∞ –æ—Ç –ë–ü–õ–ê',
      category: 'safety',
      description: '–†–∞—Å—á–µ—Ç—ã –∑–∞—â–∏—Ç—ã –æ—Ç –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è –±–µ—Å–ø–∏–ª–æ—Ç–Ω—ã—Ö –ª–µ—Ç–∞—Ç–µ–ª—å–Ω—ã—Ö –∞–ø–ø–∞—Ä–∞—Ç–æ–≤',
      norms: ['–ì–û–°–¢ –† 58888-2020', '–°–ü 1.13130.2020', '–°–ü 2.13130.2020'],
      icon: 'üõ°Ô∏è',
      subcategories: [
        {
          id: 'shock_wave',
          name: '–†–∞—Å—á—ë—Ç –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã',
          description: '–†–∞—Å—á–µ—Ç –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã –æ—Ç –≤–∑—Ä—ã–≤–∞ –ë–ü–õ–ê –Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏',
          norms: ['–ì–û–°–¢ –† 58888-2020', '–°–ü 1.13130.2020', '–°–ü 20.13330.2016'],
          parameters: ['–ú–∞—Å—Å–∞ –ë–ü–õ–ê, –∫–≥', '–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –æ–±—ä–µ–∫—Ç–∞, –º', '–¢–∏–ø –≤–∑—Ä—ã–≤—á–∞—Ç–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞', '–í—ã—Å–æ—Ç–∞ –≤–∑—Ä—ã–≤–∞, –º', '–ú–∞—Ç–µ—Ä–∏–∞–ª –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏']
        },
        {
          id: 'impact_penetration',
          name: '–†–∞—Å—á—ë—Ç –ø–æ–ø–∞–¥–∞–Ω–∏—è –ë–ü–õ–ê –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é',
          description: '–†–∞—Å—á–µ—Ç –ø—Ä–æ–Ω–∏–∫–∞—é—â–µ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ë–ü–õ–ê –∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
          norms: ['–ì–û–°–¢ –† 58888-2020', '–°–ü 20.13330.2016', '–°–ü 16.13330.2017'],
          parameters: ['–°–∫–æ—Ä–æ—Å—Ç—å –ë–ü–õ–ê, –º/—Å', '–ú–∞—Å—Å–∞ –ë–ü–õ–ê, –∫–≥', '–ú–∞—Ç–µ—Ä–∏–∞–ª –ë–ü–õ–ê', '–¢–æ–ª—â–∏–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –º–º', '–ü—Ä–æ—á–Ω–æ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –ú–ü–∞']
        }
      ]
    }
  ];

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
  const categories = [
    { id: 'all', name: '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' },
    { id: 'construction', name: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ' },
    { id: 'engineering', name: '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã' },
    { id: 'safety', name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å' },
    { id: 'geology', name: '–ì–µ–æ–ª–æ–≥–∏—è' },
    { id: 'mining', name: '–ì–æ—Ä–Ω–æ–µ –¥–µ–ª–æ' }
  ];

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
  const fetchCalculations = async () => {
    if (!isAuthenticated || !authToken) {
      console.log('üîç [DEBUG] CalculationsPage.js: Not authenticated, skipping fetch');
      return;
    }

    setLoading(true);
    setError(null);

    try {
      console.log('üîç [DEBUG] CalculationsPage.js: Fetching calculations');
      const response = await fetch(`${API_BASE}/calculations`, {
        headers: {
          'Authorization': `Bearer ${authToken}`
        }
      });

      if (response.ok) {
        const data = await response.json();
        console.log('üîç [DEBUG] CalculationsPage.js: Calculations loaded:', data?.length || 0);
        setCalculations(data || []);
      } else if (response.status === 401) {
        setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
      } else if (response.status === 503) {
        setError('–°–µ—Ä–≤–∏—Å —Ä–∞—Å—á–µ—Ç–æ–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—á–µ—Ç–æ–≤');
      }
    } catch (error) {
      console.error('üîç [DEBUG] CalculationsPage.js: Fetch error:', error);
      if (error.name === 'TypeError' && error.message.includes('fetch')) {
        setError('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
      } else {
        setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞—Å—á–µ—Ç–æ–≤');
      }
    } finally {
      setLoading(false);
    }
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞
  const createCalculation = async (calculationData) => {
    if (!isAuthenticated || !authToken) {
      setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return;
    }

    setLoading(true);
    setError(null);

    try {
      console.log('üîç [DEBUG] CalculationsPage.js: Creating calculation:', calculationData);
      const response = await fetch(`${API_BASE}/calculations`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${authToken}`
        },
        body: JSON.stringify(calculationData)
      });

      if (response.ok) {
        const newCalculation = await response.json();
        setCalculations(prev => [newCalculation, ...prev]);
        setSuccess('–†–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω');
        setShowNewCalculationModal(false);
        console.log('üîç [DEBUG] CalculationsPage.js: Calculation created successfully');
      } else {
        const errorData = await response.json();
        setError(errorData.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
      }
    } catch (error) {
      console.error('üîç [DEBUG] CalculationsPage.js: Create error:', error);
      setError('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
    } finally {
      setLoading(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è createStructuralCalculation —É–¥–∞–ª–µ–Ω–∞ - —Ç–µ–ø–µ—Ä—å —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ

  // –£–¥–∞–ª–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞
  const deleteCalculation = async (calculationId) => {
    if (!isAuthenticated || !authToken) {
      setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return;
    }

    if (!window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ä–∞—Å—á–µ—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      return;
    }

    setLoading(true);
    setError(null);

    try {
      console.log('üîç [DEBUG] CalculationsPage.js: Deleting calculation:', calculationId);
      const response = await fetch(`${API_BASE}/calculations/${calculationId}`, {
        method: 'DELETE',
        headers: {
          'Authorization': `Bearer ${authToken}`
        }
      });

      if (response.ok) {
        setCalculations(prev => prev.filter(calc => calc.id !== calculationId));
        setSuccess('–†–∞—Å—á–µ—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
        console.log('üîç [DEBUG] CalculationsPage.js: Calculation deleted successfully');
      } else {
        const errorData = await response.json();
        setError(errorData.message || '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
      }
    } catch (error) {
      console.error('üîç [DEBUG] CalculationsPage.js: Delete error:', error);
      setError('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    if (isAuthenticated && authToken) {
      fetchCalculations();
    }
  }, [isAuthenticated, authToken]);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
  const filteredCalculations = calculations
    .filter(calc => {
      const matchesSearch = calc.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           calc.description.toLowerCase().includes(searchTerm.toLowerCase());
      const matchesCategory = filterCategory === 'all' || calc.category === filterCategory;
      const matchesType = calculationType === 'all' || calc.type === calculationType;
      return matchesSearch && matchesCategory && matchesType;
    })
    .sort((a, b) => {
      let comparison = 0;
      switch (sortBy) {
        case 'name':
          comparison = a.name.localeCompare(b.name);
          break;
        case 'date':
          comparison = new Date(a.created_at) - new Date(b.created_at);
          break;
        case 'status':
          comparison = a.status.localeCompare(b.status);
          break;
        default:
          comparison = 0;
      }
      return sortOrder === 'asc' ? comparison : -comparison;
    });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  const handleSearchChange = (e) => {
    setSearchTerm(e.target.value);
  };

  const handleFilterChange = (e) => {
    setFilterCategory(e.target.value);
  };

  const handleSortChange = (field) => {
    if (sortBy === field) {
      setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');
    } else {
      setSortBy(field);
      setSortOrder('asc');
    }
  };

  const handleNewCalculation = (type) => {
    setSelectedCalculation({ type, ...calculationTypes.find(t => t.id === type) });
    setShowNewCalculationModal(true);
  };

  // –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å—á–µ—Ç–∞
  const handleViewCalculation = async (calculation) => {
    try {
      let calculationToView = { ...calculation };
      
      // –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç —á–µ—Ä–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π API endpoint
      if (!calculation.result) {
        console.log('üîç [DEBUG] CalculationsPage.js: No result found for viewing, executing calculation...');
        const response = await fetch(`https://localhost/api/calculations/${calculation.type}/execute`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${authToken}`
          },
          body: JSON.stringify({
            calculation_type: calculation.type,
            parameters: calculation.parameters
          })
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const result = await response.json();
        calculationToView.result = result;
      }
      
      setViewingCalculation(calculationToView);
      setShowViewCalculationModal(true);
    } catch (error) {
      console.error('üîç [DEBUG] CalculationsPage.js: View calculation error:', error);
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—Å—á–µ—Ç–∞');
    }
  };

  // –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–∞—Å—á–µ—Ç–∞
  const handleDownloadCalculation = async (calculation) => {
    if (!isAuthenticated || !authToken) {
      setError('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return;
    }

    try {
      let calculationData = { ...calculation };
      
      // –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä–∞—Å—á–µ—Ç —á–µ—Ä–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π API endpoint
      if (!calculation.result) {
        console.log('üîç [DEBUG] CalculationsPage.js: No result found, executing calculation...');
        const response = await fetch(`https://localhost/api/calculations/${calculation.type}/execute`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${authToken}`
          },
          body: JSON.stringify({
            calculation_type: calculation.type,
            parameters: calculation.parameters
          })
        });

        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }

        const result = await response.json();
        calculationData.result = result;
      }

      // –°–æ–∑–¥–∞–µ–º JSON —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ —Ä–∞—Å—á–µ—Ç–∞
      const finalData = {
        name: calculationData.name,
        description: calculationData.description,
        type: calculationData.type,
        category: calculationData.category,
        status: calculationData.status,
        created_at: calculationData.created_at,
        parameters: calculationData.parameters,
        result: calculationData.result
      };

      const dataStr = JSON.stringify(finalData, null, 2);
      const dataBlob = new Blob([dataStr], { type: 'application/json' });
      
      const url = URL.createObjectURL(dataBlob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `${calculation.name.replace(/[^a-zA-Z0-9]/g, '_')}_${new Date(calculation.created_at).toISOString().split('T')[0]}.json`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      URL.revokeObjectURL(url);

      setSuccess('–†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—Å—á–µ—Ç–∞ —Å–∫–∞—á–∞–Ω');
    } catch (error) {
      console.error('üîç [DEBUG] CalculationsPage.js: Download error:', error);
      setError('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞');
    }
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å—á–µ—Ç–∞
  const ViewCalculationModal = () => {
    if (!viewingCalculation) return null;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π –∏ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è
    const getFieldInfo = (key, value) => {
      const fieldMap = {
        // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã
        'seismic_zone': { name: '–°–µ–π—Å–º–∏—á–µ—Å–∫–∏–π —Ä–∞–π–æ–Ω', unit: '–±–∞–ª–ª–æ–≤' },
        'soil_category': { name: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≥—Ä—É–Ω—Ç–∞', unit: '' },
        'base_seismic_coefficient': { name: '–ë–∞–∑–æ–≤—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–µ–π—Å–º–∏—á–Ω–æ—Å—Ç–∏', unit: '' },
        'soil_coefficient': { name: '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≥—Ä—É–Ω—Ç–∞', unit: '' },
        'dynamic_coefficient': { name: '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–∏–Ω–∞–º–∏—á–Ω–æ—Å—Ç–∏', unit: '' },
        'seismic_coefficient': { name: '–ò—Ç–æ–≥–æ–≤—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–µ–π—Å–º–∏—á–Ω–æ—Å—Ç–∏', unit: '' },
        'seismic_load': { name: '–°–µ–π—Å–º–∏—á–µ—Å–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞', unit: '–∫–ù' },
        'structure_weight': { name: '–ú–∞—Å—Å–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', unit: '—Ç' },
        'natural_period': { name: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –∫–æ–ª–µ–±–∞–Ω–∏–π', unit: '—Å' },
        'stability_check': { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–π—Å–º–∏—á–µ—Å–∫–æ–π —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏', unit: '' },
        
        // –†–∞—Å—á–µ—Ç—ã –Ω–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç—å
        'moment_of_inertia': { name: '–ú–æ–º–µ–Ω—Ç –∏–Ω–µ—Ä—Ü–∏–∏', unit: '—Å–º‚Å¥' },
        'max_moment': { name: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –º–æ–º–µ–Ω—Ç', unit: '–∫–ù¬∑–º' },
        'max_stress': { name: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ', unit: '–ú–ü–∞' },
        'allowable_stress': { name: '–î–æ–ø—É—Å–∫–∞–µ–º–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ', unit: '–ú–ü–∞' },
        'strength_check': { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç–∏', unit: '' },
        'deflection': { name: '–ü—Ä–æ–≥–∏–±', unit: '–º' },
        'deflection_limit': { name: '–ü—Ä–µ–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ–≥–∏–±', unit: '–º' },
        'deflection_check': { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∂–µ—Å—Ç–∫–æ—Å—Ç–∏', unit: '' },
        'safety_factor_used': { name: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏', unit: '' },
        
        // –†–∞—Å—á–µ—Ç—ã –Ω–∞ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å
        'element_length': { name: '–î–ª–∏–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–∞', unit: '–º' },
        'design_length': { name: '–†–∞—Å—á–µ—Ç–Ω–∞—è –¥–ª–∏–Ω–∞', unit: '–º' },
        'radius_of_gyration': { name: '–†–∞–¥–∏—É—Å –∏–Ω–µ—Ä—Ü–∏–∏', unit: '—Å–º' },
        'slenderness': { name: '–ì–∏–±–∫–æ—Å—Ç—å', unit: '' },
        'critical_force': { name: '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–ª–∞', unit: '–∫–ù' },
        'end_conditions': { name: '–¢–∏–ø –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è', unit: '' },
        
        // –†–∞—Å—á–µ—Ç—ã –Ω–∞ –∂–µ—Å—Ç–∫–æ—Å—Ç—å
        'span_length': { name: '–ü—Ä–æ–ª–µ—Ç', unit: '–º' },
        'distributed_load': { name: '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞', unit: '–∫–ù/–º' },
        'elastic_modulus': { name: '–ú–æ–¥—É–ª—å —É–ø—Ä—É–≥–æ—Å—Ç–∏', unit: '–ú–ü–∞' },
        'rotation_angle': { name: '–£–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞', unit: '—Ä–∞–¥' },
        
        // –†–∞—Å—á–µ—Ç—ã –Ω–∞ —Ç—Ä–µ—â–∏–Ω–æ—Å—Ç–æ–π–∫–æ—Å—Ç—å
        'reinforcement_area': { name: '–ü–ª–æ—â–∞–¥—å –∞—Ä–º–∞—Ç—É—Ä—ã', unit: '–º–º¬≤' },
        'concrete_class': { name: '–ö–ª–∞—Å—Å –±–µ—Ç–æ–Ω–∞', unit: '' },
        'concrete_strength': { name: '–ü—Ä–æ—á–Ω–æ—Å—Ç—å –±–µ—Ç–æ–Ω–∞', unit: '–ú–ü–∞' },
        'concrete_elastic_modulus': { name: '–ú–æ–¥—É–ª—å —É–ø—Ä—É–≥–æ—Å—Ç–∏ –±–µ—Ç–æ–Ω–∞', unit: '–ú–ü–∞' },
        'bending_moment': { name: '–ò–∑–≥–∏–±–∞—é—â–∏–π –º–æ–º–µ–Ω—Ç', unit: '–∫–ù¬∑–º' },
        'crack_width': { name: '–®–∏—Ä–∏–Ω–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è —Ç—Ä–µ—â–∏–Ω', unit: '–º–º' },
        'crack_width_limit': { name: '–ü—Ä–µ–¥–µ–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ —Ç—Ä–µ—â–∏–Ω', unit: '–º–º' },
        'cracking_check': { name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ—â–∏–Ω–æ—Å—Ç–æ–π–∫–æ—Å—Ç–∏', unit: '' },
        'reinforcement_ratio': { name: '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∞—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è', unit: '' },
        
        // –û–±—â–∏–µ –ø–æ–ª—è
        'execution_time': { name: '–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è', unit: '—Å' },
        'calculation_type': { name: '–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞', unit: '' },
        'timestamp': { name: '–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è', unit: '' },
        'status': { name: '–°—Ç–∞—Ç—É—Å', unit: '' }
      };

      const fieldInfo = fieldMap[key] || { name: key.replace(/_/g, ' '), unit: '' };
      return fieldInfo;
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
    const formatValue = (value, unit) => {
      if (typeof value === 'boolean') {
        return value ? '–î–∞' : '–ù–µ—Ç';
      }
      if (typeof value === 'number') {
        const formatted = value.toFixed(2);
        return unit ? `${formatted} ${unit}` : formatted;
      }
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≥—Ä—É–Ω—Ç–∞
      if (typeof value === 'string' && value.length === 1 && ['A', 'B', 'C', 'D'].includes(value)) {
        const soilCategories = {
          'A': 'A - –°–∫–∞–ª—å–Ω—ã–µ –≥—Ä—É–Ω—Ç—ã',
          'B': 'B - –ü–ª–æ—Ç–Ω—ã–µ –≥—Ä—É–Ω—Ç—ã', 
          'C': 'C - –°—Ä–µ–¥–Ω–∏–µ –≥—Ä—É–Ω—Ç—ã',
          'D': 'D - –°–ª–∞–±—ã–µ –≥—Ä—É–Ω—Ç—ã'
        };
        return soilCategories[value] || value;
      }
      // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ç–∏–ø–∞ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è
      if (typeof value === 'string' && ['pinned', 'fixed', 'cantilever'].includes(value)) {
        const endConditions = {
          'pinned': '–®–∞—Ä–Ω–∏—Ä–Ω–æ–µ',
          'fixed': '–ñ–µ—Å—Ç–∫–æ–µ',
          'cantilever': '–ö–æ–Ω—Å–æ–ª—å–Ω–æ–µ'
        };
        return endConditions[value] || value;
      }
      return value;
    };

    const renderCalculationResult = (result) => {
      if (!result) return <p className="text-gray-500">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</p>;

      return (
        <div className="space-y-4">
          {Object.entries(result).map(([key, value]) => {
            if (key === 'normative_links' || key === 'safety_recommendations') return null;
            if (typeof value === 'object' && value !== null) {
              return (
                <div key={key} className="bg-gray-50 p-4 rounded-lg">
                  <h4 className="font-medium text-gray-900 mb-2">
                    {getFieldInfo(key, value).name.toUpperCase()}
                  </h4>
                  <div className="grid grid-cols-2 gap-2 text-sm">
                    {Object.entries(value).map(([subKey, subValue]) => {
                      const subFieldInfo = getFieldInfo(subKey, subValue);
                      return (
                        <div key={subKey} className="flex justify-between">
                          <span className="text-gray-600">{subFieldInfo.name}:</span>
                          <span className="font-medium">
                            {formatValue(subValue, subFieldInfo.unit)}
                          </span>
                        </div>
                      );
                    })}
                  </div>
                </div>
              );
            }
            const fieldInfo = getFieldInfo(key, value);
            return (
              <div key={key} className="flex justify-between py-1 border-b border-gray-200">
                <span className="text-gray-600">{fieldInfo.name}:</span>
                <span className="font-medium">
                  {formatValue(value, fieldInfo.unit)}
                </span>
              </div>
            );
          })}
          
          {result.normative_links && (
            <div className="bg-blue-50 p-4 rounded-lg">
              <h4 className="font-medium text-blue-900 mb-2">–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h4>
              <ul className="text-sm text-blue-800">
                {Object.entries(result.normative_links).map(([doc, description]) => (
                  <li key={doc} className="mb-1">
                    <strong>{doc}:</strong> {description}
                  </li>
                ))}
              </ul>
            </div>
          )}

          {result.safety_recommendations && (
            <div className="bg-yellow-50 p-4 rounded-lg">
              <h4 className="font-medium text-yellow-900 mb-2">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</h4>
              <ul className="text-sm text-yellow-800">
                {result.safety_recommendations.map((rec, index) => (
                  <li key={index} className="mb-1">‚Ä¢ {rec}</li>
                ))}
              </ul>
            </div>
          )}
        </div>
      );
    };

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div className="bg-white rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-xl font-semibold text-gray-900">
              –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å—á–µ—Ç–∞: {viewingCalculation.name}
            </h2>
            <button
              onClick={() => setShowViewCalculationModal(false)}
              className="text-gray-400 hover:text-gray-600"
            >
              <X className="w-6 h-6" />
            </button>
          </div>

          <div className="space-y-6">
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="bg-gray-50 p-4 rounded-lg">
              <h3 className="font-medium text-gray-900 mb-3">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
              <div className="grid grid-cols-2 gap-4 text-sm">
                <div>
                  <span className="text-gray-600">–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞:</span>
                  <span className="ml-2 font-medium">
                    {calculationTypes.find(t => t.id === viewingCalculation.type)?.name || viewingCalculation.type}
                  </span>
                </div>
                <div>
                  <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                  <span className={`ml-2 px-2 py-1 text-xs rounded-full ${
                    viewingCalculation.status === 'completed' ? 'bg-green-100 text-green-800' :
                    viewingCalculation.status === 'processing' ? 'bg-yellow-100 text-yellow-800' :
                    'bg-red-100 text-red-800'
                  }`}>
                    {viewingCalculation.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω' :
                     viewingCalculation.status === 'processing' ? '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ' : '–û—à–∏–±–∫–∞'}
                  </span>
                </div>
                <div>
                  <span className="text-gray-600">–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:</span>
                  <span className="ml-2 font-medium">
                    {new Date(viewingCalculation.created_at).toLocaleString('ru-RU')}
                  </span>
                </div>
                <div>
                  <span className="text-gray-600">–û–ø–∏—Å–∞–Ω–∏–µ:</span>
                  <span className="ml-2 font-medium">{viewingCalculation.description}</span>
                </div>
              </div>
            </div>

            {/* –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á–µ—Ç–∞ */}
            {viewingCalculation.parameters && (
              <div className="bg-blue-50 p-4 rounded-lg">
                <h3 className="font-medium text-blue-900 mb-3">–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ä–∞—Å—á–µ—Ç–∞</h3>
                <div className="grid grid-cols-2 gap-2 text-sm">
                  {Object.entries(viewingCalculation.parameters).map(([key, value]) => {
                    const fieldInfo = getFieldInfo(key, value);
                    return (
                      <div key={key} className="flex justify-between">
                        <span className="text-blue-700">{fieldInfo.name}:</span>
                        <span className="font-medium text-blue-900">
                          {formatValue(value, fieldInfo.unit)}
                        </span>
                      </div>
                    );
                  })}
                </div>
              </div>
            )}

            {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ */}
            <div>
              <h3 className="font-medium text-gray-900 mb-3">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞</h3>
              {renderCalculationResult(viewingCalculation.result)}
            </div>
          </div>

          <div className="flex justify-end space-x-3 pt-6 border-t mt-6">
            <button
              onClick={() => handleDownloadCalculation(viewingCalculation)}
              className="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 flex items-center"
            >
              <Download className="w-4 h-4 mr-2" />
              –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            </button>
            <button
              onClick={() => setShowViewCalculationModal(false)}
              className="px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50"
            >
              –ó–∞–∫—Ä—ã—Ç—å
            </button>
          </div>
        </div>
      </div>
    );
  };

  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞
  const NewCalculationModal = () => {
    const [formData, setFormData] = useState({
      name: '',
      description: '',
      parameters: {}
    });

    const handleSubmit = (e) => {
      e.preventDefault();
      createCalculation({
        ...formData,
        type: selectedCalculation.type,
        category: selectedCalculation.category
      });
    };

    return (
      <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
        <div className="bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto">
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-xl font-semibold text-gray-900">
              –ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç: {selectedCalculation?.name}
            </h2>
            <button
              onClick={() => setShowNewCalculationModal(false)}
              className="text-gray-400 hover:text-gray-600"
            >
              <X className="w-6 h-6" />
            </button>
          </div>

          <form onSubmit={handleSubmit} className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞
              </label>
              <input
                type="text"
                value={formData.name}
                onChange={(e) => setFormData({...formData, name: e.target.value})}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –û–ø–∏—Å–∞–Ω–∏–µ
              </label>
              <textarea
                value={formData.description}
                onChange={(e) => setFormData({...formData, description: e.target.value})}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                rows={3}
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ü—Ä–∏–º–µ–Ω—è–µ–º—ã–µ –Ω–æ—Ä–º—ã
              </label>
              <div className="space-y-2">
                {selectedCalculation?.norms?.map((norm, index) => (
                  <div key={index} className="flex items-center">
                    <CheckCircle className="w-4 h-4 text-green-500 mr-2" />
                    <span className="text-sm text-gray-600">{norm}</span>
                  </div>
                ))}
              </div>
            </div>

            <div className="flex justify-end space-x-3 pt-4">
              <button
                type="button"
                onClick={() => setShowNewCalculationModal(false)}
                className="px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50"
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                type="submit"
                disabled={loading}
                className="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50"
              >
                {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : '–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—á–µ—Ç'}
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  if (!isAuthenticated) {
    return (
      <div className="flex items-center justify-center h-64">
        <div className="text-center">
          <AlertCircle className="w-12 h-12 text-gray-400 mx-auto mb-4" />
          <p className="text-gray-600">–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–∞—Å—á–µ—Ç–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è</p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-gray-900 flex items-center">
            <Calculator className="w-8 h-8 mr-3 text-blue-600" />
            {calculationType === 'all' ? '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã' : 
             calculationType === 'structural' ? '–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏' :
             calculationType === 'electrical' ? '–≠–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã' :
             calculationType === 'mechanical' ? '–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã' :
             calculationType === 'thermal' ? '–¢–µ–ø–ª–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã' :
             calculationType === 'safety' ? '–†–∞—Å—á–µ—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' :
             '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã'}
          </h1>
          <p className="text-gray-600 mt-1">
            {calculationType === 'all' ? '–†–∞—Å—á–µ—Ç—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞–º–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∞–º–∏' :
             calculationType === 'structural' ? '–†–∞—Å—á–µ—Ç—ã –ø—Ä–æ—á–Ω–æ—Å—Ç–∏, —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–π —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π' :
             calculationType === 'electrical' ? '–†–∞—Å—á–µ—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Ü–µ–ø–µ–π –∏ —Å–∏—Å—Ç–µ–º' :
             calculationType === 'mechanical' ? '–†–∞—Å—á–µ—Ç—ã –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º –∏ –¥–µ—Ç–∞–ª–µ–π' :
             calculationType === 'thermal' ? '–†–∞—Å—á–µ—Ç—ã —Ç–µ–ø–ª–æ–æ–±–º–µ–Ω–∞ –∏ —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏' :
             calculationType === 'safety' ? '–†–∞—Å—á–µ—Ç—ã –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' :
             '–†–∞—Å—á–µ—Ç—ã –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –Ω–æ—Ä–º–∞–º–∏ –∏ –º–µ—Ç–æ–¥–∏–∫–∞–º–∏'}
          </p>
        </div>
      </div>

      {/* –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫ */}
      <div className="bg-white rounded-lg shadow p-4">
        <div className="flex flex-col lg:flex-row gap-4">
          <div className="flex-1">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4" />
              <input
                type="text"
                placeholder="–ü–æ–∏—Å–∫ —Ä–∞—Å—á–µ—Ç–æ–≤..."
                value={searchTerm}
                onChange={handleSearchChange}
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
              />
            </div>
          </div>
          <div className="flex gap-2">
            <select
              value={filterCategory}
              onChange={handleFilterChange}
              className="px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
            >
              {categories.map(category => (
                <option key={category.id} value={category.id}>
                  {category.name}
                </option>
              ))}
            </select>
            <button
              onClick={() => handleSortChange('date')}
              className="px-3 py-2 border border-gray-300 rounded-md hover:bg-gray-50 flex items-center"
            >
              {sortBy === 'date' && sortOrder === 'asc' ? <SortAsc className="w-4 h-4" /> : <SortDesc className="w-4 h-4" />}
            </button>
          </div>
        </div>
      </div>

      {/* –í–∏–¥—ã —Ä–∞—Å—á–µ—Ç–æ–≤ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {calculationTypes
          .filter(type => calculationType === 'all' || type.id === calculationType)
          .map((type) => (
          <div
            key={type.id}
            className="bg-white rounded-lg shadow p-6 hover:shadow-lg transition-shadow border border-gray-200"
          >
            <div className="flex items-start justify-between mb-4">
              <div className="text-3xl">{type.icon}</div>
              <span className="text-xs px-2 py-1 bg-blue-100 text-blue-800 rounded-full">
                {categories.find(c => c.id === type.category)?.name}
              </span>
            </div>
            
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              {type.name}
            </h3>
            
            <p className="text-gray-600 text-sm mb-4">
              {type.description}
            </p>
            
            <div className="space-y-1">
              <p className="text-xs font-medium text-gray-700">–ü—Ä–∏–º–µ–Ω—è–µ–º—ã–µ –Ω–æ—Ä–º—ã:</p>
              {type.norms.slice(0, 2).map((norm, index) => (
                <p key={index} className="text-xs text-gray-500">‚Ä¢ {norm}</p>
              ))}
              {type.norms.length > 2 && (
                <p className="text-xs text-gray-400">–∏ –µ—â–µ {type.norms.length - 2}...</p>
              )}
            </div>
            
            <button 
              className="w-full mt-4 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors flex items-center justify-center"
              onClick={() => {
                if (type.id === 'structural') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
                  window.location.href = '/structural-calculations';
                } else if (type.id === 'foundation') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∞—Å—á–µ—Ç–æ–≤ –æ—Å–Ω–æ–≤–∞–Ω–∏–π –∏ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–æ–≤
                  window.location.href = '/foundation-calculations';
                } else if (type.id === 'degasification') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–µ–≥–∞–∑–∞—Ü–∏–∏
                  window.location.href = '/degasification-calculations';
                } else if (type.id === 'thermal') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–µ–ø–ª–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
                  window.location.href = '/thermal-calculations';
                } else if (type.id === 'ventilation') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
                  window.location.href = '/ventilation-calculations';
                } else if (type.id === 'electrical') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
                  window.location.href = '/electrical-calculations';
                } else if (type.id === 'water') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏—è
                  window.location.href = '/water-supply-calculations';
                } else if (type.id === 'fire') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∂–∞—Ä–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
                  window.location.href = '/fire-safety-calculations';
                } else if (type.id === 'acoustic') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–∫—É—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
                  window.location.href = '/acoustic-calculations';
                } else if (type.id === 'lighting') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Å–≤–µ—â–µ–Ω–∏—è
                  window.location.href = '/lighting-calculations';
                } else if (type.id === 'geotechnical') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≥–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
                  window.location.href = '/geological-calculations';
                } else if (type.id === 'uav_protection') {
                  // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞—â–∏—Ç—ã –æ—Ç –ë–ü–õ–ê
                  window.location.href = '/uav-protection-calculations';
                } else {
                  handleNewCalculation(type.id);
                }
              }}
            >
              <Plus className="w-4 h-4 mr-2" />
              –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—á–µ—Ç
            </button>
          </div>
        ))}
      </div>

      {/* –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤ */}
      {calculations.length > 0 && (
        <div className="bg-white rounded-lg shadow">
          <div className="p-6 border-b border-gray-200">
            <h2 className="text-lg font-semibold text-gray-900">
              {calculationType === 'all' ? '–ú–æ–∏ —Ä–∞—Å—á–µ—Ç—ã' :
               calculationType === 'structural' ? '–ú–æ–∏ —Ä–∞—Å—á–µ—Ç—ã —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π' :
               calculationType === 'electrical' ? '–ú–æ–∏ —ç–ª–µ–∫—Ç—Ä–æ—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã' :
               calculationType === 'mechanical' ? '–ú–æ–∏ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã' :
               calculationType === 'thermal' ? '–ú–æ–∏ —Ç–µ–ø–ª–æ–≤—ã–µ —Ä–∞—Å—á–µ—Ç—ã' :
               calculationType === 'safety' ? '–ú–æ–∏ —Ä–∞—Å—á–µ—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' :
               '–ú–æ–∏ —Ä–∞—Å—á–µ—Ç—ã'} ({filteredCalculations.length})
            </h2>
          </div>
          
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –ù–∞–∑–≤–∞–Ω–∏–µ
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –¢–∏–ø
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –°—Ç–∞—Ç—É—Å
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –î–µ–π—Å—Ç–≤–∏—è
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {filteredCalculations.map((calculation) => (
                  <tr key={calculation.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div>
                        <div className="text-sm font-medium text-gray-900">
                          {calculation.name}
                        </div>
                        <div className="text-sm text-gray-500">
                          {calculation.description}
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className="text-sm text-gray-900">
                        {calculationTypes.find(t => t.id === calculation.type)?.name || calculation.type}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${
                        calculation.status === 'completed' ? 'bg-green-100 text-green-800' :
                        calculation.status === 'processing' ? 'bg-yellow-100 text-yellow-800' :
                        'bg-red-100 text-red-800'
                      }`}>
                        {calculation.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω' :
                         calculation.status === 'processing' ? '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ' : '–û—à–∏–±–∫–∞'}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {new Date(calculation.created_at).toLocaleDateString('ru-RU')}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm font-medium">
                      <div className="flex space-x-2">
                        <button 
                          onClick={() => handleViewCalculation(calculation)}
                          className="text-blue-600 hover:text-blue-900"
                          title="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å—á–µ—Ç"
                        >
                          <Eye className="w-4 h-4" />
                        </button>
                        <button 
                          onClick={() => handleDownloadCalculation(calculation)}
                          className="text-green-600 hover:text-green-900"
                          title="–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
                        >
                          <Download className="w-4 h-4" />
                        </button>
                        <button 
                          onClick={() => deleteCalculation(calculation.id)}
                          className="text-red-600 hover:text-red-900"
                          title="–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å—á–µ—Ç"
                        >
                          <Trash2 className="w-4 h-4" />
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}

      {/* –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∏ —É—Å–ø–µ—Ö–µ */}
      {error && (
        <div className="bg-red-50 border border-red-200 rounded-md p-4">
          <div className="flex">
            <AlertCircle className="w-5 h-5 text-red-400 mr-2" />
            <p className="text-red-800">{error}</p>
          </div>
        </div>
      )}

      {success && (
        <div className="bg-green-50 border border-green-200 rounded-md p-4">
          <div className="flex">
            <CheckCircle className="w-5 h-5 text-green-400 mr-2" />
            <p className="text-green-800">{success}</p>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—á–µ—Ç–∞ */}
      {showNewCalculationModal && selectedCalculation && <NewCalculationModal />}
      
      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å—á–µ—Ç–∞ */}
      {showViewCalculationModal && viewingCalculation && <ViewCalculationModal />}
      
      {/* –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã —Ç–µ–ø–µ—Ä—å –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ */}
    </div>
  );
};

export default CalculationsPage;
