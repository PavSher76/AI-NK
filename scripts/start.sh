#!/bin/bash

set -e

echo "üöÄ –ó–∞–ø—É—Å–∫ AI-NK —Å–∏—Å—Ç–µ–º—ã..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
check_health() {
    local service=$1
    local url=$2
    local max_attempts=30
    local attempt=1
    
    log "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è $service..."
    
    while [ $attempt -le $max_attempts ]; do
        if curl -f -s "$url" > /dev/null 2>&1; then
            log "‚úÖ $service –≥–æ—Ç–æ–≤"
            return 0
        fi
        
        log "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts –¥–ª—è $service..."
        sleep 2
        ((attempt++))
    done
    
    log "‚ùå $service –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ $max_attempts –ø–æ–ø—ã—Ç–æ–∫"
    return 1
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
log "üìã –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AI-NK —Å–∏—Å—Ç–µ–º—ã..."

# –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [ -f "/app/init.sh" ]; then
    log "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    /app/init.sh
fi

# –ó–∞–ø—É—Å–∫ PostgreSQL
log "üêò –ó–∞–ø—É—Å–∫ PostgreSQL..."
pg_ctl -D /app/data/postgres -l /app/logs/postgres.log start || true

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL
check_health "PostgreSQL" "http://localhost:5432" || {
    log "‚ùå PostgreSQL –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    exit 1
}

# –ó–∞–ø—É—Å–∫ Redis
log "üî¥ –ó–∞–ø—É—Å–∫ Redis..."
redis-server --daemonize yes --logfile /app/logs/redis.log

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Redis
check_health "Redis" "http://localhost:6379" || {
    log "‚ùå Redis –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    exit 1
}

# –ó–∞–ø—É—Å–∫ Qdrant
log "üîç –ó–∞–ø—É—Å–∫ Qdrant..."
qdrant --storage-path /app/data/qdrant --log-level INFO > /app/logs/qdrant.log 2>&1 &

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Qdrant
check_health "Qdrant" "http://localhost:6333/health" || {
    log "‚ùå Qdrant –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    exit 1
}

# –ó–∞–ø—É—Å–∫ Python —Å–µ—Ä–≤–∏—Å–æ–≤
log "üêç –ó–∞–ø—É—Å–∫ Python —Å–µ—Ä–≤–∏—Å–æ–≤..."

# Document Parser
log "üìÑ –ó–∞–ø—É—Å–∫ Document Parser..."
cd /app/document_parser
python -m uvicorn main:app --host 0.0.0.0 --port 8001 --timeout-keep-alive 600 --limit-max-requests 500 --limit-concurrency 5 --timeout-graceful-shutdown 60 > /app/logs/document-parser.log 2>&1 &

# RAG Service
log "üß† –ó–∞–ø—É—Å–∫ RAG Service..."
cd /app/rag_service
python -m uvicorn main:app --host 0.0.0.0 --port 8002 > /app/logs/rag-service.log 2>&1 &

# Rule Engine
log "‚öôÔ∏è –ó–∞–ø—É—Å–∫ Rule Engine..."
cd /app/rule_engine
python -m uvicorn main:app --host 0.0.0.0 --port 8003 > /app/logs/rule-engine.log 2>&1 &

# Gateway
log "üåê –ó–∞–ø—É—Å–∫ Gateway..."
cd /app/gateway
python -m uvicorn app:app --host 0.0.0.0 --port 8004 > /app/logs/gateway.log 2>&1 &

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
log "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."

check_health "Document Parser" "http://localhost:8001/health" || {
    log "‚ùå Document Parser –Ω–µ –≥–æ—Ç–æ–≤"
    exit 1
}

check_health "RAG Service" "http://localhost:8002/health" || {
    log "‚ùå RAG Service –Ω–µ –≥–æ—Ç–æ–≤"
    exit 1
}

check_health "Rule Engine" "http://localhost:8003/health" || {
    log "‚ùå Rule Engine –Ω–µ –≥–æ—Ç–æ–≤"
    exit 1
}

check_health "Gateway" "http://localhost:8004/health" || {
    log "‚ùå Gateway –Ω–µ –≥–æ—Ç–æ–≤"
    exit 1
}

# –ó–∞–ø—É—Å–∫ Nginx
log "üåê –ó–∞–ø—É—Å–∫ Nginx..."
nginx -g "daemon off;" &

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Nginx
check_health "Nginx" "http://localhost:80" || {
    log "‚ùå Nginx –Ω–µ –≥–æ—Ç–æ–≤"
    exit 1
}

log "üéâ AI-NK —Å–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!"
log "üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
log "   - Frontend: http://localhost"
log "   - API Gateway: http://localhost/api"
log "   - Document Parser: http://localhost:8001"
log "   - RAG Service: http://localhost:8002"
log "   - Rule Engine: http://localhost:8003"

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
log "üìà –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
while true; do
    sleep 30
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    if ! pgrep -f "uvicorn.*main:app" > /dev/null; then
        log "‚ùå –û–¥–∏–Ω –∏–∑ Python —Å–µ—Ä–≤–∏—Å–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è"
        exit 1
    fi
    
    if ! pgrep nginx > /dev/null; then
        log "‚ùå Nginx –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è"
        exit 1
    fi
    
    if ! pgrep postgres > /dev/null; then
        log "‚ùå PostgreSQL –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è"
        exit 1
    fi
    
    log "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ"
done
