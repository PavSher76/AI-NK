#!/bin/bash

# AI-–ù–ö - –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
# –°–æ–∑–¥–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –ø–∞–∫–µ—Ç —Å–æ –≤—Å–µ–º–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
PACKAGE_NAME="ai-nk-deployment-${TIMESTAMP}"
PACKAGE_DIR="ai-nk-deployment/packages/${PACKAGE_NAME}"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–∫–µ—Ç–∞
create_package_structure() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–∞–∫–µ—Ç–∞..."
    
    mkdir -p "$PACKAGE_DIR"
    mkdir -p "$PACKAGE_DIR/ai-nk"
    mkdir -p "$PACKAGE_DIR/scripts"
    mkdir -p "$PACKAGE_DIR/docs"
    mkdir -p "$PACKAGE_DIR/configs"
    mkdir -p "$PACKAGE_DIR/examples"
    
    log_success "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–∫–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞"
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
copy_source_code() {
    log_info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞..."
    
    # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
    cd ..
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    cp -r calculation_service "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp -r rag_service "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp -r chat_service "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp -r gateway "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp -r frontend "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp -r keycloak "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp -r document_parser "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp -r vllm_service "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp -r rule_engine "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    cp docker-compose.yaml "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp docker-compose.prod.yaml "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp nginx.conf "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp config.py "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    
    # SQL —Å–∫—Ä–∏–ø—Ç—ã
    cp -r sql "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    
    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cp -r configs "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    
    # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
    cp README.md "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp LICENSE "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp CHANGELOG.md "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp DEPLOYMENT.md "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    cp INSTALLATION_GUIDE.md "ai-nk-deployment/packages/$PACKAGE_NAME/ai-nk/"
    
    # –í–æ–∑–≤—Ä–∞—Ç –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
    cd ai-nk-deployment
    
    log_success "–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤
copy_scripts() {
    log_info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤..."
    
    cp scripts/install.sh "$PACKAGE_DIR/scripts/"
    cp scripts/quick-deploy.sh "$PACKAGE_DIR/scripts/"
    cp scripts/create-package.sh "$PACKAGE_DIR/scripts/"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    cat > "$PACKAGE_DIR/install.sh" << 'EOF'
#!/bin/bash

# AI-–ù–ö - –ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
set -e

echo "üöÄ AI-–ù–ö - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—è"
echo "=========================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
MODE=${1:-production}

if [ "$MODE" = "dev" ] || [ "$MODE" = "development" ]; then
    echo "üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    chmod +x scripts/quick-deploy.sh
    ./scripts/quick-deploy.sh
else
    echo "üè≠ –ü—Ä–æ–¥–∞–∫—à–Ω —Ä–µ–∂–∏–º"
    chmod +x scripts/install.sh
    ./scripts/install.sh
fi

echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
EOF

    chmod +x "$PACKAGE_DIR/install.sh"
    chmod +x "$PACKAGE_DIR/scripts/"*.sh
    
    log_success "–°–∫—Ä–∏–ø—Ç—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
create_documentation() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
    
    # –û—Å–Ω–æ–≤–Ω–æ–π README
    cat > "$PACKAGE_DIR/README.md" << 'EOF'
# AI-–ù–ö - –°–∏—Å—Ç–µ–º–∞ –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—è

## –û–ø–∏—Å–∞–Ω–∏–µ

AI-–ù–ö - —ç—Ç–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.

## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- üìÑ **–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
- üîç **–ù–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—å**: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
- üßÆ **–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Ä–∞—Å—á–µ—Ç—ã**: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Ä–∞—Å—á–µ—Ç–æ–≤
- üí¨ **–ß–∞—Ç-–±–æ—Ç**: –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π
- üìä **–û—Ç—á–µ—Ç—ã**: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- üîê **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**: –ù–∞–¥–µ–∂–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
- üìà **–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥**: –ü–æ–ª–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

## –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞

–°–∏—Å—Ç–µ–º–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ:

- **API Gateway** - –µ–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –≤—Å–µ—Ö API
- **Calculation Service** - —Å–µ—Ä–≤–∏—Å –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
- **RAG Service** - —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- **Chat Service** - —Å–µ—Ä–≤–∏—Å —á–∞—Ç-–±–æ—Ç–∞
- **Document Parser** - —Å–µ—Ä–≤–∏—Å –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- **VLLM Service** - —Å–µ—Ä–≤–∏—Å —è–∑—ã–∫–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π
- **Frontend** - –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

## –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞

1. **–ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞**:
   ```bash
   ./install.sh
   ```

2. **–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã**:
   ```bash
   cd ai-nk
   ./start.sh
   ```

3. **–î–æ—Å—Ç—É–ø –∫ —Å–∏—Å—Ç–µ–º–µ**:
   - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: https://localhost
   - API: https://localhost/api

### –ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

```bash
./install.sh dev
```

## –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

### –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- **–û–°**: Linux (Ubuntu 20.04+) –∏–ª–∏ macOS (10.15+)
- **RAM**: 8GB
- **–î–∏—Å–∫**: 50GB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
- **CPU**: 4 —è–¥—Ä–∞
- **Docker**: 20.10+
- **Docker Compose**: 2.0+

### –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- **–û–°**: Linux (Ubuntu 22.04+) –∏–ª–∏ macOS (12+)
- **RAM**: 16GB+
- **–î–∏—Å–∫**: 100GB+ SSD
- **CPU**: 8+ —è–¥–µ—Ä

## –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–æ–π

### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

- `./start.sh` - –∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
- `./stop.sh` - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã
- `./restart.sh` - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
- `./update.sh` - –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
- `./backup.sh` - —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
- `./restore.sh <–∞—Ä—Ö–∏–≤>` - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
- `./monitor.sh` - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã
- `./cleanup.sh` - –æ—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã

### –†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã

- **–ü—Ä–æ–¥–∞–∫—à–Ω**: `./start.sh` (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
- **–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞**: `./start.sh dev`

## –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

### –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è

–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ñ–∞–π–ª–µ `.env`:

```env
# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
PROJECT_NAME=AI-–ù–ö
ENVIRONMENT=production
DEBUG=false

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
POSTGRES_DB=norms_db
POSTGRES_USER=norms_user
POSTGRES_PASSWORD=secure_password

# Redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=secure_password

# JWT
JWT_SECRET_KEY=your-secret-key
JWT_ALGORITHM=HS256
```

### SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã

–°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –¥–ª—è HTTPS.
–î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∑–∞–º–µ–Ω–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ –ø–∞–ø–∫–µ `ssl/`.

## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥

### –õ–æ–≥–∏

–õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ `logs/`:
- `logs/gateway/` - –ª–æ–≥–∏ API Gateway
- `logs/calculation-service/` - –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
- `logs/rag-service/` - –ª–æ–≥–∏ RAG —Å–µ—Ä–≤–∏—Å–∞
- `logs/chat-service/` - –ª–æ–≥–∏ —á–∞—Ç —Å–µ—Ä–≤–∏—Å–∞
- `logs/frontend/` - –ª–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞

### –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

```bash
# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
docker-compose logs -f

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
docker-compose logs -f gateway
```

### Prometheus –∏ Grafana

- **Prometheus**: http://localhost:9090
- **Grafana**: http://localhost:3001 (admin/admin)

## –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ

–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00.

### –†—É—á–Ω–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ

```bash
./backup.sh
```

### –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ

```bash
./restore.sh backups/20240101_120000.tar.gz
```

## –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. –ò–∑–º–µ–Ω–∏—Ç–µ –≤—Å–µ –ø–∞—Ä–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª
4. –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —Å–∏—Å—Ç–µ–º—É
5. –ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞

```bash
# –†–∞–∑—Ä–µ—à–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ—Ä—Ç—ã
ufw allow 80/tcp
ufw allow 443/tcp
ufw enable
```

## API

### –û—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã

- `GET /api/health` - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–∏—Å—Ç–µ–º—ã
- `POST /api/auth/login` - –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
- `GET /api/documents` - —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- `POST /api/documents/upload` - –∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
- `POST /api/calculations/execute` - –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞
- `GET /api/chat/message` - –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç

### –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API

–ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: https://localhost/api/docs

## –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞

### –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞

1. **–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è**:
   ```bash
   git clone <repository-url>
   cd ai-nk
   ```

2. **–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏**:
   ```bash
   ./start.sh dev
   ```

3. **–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤**:
   ```bash
   # –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
   docker-compose up -d --build calculation-service
   ```

### –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
ai-nk/
‚îú‚îÄ‚îÄ calculation_service/    # –°–µ—Ä–≤–∏—Å —Ä–∞—Å—á–µ—Ç–æ–≤
‚îú‚îÄ‚îÄ rag_service/           # RAG —Å–µ—Ä–≤–∏—Å
‚îú‚îÄ‚îÄ chat_service/          # –ß–∞—Ç —Å–µ—Ä–≤–∏—Å
‚îú‚îÄ‚îÄ gateway/               # API Gateway
‚îú‚îÄ‚îÄ frontend/              # –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚îú‚îÄ‚îÄ keycloak/              # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
‚îú‚îÄ‚îÄ document_parser/       # –ü–∞—Ä—Å–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
‚îú‚îÄ‚îÄ vllm_service/          # –Ø–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏
‚îú‚îÄ‚îÄ rule_engine/           # –î–≤–∏–∂–æ–∫ –ø—Ä–∞–≤–∏–ª
‚îú‚îÄ‚îÄ sql/                   # SQL —Å–∫—Ä–∏–ø—Ç—ã
‚îú‚îÄ‚îÄ configs/               # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
‚îú‚îÄ‚îÄ scripts/               # –°–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚îî‚îÄ‚îÄ docs/                  # –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
```

## –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫

### –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º

1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã
3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: `./monitor.sh`

### –ü—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é

1. –£–≤–µ–ª–∏—á—å—Ç–µ –æ–±—ä–µ–º RAM
2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã Docker
3. –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

### –ü—Ä–æ–±–ª–µ–º—ã —Å SSL

1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ –ø–∞–ø–∫–µ `ssl/`
2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
3. –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞

- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è**: [docs/](docs/)
- **–ü–æ–¥–¥–µ—Ä–∂–∫–∞**: support@ai-nk.ru
- **–ë–∞–≥-—Ç—Ä–µ–∫–µ—Ä**: https://github.com/ai-nk/issues
- **–§–æ—Ä—É–º**: https://forum.ai-nk.ru

## –õ–∏—Ü–µ–Ω–∑–∏—è

–ü—Ä–æ–µ–∫—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ª–∏—Ü–µ–Ω–∑–∏–µ–π MIT. –°–º. —Ñ–∞–π–ª [LICENSE](LICENSE).

## –ê–≤—Ç–æ—Ä—ã

- AI-–ù–ö Team
- –ö–æ–Ω—Ç—Ä–∏–±—å—é—Ç–æ—Ä—ã: [CONTRIBUTORS.md](CONTRIBUTORS.md)

## Changelog

–ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ñ–∞–π–ª–µ [CHANGELOG.md](CHANGELOG.md).
EOF

    # –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
    cat > "$PACKAGE_DIR/docs/INSTALLATION.md" << 'EOF'
# –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ AI-–ù–ö

## –û–±–∑–æ—Ä

–≠—Ç–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É AI-–ù–ö –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ.

## –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

### –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- **–û–°**: Linux (Ubuntu 20.04+) –∏–ª–∏ macOS (10.15+)
- **RAM**: 8GB
- **–î–∏—Å–∫**: 50GB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
- **CPU**: 4 —è–¥—Ä–∞
- **Docker**: 20.10+
- **Docker Compose**: 2.0+

### –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- **–û–°**: Linux (Ubuntu 22.04+) –∏–ª–∏ macOS (12+)
- **RAM**: 16GB+
- **–î–∏—Å–∫**: 100GB+ SSD
- **CPU**: 8+ —è–¥–µ—Ä

## –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker

#### Ubuntu/Debian
```bash
# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
sudo apt-get update

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ GPG –∫–ª—é—á–∞ Docker
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker
echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
sudo usermod -aG docker $USER
```

#### macOS
```bash
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Homebrew (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Desktop
brew install --cask docker
```

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose

```bash
# Ubuntu/Debian
sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

# macOS
brew install docker-compose
```

### –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
docker --version
docker-compose --version

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
docker run hello-world
```

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞ AI-–ù–ö

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞

1. **–ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞**:
   ```bash
   ./install.sh
   ```

2. **–°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º**:
   - –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
   - –°–æ–∑–¥–∞—Å—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
   - –ù–∞—Å—Ç—Ä–æ–∏—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é

### –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞

1. **–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞**:
   ```bash
   mkdir -p ai-nk/{data,logs,ssl,uploads,backups}
   mkdir -p ai-nk/data/{postgres,redis,qdrant}
   mkdir -p ai-nk/logs/{gateway,calculation-service,rag-service,chat-service,frontend}
   mkdir -p ai-nk/ssl/{certs,keys}
   mkdir -p ai-nk/uploads/{documents,reports}
   mkdir -p ai-nk/backups/{database,configs}
   ```

2. **–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤**:
   ```bash
   cp -r calculation_service ai-nk/
   cp -r rag_service ai-nk/
   cp -r chat_service ai-nk/
   cp -r gateway ai-nk/
   cp -r frontend ai-nk/
   cp -r keycloak ai-nk/
   cp -r document_parser ai-nk/
   cp -r vllm_service ai-nk/
   cp -r rule_engine ai-nk/
   cp docker-compose.yaml ai-nk/
   cp docker-compose.prod.yaml ai-nk/
   cp nginx.conf ai-nk/
   cp config.py ai-nk/
   cp -r sql ai-nk/
   cp -r configs ai-nk/
   ```

3. **–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏**:
   ```bash
   cp configs/.env.template ai-nk/.env
   # –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª
   ```

4. **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤**:
   ```bash
   cd ai-nk/ssl
   openssl req -x509 -newkey rsa:4096 -keyout keys/key.pem -out certs/cert.pem \
     -days 365 -nodes -subj "/C=RU/ST=Moscow/L=Moscow/O=AI-–ù–ö/OU=IT/CN=localhost"
   chmod 600 keys/*.pem
   chmod 644 certs/*.pem
   cd ../..
   ```

5. **–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤**:
   ```bash
   cd ai-nk
   docker-compose up -d
   ```

## –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏

### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤

```bash
# –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose ps

# –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤
docker-compose logs

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
curl -f http://localhost/health
```

### –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞

1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É: https://localhost
3. –î–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å AI-–ù–ö

### –ü—Ä–æ–≤–µ—Ä–∫–∞ API

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ API Gateway
curl -f https://localhost/api/health

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
curl -f https://localhost/api/calculations/types

# –ü—Ä–æ–≤–µ—Ä–∫–∞ RAG —Å–µ—Ä–≤–∏—Å–∞
curl -f https://localhost/api/rag/health
```

## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏

### –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

```bash
curl -X POST https://localhost/api/auth/register \
  -H "Content-Type: application/json" \
  -d '{
    "username": "admin",
    "email": "admin@example.com",
    "password": "secure_password",
    "role": "admin"
  }'
```

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Keycloak

1. –û—Ç–∫—Ä–æ–π—Ç–µ https://localhost/auth
2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (admin / –ø–∞—Ä–æ–ª—å –∏–∑ .env)
3. –°–æ–∑–¥–∞–π—Ç–µ realm –¥–ª—è AI-–ù–ö
4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ —Ä–æ–ª–∏

### –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

1. **Prometheus**: http://localhost:9090
2. **Grafana**: http://localhost:3001 (admin/admin)
3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞—à–±–æ—Ä–¥—ã –∏–∑ `configs/grafana/`

## –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫

### –ü—Ä–æ–±–ª–µ–º—ã —Å Docker

```bash
# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Docker
sudo systemctl restart docker

# –û—á–∏—Å—Ç–∫–∞ Docker
docker system prune -a

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ Docker
sudo journalctl -u docker.service
```

### –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ—Ä—Ç–∞–º–∏

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–Ω—è—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤
netstat -tulpn | grep -E ':(80|443|5432|6379)'

# –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤
sudo fuser -k 80/tcp
sudo fuser -k 443/tcp
```

### –ü—Ä–æ–±–ª–µ–º—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

```bash
# –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
docker-compose down
docker volume rm ai-nk_norms_db_data
docker-compose up -d

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
docker-compose exec norms-db psql -U norms_user -d norms_db -c "SELECT version();"
```

### –ü—Ä–æ–±–ª–µ–º—ã —Å SSL

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
openssl x509 -in ssl/certs/cert.pem -text -noout

# –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
rm ssl/certs/cert.pem ssl/keys/key.pem
openssl req -x509 -newkey rsa:4096 -keyout ssl/keys/key.pem -out ssl/certs/cert.pem \
  -days 365 -nodes -subj "/C=RU/ST=Moscow/L=Moscow/O=AI-–ù–ö/OU=IT/CN=localhost"
```

## –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ

### –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

```bash
# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
./backup.sh

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
./update.sh
```

### –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ

1. **–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤**:
   ```bash
   ./stop.sh
   ```

2. **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞**:
   ```bash
   git pull origin main
   ```

3. **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤**:
   ```bash
   docker-compose pull
   ```

4. **–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤**:
   ```bash
   ./start.sh
   ```

## –£–¥–∞–ª–µ–Ω–∏–µ

### –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ

1. **–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤**:
   ```bash
   ./stop.sh
   ```

2. **–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –∏ —Ç–æ–º–æ–≤**:
   ```bash
   docker-compose down --volumes --remove-orphans
   ```

3. **–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö**:
   ```bash
   rm -rf ai-nk/
   ```

4. **–û—á–∏—Å—Ç–∫–∞ Docker**:
   ```bash
   docker system prune -a
   ```

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º:

1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: `./monitor.sh`
2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: `docker-compose ps`
3. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: support@ai-nk.ru
EOF

    log_success "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤
create_examples() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤..."
    
    # –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞
    cat > "$PACKAGE_DIR/examples/production.env" << 'EOF'
# AI-–ù–ö - –ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
PROJECT_NAME=AI-–ù–ö
PROJECT_VERSION=1.0.0
ENVIRONMENT=production
DEBUG=false

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
POSTGRES_DB=norms_db
POSTGRES_USER=norms_user
POSTGRES_PASSWORD=CHANGE_ME_SECURE_PASSWORD
POSTGRES_HOST=norms-db
POSTGRES_PORT=5432

# Redis
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=CHANGE_ME_SECURE_PASSWORD

# Qdrant
QDRANT_HOST=qdrant
QDRANT_PORT=6333
QDRANT_API_KEY=CHANGE_ME_SECURE_API_KEY

# Keycloak
KEYCLOAK_ADMIN_USER=admin
KEYCLOAK_ADMIN_PASSWORD=CHANGE_ME_SECURE_PASSWORD
KEYCLOAK_DB_PASSWORD=CHANGE_ME_SECURE_PASSWORD

# JWT
JWT_SECRET_KEY=CHANGE_ME_VERY_SECURE_JWT_SECRET_KEY_64_CHARS_LONG
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# API Gateway
GATEWAY_HOST=yourdomain.com
GATEWAY_PORT=80
GATEWAY_SSL_PORT=443

# –°–µ—Ä–≤–∏—Å—ã
CALCULATION_SERVICE_PORT=8002
RAG_SERVICE_PORT=8003
CHAT_SERVICE_PORT=8004
DOCUMENT_PARSER_PORT=8005
VLLM_SERVICE_PORT=8006
FRONTEND_PORT=3000

# SSL
SSL_ENABLED=true
SSL_CERT_PATH=/app/ssl/certs/cert.pem
SSL_KEY_PATH=/app/ssl/keys/key.pem

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL=INFO
LOG_FORMAT=json

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
PROMETHEUS_PORT=9090
GRAFANA_PORT=3001

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE="0 2 * * *"

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
CORS_ORIGINS=["https://yourdomain.com", "https://www.yourdomain.com"]
RATE_LIMIT_REQUESTS=1000
RATE_LIMIT_WINDOW=60

# –§–∞–π–ª—ã
MAX_FILE_SIZE=100MB
ALLOWED_FILE_TYPES=["pdf", "doc", "docx", "txt", "rtf"]

# AI –º–æ–¥–µ–ª–∏
DEFAULT_MODEL=gpt-4
MODEL_TEMPERATURE=0.7
MAX_TOKENS=4000

# Email
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=your-email@gmail.com
EMAIL_PASSWORD=your-app-password
EMAIL_USE_TLS=true

# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
OPENAI_API_KEY=your-openai-api-key
ANTHROPIC_API_KEY=your-anthropic-api-key
OLLAMA_HOST=http://ollama:11434
EOF

    # –ü—Ä–∏–º–µ—Ä —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    cat > "$PACKAGE_DIR/examples/auto-deploy.sh" << 'EOF'
#!/bin/bash

# AI-–ù–ö - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
# –ü—Ä–∏–º–µ—Ä —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DOMAIN="yourdomain.com"
EMAIL="admin@yourdomain.com"
DB_PASSWORD=$(openssl rand -base64 32)
REDIS_PASSWORD=$(openssl rand -base64 32)
JWT_SECRET=$(openssl rand -base64 64)

echo "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ AI-–ù–ö –Ω–∞ $DOMAIN"

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt-get update
apt-get upgrade -y

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt-get install -y curl wget git unzip

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
echo "üê≥ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
curl -fsSL https://get.docker.com -o get-docker.sh
sh get-docker.sh
rm get-docker.sh

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose..."
curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è AI-–ù–ö
echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
useradd -m -s /bin/bash ai-nk
usermod -aG docker ai-nk

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo "üì• –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
sudo -u ai-nk git clone <repository-url> /home/ai-nk/ai-nk
cd /home/ai-nk/ai-nk

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
sudo -u ai-nk cp examples/production.env .env
sudo -u ai-nk sed -i "s/yourdomain.com/$DOMAIN/g" .env
sudo -u ai-nk sed -i "s/CHANGE_ME_SECURE_PASSWORD/$DB_PASSWORD/g" .env
sudo -u ai-nk sed -i "s/CHANGE_ME_SECURE_API_KEY/$REDIS_PASSWORD/g" .env
sudo -u ai-nk sed -i "s/CHANGE_ME_VERY_SECURE_JWT_SECRET_KEY_64_CHARS_LONG/$JWT_SECRET/g" .env

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
echo "üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
sudo -u ai-nk mkdir -p ssl/{certs,keys}
sudo -u ai-nk openssl req -x509 -newkey rsa:4096 -keyout ssl/keys/key.pem -out ssl/certs/cert.pem \
  -days 365 -nodes -subj "/C=RU/ST=Moscow/L=Moscow/O=AI-–ù–ö/OU=IT/CN=$DOMAIN"

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo -u ai-nk docker-compose up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 60

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
sudo -u ai-nk docker-compose ps

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: https://$DOMAIN"
echo "üìä API: https://$DOMAIN/api"
echo "üîê Keycloak: https://$DOMAIN/auth"
EOF

    chmod +x "$PACKAGE_DIR/examples/auto-deploy.sh"
    
    log_success "–ü—Ä–∏–º–µ—Ä—ã —Å–æ–∑–¥–∞–Ω—ã"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
create_archive() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –ø–∞–∫–µ—Ç–∞..."
    
    cd ai-nk-deployment/packages
    
    # –°–æ–∑–¥–∞–Ω–∏–µ tar.gz –∞—Ä—Ö–∏–≤–∞
    tar -czf "${PACKAGE_NAME}.tar.gz" "$PACKAGE_NAME"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ zip –∞—Ä—Ö–∏–≤–∞
    zip -r "${PACKAGE_NAME}.zip" "$PACKAGE_NAME"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ checksums
    md5sum "${PACKAGE_NAME}.tar.gz" > "${PACKAGE_NAME}.tar.gz.md5"
    md5sum "${PACKAGE_NAME}.zip" > "${PACKAGE_NAME}.zip.md5"
    
    sha256sum "${PACKAGE_NAME}.tar.gz" > "${PACKAGE_NAME}.tar.gz.sha256"
    sha256sum "${PACKAGE_NAME}.zip" > "${PACKAGE_NAME}.zip.sha256"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–∫–µ—Ç–µ
    cat > "${PACKAGE_NAME}.info" << EOF
AI-–ù–ö Deployment Package Information
====================================

Package Name: ${PACKAGE_NAME}
Created: $(date)
Version: 1.0.0
Size: $(du -h "${PACKAGE_NAME}.tar.gz" | cut -f1)

Contents:
- Complete AI-–ù–ö source code
- Installation scripts
- Configuration templates
- Documentation
- Examples
- Docker Compose files

Installation:
1. Extract: tar -xzf ${PACKAGE_NAME}.tar.gz
2. Install: cd ${PACKAGE_NAME} && ./install.sh
3. Start: cd ai-nk && ./start.sh

System Requirements:
- Docker 20.10+
- Docker Compose 2.0+
- 8GB+ RAM
- 50GB+ free space
- Linux/macOS

Support:
- Documentation: docs/
- Support: support@ai-nk.ru
- Issues: https://github.com/ai-nk/issues
EOF

    # –£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –ø–∞–ø–∫–∏
    rm -rf "$PACKAGE_NAME"
    
    cd ../..
    
    log_success "–ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ai-nk-deployment/packages/${PACKAGE_NAME}.tar.gz"
    log_success "–ê—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: ai-nk-deployment/packages/${PACKAGE_NAME}.zip"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–∫–µ—Ç–µ
create_package_info() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞–∫–µ—Ç–µ..."
    
    cat > "ai-nk-deployment/packages/README.md" << EOF
# AI-–ù–ö - –ü–∞–∫–µ—Ç—ã —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è

## –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã

### ${PACKAGE_NAME}

- **–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è**: $(date)
- **–í–µ—Ä—Å–∏—è**: 1.0.0
- **–†–∞–∑–º–µ—Ä**: $(du -h "ai-nk-deployment/packages/${PACKAGE_NAME}.tar.gz" | cut -f1)
- **–§–æ—Ä–º–∞—Ç**: tar.gz, zip

### –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–∫–µ—Ç–∞

- ‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
- ‚úÖ –°–∫—Ä–∏–ø—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
- ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
- ‚úÖ –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- ‚úÖ Docker Compose —Ñ–∞–π–ª—ã
- ‚úÖ –ü—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π
- ‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (—Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ)

### –£—Å—Ç–∞–Ω–æ–≤–∫–∞

1. **–†–∞—Å–ø–∞–∫–æ–≤–∫–∞**:
   \`\`\`bash
   tar -xzf ${PACKAGE_NAME}.tar.gz
   cd ${PACKAGE_NAME}
   \`\`\`

2. **–£—Å—Ç–∞–Ω–æ–≤–∫–∞**:
   \`\`\`bash
   ./install.sh
   \`\`\`

3. **–ó–∞–ø—É—Å–∫**:
   \`\`\`bash
   cd ai-nk
   ./start.sh
   \`\`\`

### –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

\`\`\`bash
./install.sh dev
\`\`\`

### –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏

\`\`\`bash
# MD5
md5sum -c ${PACKAGE_NAME}.tar.gz.md5

# SHA256
sha256sum -c ${PACKAGE_NAME}.tar.gz.sha256
\`\`\`

### –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

- **Docker**: 20.10+
- **Docker Compose**: 2.0+
- **RAM**: 8GB+ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è 16GB+)
- **–î–∏—Å–∫**: 50GB+ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞
- **–û–°**: Linux (Ubuntu 20.04+) –∏–ª–∏ macOS (10.15+)

### –ü–æ–¥–¥–µ—Ä–∂–∫–∞

- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è**: [docs/](docs/)
- **–£—Å—Ç–∞–Ω–æ–≤–∫–∞**: [docs/INSTALLATION.md](docs/INSTALLATION.md)
- **–ù–∞—Å—Ç—Ä–æ–π–∫–∞**: [docs/CONFIGURATION.md](docs/CONFIGURATION.md)
- **–ü–æ–¥–¥–µ—Ä–∂–∫–∞**: support@ai-nk.ru
- **–ë–∞–≥-—Ç—Ä–µ–∫–µ—Ä**: https://github.com/ai-nk/issues

### –õ–∏—Ü–µ–Ω–∑–∏—è

MIT License. –°–º. —Ñ–∞–π–ª LICENSE.

---

**AI-–ù–ö Team** - –°–∏—Å—Ç–µ–º–∞ –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ò–ò
EOF

    log_success "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–∫–µ—Ç–µ —Å–æ–∑–¥–∞–Ω–∞"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üì¶ AI-–ù–ö - –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
    echo "================================================"
    echo ""
    
    create_package_structure
    copy_source_code
    copy_scripts
    create_documentation
    create_examples
    create_archive
    create_package_info
    
    echo ""
    echo "‚úÖ –ü–∞–∫–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üì¶ –§–∞–π–ª—ã –ø–∞–∫–µ—Ç–∞:"
    echo "- ai-nk-deployment/packages/${PACKAGE_NAME}.tar.gz"
    echo "- ai-nk-deployment/packages/${PACKAGE_NAME}.zip"
    echo ""
    echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "- ai-nk-deployment/packages/README.md"
    echo "- ai-nk-deployment/packages/${PACKAGE_NAME}.info"
    echo ""
    echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é!"
    echo ""
    echo "üìñ –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
    echo "1. tar -xzf ${PACKAGE_NAME}.tar.gz"
    echo "2. cd ${PACKAGE_NAME}"
    echo "3. ./install.sh"
    echo "4. cd ai-nk && ./start.sh"
}

# –ó–∞–ø—É—Å–∫
main "$@"
