#!/bin/bash

# –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç Ollama —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./quick_start_ollama.sh

set -e

echo "üöÄ [QUICK_START] –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç Ollama —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π..."
echo "======================================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Ollama
check_ollama() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º Ollama..."
    
    if ! curl -s http://localhost:11434/api/tags > /dev/null; then
        error "Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å–∫–∞–µ–º..."
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å Ollama
        if command -v ollama > /dev/null; then
            nohup ollama serve > /dev/null 2>&1 &
            sleep 5
            
            if curl -s http://localhost:11434/api/tags > /dev/null; then
                success "Ollama –∑–∞–ø—É—â–µ–Ω"
            else
                error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Ollama. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: ollama serve"
                exit 1
            fi
        else
            error "Ollama –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Ollama: https://ollama.ai"
            exit 1
        fi
    else
        success "Ollama —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π
check_models() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º GPT-OSS
    if curl -s http://localhost:11434/api/tags | jq -e '.models[] | select(.name | contains("gpt-oss"))' > /dev/null; then
        success "GPT-OSS –º–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞"
    else
        error "GPT-OSS –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: ollama pull gpt-oss:latest"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º BGE-M3
    if curl -s http://localhost:11434/api/tags | jq -e '.models[] | select(.name | contains("bge-m3"))' > /dev/null; then
        success "BGE-M3 –º–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞"
    else
        error "BGE-M3 –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: ollama pull bge-m3"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
create_optimized_model() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å..."
    
    if curl -s http://localhost:11434/api/tags | jq -e '.models[] | select(.name == "gpt-oss-optimized")' > /dev/null; then
        success "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        log "–°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å..."
        
        if [ -f "Modelfile.gpt-oss-optimized" ]; then
            ollama create gpt-oss-optimized -f Modelfile.gpt-oss-optimized
            success "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞"
        else
            error "–§–∞–π–ª Modelfile.gpt-oss-optimized –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./ollama_optimization_config.sh"
            exit 1
        fi
    fi
}

# –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã
test_system() {
    log "–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É..."
    
    # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏
    echo "üîç –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏:"
    response=$(curl -s http://localhost:11434/api/generate \
        -d '{"model": "gpt-oss:latest", "prompt": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", "stream": false}' \
        | jq -r '.response')
    
    if [ "$response" != "null" ] && [ -n "$response" ]; then
        success "–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç: ${response:0:50}..."
    else
        error "–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–∑–æ–≤–æ–π –º–æ–¥–µ–ª–∏"
        exit 1
    fi
    
    # –¢–µ—Å—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
    if curl -s http://localhost:11434/api/tags | jq -e '.models[] | select(.name == "gpt-oss-optimized")' > /dev/null; then
        echo "üîç –¢–µ—Å—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏:"
        response=$(curl -s http://localhost:11434/api/generate \
            -d '{"model": "gpt-oss-optimized", "prompt": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", "stream": false}' \
            | jq -r '.response')
        
        if [ "$response" != "null" ] && [ -n "$response" ]; then
            success "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç: ${response:0:50}..."
        else
            error "–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏"
        fi
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
show_status() {
    echo ""
    echo "üìä [STATUS] –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:"
    echo "=========================="
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª—è—Ö
    echo "ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
    curl -s http://localhost:11434/api/tags | jq -r '.models[] | "  - \(.name) (\(.details.parameter_size))"'
    
    echo ""
    echo "üîó API endpoints:"
    echo "  - Ollama API: http://localhost:11434"
    echo "  - –ú–æ–¥–µ–ª–∏: http://localhost:11434/api/tags"
    echo "  - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è: http://localhost:11434/api/generate"
    
    echo ""
    echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  - –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: ./test_ollama_performance.sh"
    echo "  - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: ./monitor_ollama.sh"
    echo "  - –û—Å—Ç–∞–Ω–æ–≤–∫–∞: ./stop_ollama.sh"
    echo "  - –ü–æ–ª–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: ./ollama_optimization_config.sh"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ [QUICK_START] –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç Ollama —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π..."
    echo "======================================================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
    check_ollama
    check_models
    create_optimized_model
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_system
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
    show_status
    
    echo ""
    echo "üéâ [QUICK_START] –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!"
    echo "======================================================"
    echo ""
    echo "‚úÖ Ollama –∑–∞–ø—É—â–µ–Ω –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω"
    echo "‚úÖ –ú–æ–¥–µ–ª–∏ GPT-OSS –∏ BGE-M3 –¥–æ—Å—Ç—É–ø–Ω—ã"
    echo "‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Å–æ–∑–¥–∞–Ω–∞"
    echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞"
    echo ""
    echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
}

# –ó–∞–ø—É—Å–∫
main "$@"
