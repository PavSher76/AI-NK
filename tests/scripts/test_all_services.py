#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ AI-NK
"""

import requests
import json
from datetime import datetime

def test_service(url, name):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        response = requests.get(f"{url}/health", timeout=5)
        if response.status_code == 200:
            data = response.json()
            status = data.get('status', 'unknown')
            print(f"‚úÖ {name}: {status}")
            return True
        else:
            print(f"‚ùå {name}: HTTP {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå {name}: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - {e}")
        return False

def test_ollama():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Ollama"""
    try:
        response = requests.get("http://localhost:11434/api/tags", timeout=5)
        if response.status_code == 200:
            data = response.json()
            models_count = len(data.get('models', []))
            print(f"‚úÖ Ollama: –¥–æ—Å—Ç—É–ø–µ–Ω, {models_count} –º–æ–¥–µ–ª–µ–π")
            return True
        else:
            print(f"‚ùå Ollama: HTTP {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Ollama: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - {e}")
        return False

def test_endpoints(url, name):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ —Å–µ—Ä–≤–∏—Å–∞"""
    try:
        response = requests.get(url, timeout=5)
        if response.status_code == 200:
            data = response.json()
            endpoints = data.get('endpoints', {})
            print(f"üìã {name} —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã: {len(endpoints)} –¥–æ—Å—Ç—É–ø–Ω–æ")
            return True
        else:
            print(f"‚ùå {name} —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã: HTTP {response.status_code}")
            return False
    except requests.exceptions.RequestException as e:
        print(f"‚ùå {name} —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã: –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ AI-NK")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Ollama
    test_ollama()
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
    services = [
        ("http://localhost:8002", "–û—Å–Ω–æ–≤–Ω–æ–π RAG Service"),
        ("http://localhost:8003", "Ollama RAG Service"),
        ("http://localhost:8005", "VLLM + Ollama Service")
    ]
    
    working_services = 0
    for url, name in services:
        if test_service(url, name):
            working_services += 1
        print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    print("üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:")
    print("-" * 30)
    for url, name in services:
        test_endpoints(url, name)
    
    print()
    print("=" * 50)
    print(f"üìä –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {working_services}/3 —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    if working_services == 3:
        print("üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    elif working_services >= 2:
        print("‚ö†Ô∏è  –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
    else:
        print("‚ùå –ú–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    print(f"‚è∞ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%H:%M:%S')}")

if __name__ == "__main__":
    main()
