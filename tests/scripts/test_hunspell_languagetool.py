#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Hunspell + LanguageTool
"""

import requests
import json
import time

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
API_BASE = "http://localhost:8443/api/outgoing-control"
TEST_TEXT = """
–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏.

–í —ç—Ç–æ–º —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—à–∏–±–æ–∫:
- –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏: "–ø—Ä–∏–≤–µ—Ç" (–ø—Ä–∞–≤–∏–ª—å–Ω–æ), "–æ—à–∏–±–∫–∞" (–ø—Ä–∞–≤–∏–ª—å–Ω–æ)
- –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏: "—ç—Ç–æ –µ—Å—Ç—å" (–∏–∑–±—ã—Ç–æ—á–Ω–æ—Å—Ç—å), "–Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—à–∏–±–æ–∫" (—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ)

–¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –¥–ª–∏–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –∏ —Å–ª–æ–≤–∞ —Å —Ü–∏—Ñ—Ä–∞–º–∏: "—Å—É–ø–µ—Ä–¥–ª–∏–Ω–Ω–æ–µ—Å–ª–æ–≤–æ123" –∏ "—Ç–µ—Å—Ç123".

–ü—É–Ω–∫—Ç—É–∞—Ü–∏—è —Ç–æ–∂–µ –≤–∞–∂–Ω–∞: –≥–¥–µ –∑–∞–ø—è—Ç—ã–µ, –≥–¥–µ —Ç–æ—á–∫–∏, –≥–¥–µ –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞–∫–∏!

–ü—Ä–æ–≤–µ—Ä–∏–º —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ: "–∫—Ä–∞—Å–∏–≤—ã–π –¥–æ–º" –∏ "–∫—Ä–∞—Å–∏–≤–∞—è –º–∞—à–∏–Ω–∞".
"""

def test_spell_check():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ outgoing control service
    files = {'file': ('test.txt', TEST_TEXT, 'text/plain')}
    upload_response = requests.post(f"http://localhost:8006/upload", files=files)
    
    if upload_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {upload_response.text}")
        return
    
    document_data = upload_response.json()
    document_id = document_data["document_id"]
    print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω: {document_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—é
    spell_check_data = {
        "document_id": document_id,
        "text": TEST_TEXT
    }
    
    spell_response = requests.post(
        f"{API_BASE}/spellcheck",
        json=spell_check_data,
        headers={'Content-Type': 'application/json'}
    )
    
    if spell_response.status_code == 200:
        result = spell_response.json()
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {json.dumps(result['spell_check_results'], indent=2, ensure_ascii=False)}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏: {spell_response.text}")

def test_grammar_check():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
    files = {'file': ('test.txt', TEST_TEXT, 'text/plain')}
    upload_response = requests.post(f"http://localhost:8006/upload", files=files)
    
    if upload_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {upload_response.text}")
        return
    
    document_data = upload_response.json()
    document_id = document_data["document_id"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä–∞–º–º–∞—Ç–∏–∫—É
    grammar_data = {
        "document_id": document_id,
        "text": TEST_TEXT
    }
    
    grammar_response = requests.post(
        f"{API_BASE}/grammar-check",
        json=grammar_data,
        headers={'Content-Type': 'application/json'}
    )
    
    if grammar_response.status_code == 200:
        result = grammar_response.json()
        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {json.dumps(result['grammar_results'], indent=2, ensure_ascii=False)}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏: {grammar_response.text}")

def test_comprehensive_check():
    """–¢–µ—Å—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
    files = {'file': ('test.txt', TEST_TEXT, 'text/plain')}
    upload_response = requests.post(f"http://localhost:8006/upload", files=files)
    
    if upload_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {upload_response.text}")
        return
    
    document_data = upload_response.json()
    document_id = document_data["document_id"]
    
    # –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    comprehensive_data = {
        "document_id": document_id,
        "text": TEST_TEXT
    }
    
    comprehensive_response = requests.post(
        f"{API_BASE}/comprehensive-check",
        json=comprehensive_data,
        headers={'Content-Type': 'application/json'}
    )
    
    if comprehensive_response.status_code == 200:
        result = comprehensive_response.json()
        print("‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {json.dumps(result['comprehensive_results'], indent=2, ensure_ascii=False)}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {comprehensive_response.text}")

def test_health():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞...")
    
    try:
        response = requests.get(f"{API_BASE}/health")
        if response.status_code == 200:
            print("‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç")
            print(f"üìä –°—Ç–∞—Ç—É—Å: {response.json()}")
        else:
            print(f"‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Hunspell + LanguageTool")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–∏—Å–∞
    test_health()
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    time.sleep(2)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test_spell_check()
    test_grammar_check()
    test_comprehensive_check()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
