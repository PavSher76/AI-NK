# Makefile –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è AI-NK

.PHONY: help test test-all test-chat test-outgoing test-ntd test-calculations setup clean reports

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN = \033[0;32m
YELLOW = \033[1;33m
RED = \033[0;31m
NC = \033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(GREEN)AI-NK Testing Suite$(NC)"
	@echo "======================"
	@echo ""
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(YELLOW)%-20s$(NC) %s\n", $$1, $$2}'

setup: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
	@echo "$(GREEN)–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...$(NC)"
	@if [ ! -d "test_env" ]; then \
		echo "–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."; \
		python3 -m venv test_env; \
	fi
	@echo "–ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	@. test_env/bin/activate && pip install aiohttp
	@echo "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–ø–æ–∫..."
	@mkdir -p reports logs
	@echo "$(GREEN)‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ$(NC)"

test: setup ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤...$(NC)"
	@. test_env/bin/activate && python scripts/run_comprehensive_tests.py

test-all: test ## –ê–ª–∏–∞—Å –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤

test-chat: setup ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –º–æ–¥—É–ª—è "–ß–∞—Ç —Å –ò–ò"
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –º–æ–¥—É–ª—è '–ß–∞—Ç —Å –ò–ò'...$(NC)"
	@. test_env/bin/activate && python scripts/test_chat_ai_module.py

test-outgoing: setup ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –º–æ–¥—É–ª—è "–í—ã—Ö–æ–¥–Ω–æ–π –∫–æ–Ω—Ç—Ä–æ–ª—å"
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –º–æ–¥—É–ª—è '–í—ã—Ö–æ–¥–Ω–æ–π –∫–æ–Ω—Ç—Ä–æ–ª—å'...$(NC)"
	@. test_env/bin/activate && python scripts/test_outgoing_control_module.py

test-ntd: setup ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –º–æ–¥—É–ª—è "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ù–¢–î"
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –º–æ–¥—É–ª—è '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –ù–¢–î'...$(NC)"
	@. test_env/bin/activate && python scripts/test_ntd_consultation_module.py

test-calculations: setup ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –º–æ–¥—É–ª—è "–†–∞—Å—á–µ—Ç—ã"
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –º–æ–¥—É–ª—è '–†–∞—Å—á–µ—Ç—ã'...$(NC)"
	@. test_env/bin/activate && python scripts/test_calculations_module.py

reports: ## –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç—á–µ—Ç—ã
	@echo "$(GREEN)–û—Ç—á–µ—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:$(NC)"
	@echo "======================"
	@if [ -f "reports/comprehensive_test_report.html" ]; then \
		echo "  üìÑ HTML –æ—Ç—á–µ—Ç: reports/comprehensive_test_report.html"; \
	fi
	@if [ -f "reports/comprehensive_test_report.json" ]; then \
		echo "  üìä JSON –æ—Ç—á–µ—Ç: reports/comprehensive_test_report.json"; \
	fi
	@if [ -f "reports/comprehensive_test_report.txt" ]; then \
		echo "  üìã –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç: reports/comprehensive_test_report.txt"; \
	fi
	@if [ -f "logs/comprehensive_test_suite.log" ]; then \
		echo "  üìù –õ–æ–≥–∏: logs/comprehensive_test_suite.log"; \
	fi

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	@echo "$(YELLOW)–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...$(NC)"
	@rm -rf __pycache__ *.pyc
	@find . -name "*.pyc" -delete
	@find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

clean-all: clean ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ (–≤–∫–ª—é—á–∞—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ)
	@echo "$(YELLOW)–ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞...$(NC)"
	@rm -rf test_env
	@rm -rf reports/*.json reports/*.html reports/*.txt
	@rm -rf logs/*.log
	@echo "$(GREEN)‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ AI-NK:$(NC)"
	@echo "========================"
	@docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep ai-nk || echo "–°–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"

check-services: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@echo "====================================="
	@for port in 8001 8002 8003 8004 8005 8006 8007 8443 443; do \
		if nc -z localhost $$port 2>/dev/null; then \
			echo "  ‚úÖ –ü–æ—Ä—Ç $$port –¥–æ—Å—Ç—É–ø–µ–Ω"; \
		else \
			echo "  ‚ùå –ü–æ—Ä—Ç $$port –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"; \
		fi; \
	done

install-deps: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "$(GREEN)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@. test_env/bin/activate && pip install --upgrade pip
	@. test_env/bin/activate && pip install aiohttp

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
.DEFAULT_GOAL := help
