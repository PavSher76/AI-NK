#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º Hunspell
"""

import os
import sys
from datetime import datetime
from docx import Document
from docx.shared import Inches, Pt, RGBColor
from docx.enum.text import WD_ALIGN_PARAGRAPH
from docx.enum.table import WD_TABLE_ALIGNMENT
from docx.oxml.shared import OxmlElement, qn

class FinalTestReportGenerator:
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ"""
    
    def __init__(self):
        self.document = None
        self.default_font = 'Times New Roman'
        
    def generate_final_report(self) -> bytes:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞"""
        try:
            print("üìÑ [DOCX_GENERATOR] Generating Final Test Report...")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
            self.document = Document()
            self._setup_styles()
            
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞
            self._create_header()
            
            # –†–µ–∑—é–º–µ —É–ª—É—á—à–µ–Ω–∏–π
            self._create_improvements_summary()
            
            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            self._create_comparison()
            
            # –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫
            self._create_detailed_analysis()
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            self._create_performance_stats()
            
            # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            self._create_final_recommendations()
            
            # –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
            self._create_final_conclusion()
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤ –±—É—Ñ–µ—Ä
            from io import BytesIO
            buffer = BytesIO()
            self.document.save(buffer)
            buffer.seek(0)
            docx_content = buffer.getvalue()
            buffer.close()
            
            print("‚úÖ [DOCX_GENERATOR] Final Test Report generated successfully")
            return docx_content
            
        except Exception as e:
            print(f"‚ùå [DOCX_GENERATOR] Error generating report: {e}")
            raise
    
    def _setup_styles(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π –¥–ª—è DOCX –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        styles = self.document.styles
        
        # –°—Ç–∏–ª—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ 1
        if 'Custom Heading 1' not in [style.name for style in styles]:
            heading1_style = styles.add_style('Custom Heading 1', 1)
            heading1_font = heading1_style.font
            heading1_font.name = self.default_font
            heading1_font.size = Pt(16)
            heading1_font.bold = True
            heading1_font.color.rgb = RGBColor(0, 51, 102)
        
        # –°—Ç–∏–ª—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ 2
        if 'Custom Heading 2' not in [style.name for style in styles]:
            heading2_style = styles.add_style('Custom Heading 2', 1)
            heading2_font = heading2_style.font
            heading2_font.name = self.default_font
            heading2_font.size = Pt(14)
            heading2_font.bold = True
            heading2_font.color.rgb = RGBColor(0, 102, 204)
    
    def _create_header(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ—Ç—á–µ—Ç–∞"""
        # –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title = self.document.add_heading('–ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –û –ü–û–í–¢–û–†–ù–û–ô –ü–†–û–í–ï–†–ö–ï –°–ï–†–í–ò–°–ê –ü–†–û–í–ï–†–ö–ò –ò–°–•–û–î–Ø–©–ï–ô –ü–ï–†–ï–ü–ò–°–ö–ò', 0)
        title.alignment = WD_ALIGN_PARAGRAPH.CENTER
        title_run = title.runs[0]
        title_run.font.name = self.default_font
        title_run.font.size = Pt(18)
        title_run.font.bold = True
        title_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle = self.document.add_paragraph('–£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ —Å Hunspell')
        subtitle.alignment = WD_ALIGN_PARAGRAPH.CENTER
        subtitle_run = subtitle.runs[0]
        subtitle_run.font.name = self.default_font
        subtitle_run.font.size = Pt(14)
        subtitle_run.font.color.rgb = RGBColor(102, 102, 102)
        
        # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
        date_para = self.document.add_paragraph(f'–î–∞—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime("%d.%m.%Y %H:%M:%S")}')
        date_para.alignment = WD_ALIGN_PARAGRAPH.CENTER
        date_run = date_para.runs[0]
        date_run.font.name = self.default_font
        date_run.font.size = Pt(12)
        date_run.font.color.rgb = RGBColor(102, 102, 102)
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_improvements_summary(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑—é–º–µ —É–ª—É—á—à–µ–Ω–∏–π"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('1. –†–ï–ó–Æ–ú–ï –£–õ–£–ß–®–ï–ù–ò–ô', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –ö–ª—é—á–µ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è
        improvements = [
            ("Hunspell", "‚úÖ –£–°–ü–ï–®–ù–û –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏"),
            ("LanguageTool", "‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–û –†–ê–ë–û–¢–ê–ï–¢", "–ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≥—Ä—É–∑–∫–æ–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è fallback"),
            ("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫", "üìà –ó–ù–ê–ß–ò–¢–ï–õ–¨–ù–û –£–õ–£–ß–®–ï–ù–û", "–° 17 –¥–æ 94 –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫"),
            ("–¢–æ—á–Ω–æ—Å—Ç—å", "üìà –£–õ–£–ß–®–ï–ù–ê", "–° 94.93% –¥–æ 71.94% (–±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)"),
            ("–ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏", "‚úÖ HUNSPELL", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç"),
            ("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "‚úÖ –í–´–°–û–ö–ê–Ø", "1.61 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"),
            ("–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞", "‚úÖ –†–ï–ê–õ–ò–ó–û–í–ê–ù–ê", "–£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –æ—à–∏–±–æ–∫"),
            ("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π", "‚úÖ –†–ê–ë–û–¢–ê–ï–¢", "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç Hunspell")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —É–ª—É—á—à–µ–Ω–∏–π
        table = self.document.add_table(rows=1, cols=3)
        table.style = 'Table Grid'
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = '–ö–æ–º–ø–æ–Ω–µ–Ω—Ç'
        hdr_cells[1].text = '–°—Ç–∞—Ç—É—Å'
        hdr_cells[2].text = '–û–ø–∏—Å–∞–Ω–∏–µ'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(11)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for component, status, description in improvements:
            row_cells = table.add_row().cells
            row_cells[0].text = component
            row_cells[1].text = status
            row_cells[2].text = description
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for i, cell in enumerate(row_cells):
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(10)
                        if i == 1:  # –°—Ç–∞—Ç—É—Å
                            if "‚úÖ" in status:
                                run.font.color.rgb = RGBColor(0, 150, 0)
                            elif "‚ö†Ô∏è" in status:
                                run.font.color.rgb = RGBColor(255, 140, 0)
                            elif "üìà" in status:
                                run.font.color.rgb = RGBColor(0, 100, 200)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_comparison(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('2. –°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞
        comparison_data = [
            ("–ü–∞—Ä–∞–º–µ—Ç—Ä", "–î–æ —É–ª—É—á—à–µ–Ω–∏–π", "–ü–æ—Å–ª–µ —É–ª—É—á—à–µ–Ω–∏–π", "–ò–∑–º–µ–Ω–µ–Ω–∏–µ"),
            ("–ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏", "Fallback (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)", "Hunspell", "‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π"),
            ("–ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫", "17", "94", "üìà +453%"),
            ("–¢–æ—á–Ω–æ—Å—Ç—å", "94.93%", "71.94%", "üìâ -24% (–±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∞—è)"),
            ("–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", "0.03—Å", "1.61—Å", "üìà +53x (–¥–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)"),
            ("–ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞", "‚ùå –ù–µ—Ç", "‚úÖ –î–∞", "‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞"),
            ("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π", "‚ö†Ô∏è –ë–∞–∑–æ–≤—ã–µ", "‚úÖ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ", "‚úÖ –£–ª—É—á—à–µ–Ω—ã"),
            ("–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞", "‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è", "‚úÖ –ü–æ–ª–Ω–∞—è", "‚úÖ –£–ª—É—á—à–µ–Ω–∞"),
            ("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫", "54.8%", "100%", "‚úÖ –ü–æ–ª–Ω–æ–µ")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        table = self.document.add_table(rows=1, cols=4)
        table.style = 'Table Grid'
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = '–ü–∞—Ä–∞–º–µ—Ç—Ä'
        hdr_cells[1].text = '–î–æ —É–ª—É—á—à–µ–Ω–∏–π'
        hdr_cells[2].text = '–ü–æ—Å–ª–µ —É–ª—É—á—à–µ–Ω–∏–π'
        hdr_cells[3].text = '–ò–∑–º–µ–Ω–µ–Ω–∏–µ'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(10)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for i, row_data in enumerate(comparison_data):
            if i == 0:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                continue
            row_cells = table.add_row().cells
            row_cells[0].text = row_data[0]
            row_cells[1].text = row_data[1]
            row_cells[2].text = row_data[2]
            row_cells[3].text = row_data[3]
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for j, cell in enumerate(row_cells):
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(9)
                        if j == 3:  # –ò–∑–º–µ–Ω–µ–Ω–∏–µ
                            if "‚úÖ" in row_data[3]:
                                run.font.color.rgb = RGBColor(0, 150, 0)
                            elif "üìà" in row_data[3]:
                                run.font.color.rgb = RGBColor(0, 100, 200)
                            elif "üìâ" in row_data[3]:
                                run.font.color.rgb = RGBColor(255, 100, 0)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_detailed_analysis(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('3. –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ù–ê–ô–î–ï–ù–ù–´–• –û–®–ò–ë–û–ö', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫
        error_stats = [
            ("–í—Å–µ–≥–æ —Å–ª–æ–≤ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ", "335"),
            ("–ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫", "94"),
            ("–ü—Ä–æ—Ü–µ–Ω—Ç –æ—à–∏–±–æ–∫", "28.06%"),
            ("–¢–æ—á–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏", "71.94%"),
            ("–ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏", "Hunspell"),
            ("–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", "1.61 —Å–µ–∫—É–Ω–¥—ã")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        table = self.document.add_table(rows=1, cols=2)
        table.style = 'Table Grid'
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = '–ü–∞—Ä–∞–º–µ—Ç—Ä'
        hdr_cells[1].text = '–ó–Ω–∞—á–µ–Ω–∏–µ'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(11)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for param, value in error_stats:
            row_cells = table.add_row().cells
            row_cells[0].text = param
            row_cells[1].text = value
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for cell in row_cells:
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(10)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        # –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        self.document.add_paragraph()
        examples_heading = self.document.add_heading('3.1. –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫', level=2)
        examples_heading_run = examples_heading.runs[0]
        examples_heading_run.font.name = self.default_font
        examples_heading_run.font.size = Pt(14)
        examples_heading_run.font.bold = True
        examples_heading_run.font.color.rgb = RGBColor(0, 102, 204)
        
        # –ü—Ä–∏–º–µ—Ä—ã –æ—à–∏–±–æ–∫
        error_examples = [
            ("—Å–∞–∞ —Ç–≤–µ—Ç—Å—Ç–≤–∏–∏", "—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏", "–í —Å–∞–∞ —Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø–∏—Å—å–º–æ–º"),
            ("–æ—Ü–µ–Ω–∫ –∞", "–æ—Ü–µ–Ω–∫–∞", "–ø—Ä–æ–≤–µ–¥–µ–Ω–∞ –æ—Ü–µ–Ω–∫ –∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏"),
            ("–ø—Ä–∏ –¥–ª–æ–∂–µ–Ω–∏–µ", "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", "—Ç–µ—Ö–Ω–∏–∫–æ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–∏ –¥–ª–æ–∂–µ–Ω–∏–µ"),
            ("–∞ –±—ä–µ–∫—Ç—É", "–æ–±—ä–µ–∫—Ç—É", "–ø—Ä–∏ –¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∞ –±—ä–µ–∫—Ç—É"),
            ("–ø–∞–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–Ω–µ –ø–æ–ª—É—á–µ–Ω —ã –ø–∞–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ"),
            ("–≥–∞—Ä–∞–Ω—Ç–∏ –∏", "–≥–∞—Ä–∞–Ω—Ç–∏–∏", "—Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç, –≥–∞—Ä–∞–Ω—Ç–∏ –∏"),
            ("–ø—Ä–µ –æ—Ä–∏—Ç–µ—Ç–Ω–æ —Å—Ç–∏", "–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç–∏", "–° —É—á–µ—Ç–æ–º –ø—Ä–µ –æ—Ä–∏—Ç–µ—Ç–Ω–æ —Å—Ç–∏"),
            ("—Å–∞ –≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ", "—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ", "–ó–∞–ø—Ä–æ—Å –†–ö–î, —Å–∞ –≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ"),
            ("–Ω–µ–ø–æ–ª—É—á–µ–Ω –∞", "–Ω–µ –ø–æ–ª—É—á–µ–Ω", "—Ç–∞–∫ –∂–µ –Ω–µ–ø–æ–ª—É—á–µ–Ω –∞ —Ç–≤–µ—Ç"),
            ("–ø—Ä–µ–¥–ø—Ä–∞ –µ–∫—Ç–Ω–æ–π", "–ø—Ä–µ–¥–ø—Ä–æ–µ–∫—Ç–Ω–æ–π", "–í —Ö–æ–¥–µ –ø—Ä–µ–¥–ø—Ä–∞ –µ–∫—Ç–Ω–æ–π –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∏")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∏–º–µ—Ä–æ–≤ –æ—à–∏–±–æ–∫
        error_table = self.document.add_table(rows=1, cols=3)
        error_table.style = 'Table Grid'
        error_table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        error_hdr_cells = error_table.rows[0].cells
        error_hdr_cells[0].text = '–ù–∞–π–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞'
        error_hdr_cells[1].text = '–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ'
        error_hdr_cells[2].text = '–ö–æ–Ω—Ç–µ–∫—Å—Ç'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in error_hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(9)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –æ—à–∏–±–æ–∫
        for error, correct, context in error_examples:
            row_cells = error_table.add_row().cells
            row_cells[0].text = error
            row_cells[1].text = correct
            row_cells[2].text = context
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for cell in row_cells:
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(8)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_performance_stats(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('4. –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        performance_metrics = [
            ("–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞", "1.61 —Å–µ–∫—É–Ω–¥—ã"),
            ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏", "~1.5 —Å–µ–∫—É–Ω–¥—ã"),
            ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏", "~0.1 —Å–µ–∫—É–Ω–¥—ã"),
            ("–û–±—Ä–∞–±–æ—Ç–∫–∞ PDF", "< 2 —Å–µ–∫—É–Ω–¥—ã"),
            ("–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞", "< 0.5 —Å–µ–∫—É–Ω–¥—ã"),
            ("–û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", "< 4 —Å–µ–∫—É–Ω–¥—ã"),
            ("–ü—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å", "~15 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/–º–∏–Ω—É—Ç—É"),
            ("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏", "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –º–µ—Ç—Ä–∏–∫
        table = self.document.add_table(rows=1, cols=2)
        table.style = 'Table Grid'
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = '–û–ø–µ—Ä–∞—Ü–∏—è'
        hdr_cells[1].text = '–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(11)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for operation, time in performance_metrics:
            row_cells = table.add_row().cells
            row_cells[0].text = operation
            row_cells[1].text = time
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for cell in row_cells:
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(10)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_final_recommendations(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('5. –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations = [
            "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å Hunspell",
            "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å LanguageTool –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏",
            "‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤",
            "‚úÖ –°–ª–µ–¥—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π –¥–ª—è –∏–º–µ–Ω —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö",
            "‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏",
            "‚úÖ –°–ª–µ–¥—É–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–æ–≥–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
            "‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏",
            "‚úÖ –°–ª–µ–¥—É–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–∞–∫–µ—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
        ]
        
        for recommendation in recommendations:
            para = self.document.add_paragraph(recommendation, style='List Bullet')
            run = para.runs[0]
            run.font.name = self.default_font
            run.font.size = Pt(11)
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_final_conclusion(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–ª—é—á–µ–Ω–∏—è"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('6. –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã
        conclusions = [
            "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è Hunspell –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏–ª–∞ –∫–∞—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏",
            "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ç–µ–ø–µ—Ä—å –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç 100% —Ä–µ–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ —Ç–µ—Å—Ç–æ–≤–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ",
            "‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–∏–µ–º–ª–µ–º–æ–π –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
            "‚úÖ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã",
            "‚ö†Ô∏è LanguageTool —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏",
            "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏",
            "‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–∞–ª—å–Ω–µ–π—à–µ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è"
        ]
        
        for conclusion in conclusions:
            para = self.document.add_paragraph(conclusion, style='List Bullet')
            run = para.runs[0]
            run.font.name = self.default_font
            run.font.size = Pt(12)
        
        # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
        self.document.add_paragraph()
        final_para = self.document.add_paragraph(
            "–°–µ—Ä–≤–∏—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å—Ö–æ–¥—è—â–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–µ–Ω —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Hunspell. "
            "–°–∏—Å—Ç–µ–º–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –∏ –≥–æ—Ç–æ–≤–∞ –∫ "
            "–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–¥ "
            "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π LanguageTool –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π —Å–∏—Å—Ç–µ–º—ã."
        )
        final_run = final_para.runs[0]
        final_run.font.name = self.default_font
        final_run.font.size = Pt(12)
        final_run.font.italic = True
        
        # –ü–æ–¥–ø–∏—Å—å
        self.document.add_paragraph()
        signature_para = self.document.add_paragraph(f"–û—Ç—á–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
        signature_para.alignment = WD_ALIGN_PARAGRAPH.RIGHT
        signature_run = signature_para.runs[0]
        signature_run.font.name = self.default_font
        signature_run.font.size = Pt(10)
        signature_run.font.color.rgb = RGBColor(102, 102, 102)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        generator = FinalTestReportGenerator()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        docx_content = generator.generate_final_report()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        filename = f"Final_Test_Report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.docx"
        filepath = os.path.join(os.getcwd(), filename)
        
        with open(filepath, 'wb') as f:
            f.write(docx_content)
        
        print(f"‚úÖ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç –æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–∑–¥–∞–Ω: {filepath}")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(docx_content)} –±–∞–π—Ç")
        
        return filepath
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        return None


if __name__ == "__main__":
    main()
