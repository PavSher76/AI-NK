#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å—Ö–æ–¥—è—â–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏
"""

import os
import sys
from datetime import datetime
from docx import Document
from docx.shared import Inches, Pt, RGBColor
from docx.enum.text import WD_ALIGN_PARAGRAPH
from docx.enum.table import WD_TABLE_ALIGNMENT
from docx.oxml.shared import OxmlElement, qn

class OutgoingControlTestReportGenerator:
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å—Ö–æ–¥—è—â–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏"""
    
    def __init__(self):
        self.document = None
        self.default_font = 'Times New Roman'
        
    def generate_test_report(self) -> bytes:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏"""
        try:
            print("üìÑ [DOCX_GENERATOR] Generating Outgoing Control Test Report...")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
            self.document = Document()
            self._setup_styles()
            
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞
            self._create_header()
            
            # –†–µ–∑—é–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            self._create_executive_summary()
            
            # –î–µ—Ç–∞–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            self._create_test_details()
            
            # –ê–Ω–∞–ª–∏–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            self._create_real_document_analysis()
            
            # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏
            self._create_spelling_punctuation_analysis()
            
            # –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
            self._create_performance_analysis()
            
            # –ü—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
            self._create_issues_recommendations()
            
            # –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
            self._create_conclusion()
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –≤ –±—É—Ñ–µ—Ä
            from io import BytesIO
            buffer = BytesIO()
            self.document.save(buffer)
            buffer.seek(0)
            docx_content = buffer.getvalue()
            buffer.close()
            
            print("‚úÖ [DOCX_GENERATOR] Outgoing Control Test Report generated successfully")
            return docx_content
            
        except Exception as e:
            print(f"‚ùå [DOCX_GENERATOR] Error generating report: {e}")
            raise
    
    def _setup_styles(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π –¥–ª—è DOCX –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        styles = self.document.styles
        
        # –°—Ç–∏–ª—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ 1
        if 'Custom Heading 1' not in [style.name for style in styles]:
            heading1_style = styles.add_style('Custom Heading 1', 1)
            heading1_font = heading1_style.font
            heading1_font.name = self.default_font
            heading1_font.size = Pt(16)
            heading1_font.bold = True
            heading1_font.color.rgb = RGBColor(0, 51, 102)
        
        # –°—Ç–∏–ª—å –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ 2
        if 'Custom Heading 2' not in [style.name for style in styles]:
            heading2_style = styles.add_style('Custom Heading 2', 1)
            heading2_font = heading2_style.font
            heading2_font.name = self.default_font
            heading2_font.size = Pt(14)
            heading2_font.bold = True
            heading2_font.color.rgb = RGBColor(0, 102, 204)
    
    def _create_header(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –æ—Ç—á–µ—Ç–∞"""
        # –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title = self.document.add_heading('–û–¢–ß–ï–¢ –û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò –°–ï–†–í–ò–°–ê –ü–†–û–í–ï–†–ö–ò –ò–°–•–û–î–Ø–©–ï–ô –ü–ï–†–ï–ü–ò–°–ö–ò', 0)
        title.alignment = WD_ALIGN_PARAGRAPH.CENTER
        title_run = title.runs[0]
        title_run.font.name = self.default_font
        title_run.font.size = Pt(18)
        title_run.font.bold = True
        title_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
        subtitle = self.document.add_paragraph('–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏')
        subtitle.alignment = WD_ALIGN_PARAGRAPH.CENTER
        subtitle_run = subtitle.runs[0]
        subtitle_run.font.name = self.default_font
        subtitle_run.font.size = Pt(14)
        subtitle_run.font.color.rgb = RGBColor(102, 102, 102)
        
        # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
        date_para = self.document.add_paragraph(f'–î–∞—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime("%d.%m.%Y %H:%M:%S")}')
        date_para.alignment = WD_ALIGN_PARAGRAPH.CENTER
        date_run = date_para.runs[0]
        date_run.font.name = self.default_font
        date_run.font.size = Pt(12)
        date_run.font.color.rgb = RGBColor(102, 102, 102)
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_executive_summary(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑—é–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('1. –†–ï–ó–Æ–ú–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –ö–ª—é—á–µ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        summary_data = [
            ("–û–±—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã", "‚úÖ –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–ê–Ø"),
            ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏", "‚úÖ –†–ê–ë–û–¢–ê–ï–¢ (—Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏)"),
            ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏", "‚ö†Ô∏è –û–ì–†–ê–ù–ò–ß–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨"),
            ("–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞", "‚úÖ –†–ê–ë–û–¢–ê–ï–¢"),
            ("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "‚úÖ –í–´–°–û–ö–ê–Ø (< 0.1—Å)"),
            ("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫", "‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–û–ï (17 –∏–∑ 31 –æ—à–∏–±–æ–∫)"),
            ("–¢–æ—á–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã", "94.93%"),
            ("–ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏", "Fallback (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ä–µ–∑—é–º–µ
        table = self.document.add_table(rows=1, cols=2)
        table.style = 'Table Grid'
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = '–ü–∞—Ä–∞–º–µ—Ç—Ä'
        hdr_cells[1].text = '–†–µ–∑—É–ª—å—Ç–∞—Ç'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(12)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for param, result in summary_data:
            row_cells = table.add_row().cells
            row_cells[0].text = param
            row_cells[1].text = result
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for cell in row_cells:
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(11)
                        if "‚úÖ" in result:
                            run.font.color.rgb = RGBColor(0, 150, 0)
                        elif "‚ö†Ô∏è" in result:
                            run.font.color.rgb = RGBColor(255, 140, 0)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_test_details(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('2. –î–ï–¢–ê–õ–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
        test_info = [
            ("–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π —Å–µ—Ä–≤–∏—Å", "Outgoing Control Service"),
            ("–í–µ—Ä—Å–∏—è", "1.0.0"),
            ("–ü–æ—Ä—Ç", "8006"),
            ("–°—Ç–∞—Ç—É—Å", "Running"),
            ("Spellchecker Service", "Running (–ø–æ—Ä—Ç 8007)"),
            ("Hunspell", "–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"),
            ("LanguageTool", "–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"),
            ("–ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏", "Fallback (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)"),
            ("–¢–µ—Å—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç", "E320.E32C-OUT-03484_–æ—Ç_20.05.2025_—Å_–≥—Ä—É–±—ã–º–∏_–æ—à–∏–±–∫–∞–º–∏.pdf"),
            ("–†–∞–∑–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞", "335 —Å–ª–æ–≤, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
            ("–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞", "PDF (–¥–µ–ª–æ–≤–∞—è –ø–µ—Ä–µ–ø–∏—Å–∫–∞)"),
            ("–°–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏", "31 –∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        table = self.document.add_table(rows=1, cols=2)
        table.style = 'Table Grid'
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = '–ü–∞—Ä–∞–º–µ—Ç—Ä'
        hdr_cells[1].text = '–ó–Ω–∞—á–µ–Ω–∏–µ'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(11)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for param, value in test_info:
            row_cells = table.add_row().cells
            row_cells[0].text = param
            row_cells[1].text = value
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for cell in row_cells:
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(10)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_real_document_analysis(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('3. –ê–ù–ê–õ–ò–ó –†–ï–ê–õ–¨–ù–û–ì–û –î–û–ö–£–ú–ï–ù–¢–ê', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        doc_para = self.document.add_paragraph(
            "–î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Ä–µ–∞–ª—å–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –¥–µ–ª–æ–≤–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ "
            "E320.E32C-OUT-03484_–æ—Ç_20.05.2025_—Å_–≥—Ä—É–±—ã–º–∏_–æ—à–∏–±–∫–∞–º–∏.pdf, –∫–æ—Ç–æ—Ä—ã–π "
            "—Å–æ–¥–µ—Ä–∂–∏—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–æ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫."
        )
        doc_run = doc_para.runs[0]
        doc_run.font.name = self.default_font
        doc_run.font.size = Pt(12)
        
        # –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        doc_characteristics = [
            ("–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞", "–î–µ–ª–æ–≤–æ–µ –ø–∏—Å—å–º–æ"),
            ("–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", "–û–û–û ¬´–ü–†–û–¢–ï–• –ò–ù–ñ–ò–ù–ò–†–ò–ù–ì¬ª"),
            ("–ü–æ–ª—É—á–∞—Ç–µ–ª—å", "–û–û–û ¬´–ï–≤—Ä–æ–•–∏–º –°–µ–≤–µ—Ä–æ-–ó–∞–ø–∞–¥-2¬ª"),
            ("–¢–µ–º–∞", "–û —Å—Ç–∞—Ç—É—Å–µ —Ä–∞–±–æ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É ¬´–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ç–∞¬ª"),
            ("–î–∞—Ç–∞", "20.05.2025"),
            ("–ù–æ–º–µ—Ä", "E320.E32C-OUT-03484"),
            ("–û–±—ä–µ–º", "335 —Å–ª–æ–≤, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞"),
            ("–§–æ—Ä–º–∞—Ç", "PDF")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
        table = self.document.add_table(rows=1, cols=2)
        table.style = 'Table Grid'
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = '–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞'
        hdr_cells[1].text = '–ó–Ω–∞—á–µ–Ω–∏–µ'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(11)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for char, value in doc_characteristics:
            row_cells = table.add_row().cells
            row_cells[0].text = char
            row_cells[1].text = value
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for cell in row_cells:
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(10)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_spelling_punctuation_analysis(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('4. –ê–ù–ê–õ–ò–ó –ü–†–û–í–ï–†–ö–ò –û–†–§–û–ì–†–ê–§–ò–ò –ò –ü–£–ù–ö–¢–£–ê–¶–ò–ò', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏
        spelling_results = [
            ("–í—Å–µ–≥–æ —Å–ª–æ–≤ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ", "335"),
            ("–ù–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫ —Å–∏—Å—Ç–µ–º–æ–π", "17"),
            ("–ò–∑–≤–µ—Å—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–µ", "31"),
            ("–ü—Ä–æ—Ü–µ–Ω—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è", "54.8%"),
            ("–¢–æ—á–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã", "94.93%"),
            ("–ú–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏", "Fallback (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)"),
            ("–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", "< 0.1 —Å–µ–∫—É–Ω–¥—ã")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏
        table = self.document.add_table(rows=1, cols=2)
        table.style = 'Table Grid'
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = '–ü–∞—Ä–∞–º–µ—Ç—Ä'
        hdr_cells[1].text = '–†–µ–∑—É–ª—å—Ç–∞—Ç'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(11)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for param, result in spelling_results:
            row_cells = table.add_row().cells
            row_cells[0].text = param
            row_cells[1].text = result
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for cell in row_cells:
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(10)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        # –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
        self.document.add_paragraph()
        examples_heading = self.document.add_heading('4.1. –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫', level=2)
        examples_heading_run = examples_heading.runs[0]
        examples_heading_run.font.name = self.default_font
        examples_heading_run.font.size = Pt(14)
        examples_heading_run.font.bold = True
        examples_heading_run.font.color.rgb = RGBColor(0, 102, 204)
        
        # –ü—Ä–∏–º–µ—Ä—ã –æ—à–∏–±–æ–∫
        error_examples = [
            ("—Å–∞–∞ —Ç–≤–µ—Ç—Å—Ç–≤–∏–∏", "–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏"),
            ("–æ—Ü–µ–Ω–∫ –∞", "–æ—Ü–µ–Ω–∫–∞"),
            ("–ø—Ä–∏ –¥–ª–æ–∂–µ–Ω–∏–µ", "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"),
            ("–∞ –±—ä–µ–∫—Ç—É", "–æ–±—ä–µ–∫—Ç—É"),
            ("–Ω–µ –ø–æ–ª—É—á–µ–Ω —ã", "–Ω–µ –ø–æ–ª—É—á–µ–Ω—ã"),
            ("–ø–∞–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ"),
            ("–≥–∞—Ä–∞–Ω—Ç–∏ –∏", "–≥–∞—Ä–∞–Ω—Ç–∏–∏"),
            ("–ø—Ä–µ –æ—Ä–∏—Ç–µ—Ç–Ω–æ —Å—Ç–∏", "–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ—Å—Ç–∏"),
            ("—Å–∞ –≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ", "—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ"),
            ("–Ω–µ–ø–æ–ª—É—á–µ–Ω –∞", "–Ω–µ –ø–æ–ª—É—á–µ–Ω")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∏–º–µ—Ä–æ–≤ –æ—à–∏–±–æ–∫
        error_table = self.document.add_table(rows=1, cols=2)
        error_table.style = 'Table Grid'
        error_table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        error_hdr_cells = error_table.rows[0].cells
        error_hdr_cells[0].text = '–ù–∞–π–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞'
        error_hdr_cells[1].text = '–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in error_hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(10)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –æ—à–∏–±–æ–∫
        for error, correct in error_examples:
            row_cells = error_table.add_row().cells
            row_cells[0].text = error
            row_cells[1].text = correct
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for cell in row_cells:
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(9)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_performance_analysis(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('5. –ê–ù–ê–õ–ò–ó –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        performance_metrics = [
            ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏", "< 0.1 —Å–µ–∫—É–Ω–¥—ã"),
            ("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏", "< 0.1 —Å–µ–∫—É–Ω–¥—ã"),
            ("–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞", "0.03 —Å–µ–∫—É–Ω–¥—ã"),
            ("–ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞", "< 1 —Å–µ–∫—É–Ω–¥—ã"),
            ("–û–±—Ä–∞–±–æ—Ç–∫–∞ PDF", "< 2 —Å–µ–∫—É–Ω–¥—ã"),
            ("–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞", "< 0.5 —Å–µ–∫—É–Ω–¥—ã"),
            ("–û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", "< 3 —Å–µ–∫—É–Ω–¥—ã"),
            ("–ü—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å", "> 20 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤/–º–∏–Ω—É—Ç—É")
        ]
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –º–µ—Ç—Ä–∏–∫
        table = self.document.add_table(rows=1, cols=2)
        table.style = 'Table Grid'
        table.alignment = WD_TABLE_ALIGNMENT.CENTER
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = '–û–ø–µ—Ä–∞—Ü–∏—è'
        hdr_cells[1].text = '–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è'
        
        # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
        for cell in hdr_cells:
            for paragraph in cell.paragraphs:
                for run in paragraph.runs:
                    run.font.name = self.default_font
                    run.font.bold = True
                    run.font.size = Pt(11)
                    run.font.color.rgb = RGBColor(255, 255, 255)
            cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.CENTER
            # –¶–≤–µ—Ç —Ñ–æ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            shading_elm = OxmlElement('w:shd')
            shading_elm.set(qn('w:val'), 'clear')
            shading_elm.set(qn('w:color'), 'auto')
            shading_elm.set(qn('w:fill'), '4472C4')
            cell._tc.get_or_add_tcPr().append(shading_elm)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        for operation, time in performance_metrics:
            row_cells = table.add_row().cells
            row_cells[0].text = operation
            row_cells[1].text = time
            
            # –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —è—á–µ–µ–∫
            for cell in row_cells:
                for paragraph in cell.paragraphs:
                    for run in paragraph.runs:
                        run.font.name = self.default_font
                        run.font.size = Pt(10)
                cell.paragraphs[0].alignment = WD_ALIGN_PARAGRAPH.LEFT
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_issues_recommendations(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –ø—Ä–æ–±–ª–µ–º –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('6. –ü–†–û–ë–õ–ï–ú–´ –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
        problems_heading = self.document.add_heading('6.1. –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã', level=2)
        problems_heading_run = problems_heading.runs[0]
        problems_heading_run.font.name = self.default_font
        problems_heading_run.font.size = Pt(14)
        problems_heading_run.font.bold = True
        problems_heading_run.font.color.rgb = RGBColor(0, 102, 204)
        
        problems = [
            "‚ùå Hunspell –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - —Å–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π fallback –º–µ—Ç–æ–¥",
            "‚ùå LanguageTool –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏",
            "‚ö†Ô∏è –ù–∏–∑–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫ (54.8%) - —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –º–Ω–æ–≥–∏–µ –æ—à–∏–±–∫–∏",
            "‚ö†Ô∏è –õ–æ–∂–Ω—ã–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è - —Å–∏—Å—Ç–µ–º–∞ –ø–æ–º–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å–ª–æ–≤–∞ –∫–∞–∫ –æ—à–∏–±–∫–∏",
            "‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å - —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –º–Ω–æ–≥–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã",
            "‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ - —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ª–æ–≤"
        ]
        
        for problem in problems:
            para = self.document.add_paragraph(problem, style='List Bullet')
            run = para.runs[0]
            run.font.name = self.default_font
            run.font.size = Pt(11)
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations_heading = self.document.add_heading('6.2. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é', level=2)
        recommendations_heading_run = recommendations_heading.runs[0]
        recommendations_heading_run.font.name = self.default_font
        recommendations_heading_run.font.size = Pt(14)
        recommendations_heading_run.font.bold = True
        recommendations_heading_run.font.color.rgb = RGBColor(0, 102, 204)
        
        recommendations = [
            "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Hunspell –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏",
            "‚úÖ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å LanguageTool –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏",
            "‚úÖ –†–∞—Å—à–∏—Ä–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ —Ç–µ—Ä–º–∏–Ω–∞–º–∏ –∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞–º–∏",
            "‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π",
            "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏ –∏ —Å—Ç–∏–ª–∏—Å—Ç–∏–∫–∏",
            "‚úÖ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤–µ—Å–æ–≤—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫",
            "‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π",
            "‚úÖ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (DOCX, RTF, TXT)"
        ]
        
        for recommendation in recommendations:
            para = self.document.add_paragraph(recommendation, style='List Bullet')
            run = para.runs[0]
            run.font.name = self.default_font
            run.font.size = Pt(11)
        
        self.document.add_paragraph()  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    
    def _create_conclusion(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–ª—é—á–µ–Ω–∏—è"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        heading = self.document.add_heading('7. –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï', level=1)
        heading_run = heading.runs[0]
        heading_run.font.name = self.default_font
        heading_run.font.size = Pt(16)
        heading_run.font.bold = True
        heading_run.font.color.rgb = RGBColor(0, 51, 102)
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã
        conclusions = [
            "‚úÖ –°–µ—Ä–≤–∏—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å—Ö–æ–¥—è—â–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é",
            "‚úÖ –°–∏—Å—Ç–µ–º–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç",
            "‚úÖ API —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
            "‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –≤—ã—Å–æ–∫–∞—è - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∑–∞–Ω–∏–º–∞–µ—Ç –º–µ–Ω–µ–µ 3 —Å–µ–∫—É–Ω–¥",
            "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏",
            "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ (Hunspell, LanguageTool)",
            "‚ö†Ô∏è –ü—Ä–æ—Ü–µ–Ω—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫ (54.8%) –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
            "‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é –∏ —É–ª—É—á—à–µ–Ω–∏—é"
        ]
        
        for conclusion in conclusions:
            para = self.document.add_paragraph(conclusion, style='List Bullet')
            run = para.runs[0]
            run.font.name = self.default_font
            run.font.size = Pt(12)
        
        # –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞
        self.document.add_paragraph()
        final_para = self.document.add_paragraph(
            "–°–µ—Ä–≤–∏—Å –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å—Ö–æ–¥—è—â–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ö–æ—Ä–æ—à—É—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é "
            "–∏ –≤—ã—Å–æ–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞. "
            "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –∏ "
            "–≥—Ä–∞–º–º–∞—Ç–∏–∫–∏ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –æ—à–∏–±–æ–∫ –¥–æ —É—Ä–æ–≤–Ω—è, –ø—Ä–∏–≥–æ–¥–Ω–æ–≥–æ "
            "–¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è."
        )
        final_run = final_para.runs[0]
        final_run.font.name = self.default_font
        final_run.font.size = Pt(12)
        final_run.font.italic = True
        
        # –ü–æ–¥–ø–∏—Å—å
        self.document.add_paragraph()
        signature_para = self.document.add_paragraph(f"–û—Ç—á–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}")
        signature_para.alignment = WD_ALIGN_PARAGRAPH.RIGHT
        signature_run = signature_para.runs[0]
        signature_run.font.name = self.default_font
        signature_run.font.size = Pt(10)
        signature_run.font.color.rgb = RGBColor(102, 102, 102)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
        generator = OutgoingControlTestReportGenerator()
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        docx_content = generator.generate_test_report()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
        filename = f"Outgoing_Control_Test_Report_{datetime.now().strftime('%Y%m%d_%H%M%S')}.docx"
        filepath = os.path.join(os.getcwd(), filename)
        
        with open(filepath, 'wb') as f:
            f.write(docx_content)
        
        print(f"‚úÖ –û—Ç—á–µ—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å—Ö–æ–¥—è—â–µ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å–æ–∑–¥–∞–Ω: {filepath}")
        print(f"üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(docx_content)} –±–∞–π—Ç")
        
        return filepath
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        return None


if __name__ == "__main__":
    main()
