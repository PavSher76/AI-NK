#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Ollama —Å GPT-OSS –¥–ª—è –Ω–æ—Ä–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—è
# –ê–≤—Ç–æ—Ä: AI Assistant
# –î–∞—Ç–∞: $(date)

set -e

echo "üöÄ [OLLAMA_OPTIMIZATION] –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é Ollama —Å GPT-OSS..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Ollama
check_ollama() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Ollama..."
    
    if ! curl -s http://localhost:11434/api/tags > /dev/null; then
        error "Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Ollama: ollama serve"
        exit 1
    fi
    
    success "Ollama –¥–æ—Å—Ç—É–ø–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è GPT-OSS –º–æ–¥–µ–ª–∏
check_gpt_oss() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ GPT-OSS –º–æ–¥–µ–ª–∏..."
    
    if ! curl -s http://localhost:11434/api/tags | jq -e '.models[] | select(.name | contains("gpt-oss"))' > /dev/null; then
        error "GPT-OSS –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–¥–µ–ª—å: ollama pull gpt-oss:latest"
        exit 1
    fi
    
    success "GPT-OSS –º–æ–¥–µ–ª—å –Ω–∞–π–¥–µ–Ω–∞"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
create_optimized_model() {
    log "–°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å GPT-OSS..."
    
    if [ ! -f "Modelfile.gpt-oss-optimized" ]; then
        error "–§–∞–π–ª Modelfile.gpt-oss-optimized –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å
    ollama create gpt-oss-optimized -f Modelfile.gpt-oss-optimized
    
    if [ $? -eq 0 ]; then
        success "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å gpt-oss-optimized —Å–æ–∑–¥–∞–Ω–∞"
    else
        error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏"
        exit 1
    fi
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
test_optimized_model() {
    log "–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –º–æ–¥–µ–ª—å..."
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    test_prompt="–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –æ—Å–Ω–æ–≤–∞–Ω–∏–π –∑–¥–∞–Ω–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ –°–ü 22.13330.2016"
    
    response=$(curl -s http://localhost:11434/api/generate \
        -d "{\"model\": \"gpt-oss-optimized\", \"prompt\": \"$test_prompt\", \"stream\": false}" \
        | jq -r '.response')
    
    if [ "$response" != "null" ] && [ -n "$response" ]; then
        success "–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        echo "–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: ${response:0:200}..."
    else
        error "–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏"
        exit 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
create_startup_config() {
    log "–°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞..."
    
    cat > ollama_startup_config.env << EOF
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Ollama –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
# –°–æ–∑–¥–∞–Ω–æ: $(date)

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
OLLAMA_HOST=0.0.0.0
OLLAMA_ORIGINS=*

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
OLLAMA_NUM_CTX=32768
OLLAMA_NUM_BATCH=2048
OLLAMA_NUM_THREAD=8
# OLLAMA_FLASH_ATTN=1  # Flash Attention –≤–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏
OLLAMA_TEMPERATURE=0.1
OLLAMA_TOP_P=0.9
OLLAMA_TOP_K=40
OLLAMA_REPEAT_PENALTY=1.1
OLLAMA_REPEAT_LAST_N=64

# –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞–º—è—Ç–∏
OLLAMA_GPU_LAYERS=10
OLLAMA_CPU_THREADS=8

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
OLLAMA_DEBUG=0
OLLAMA_VERBOSE=0
EOF
    
    success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: ollama_startup_config.env"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞
create_startup_script() {
    log "–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ Ollama..."
    
    cat > start_ollama_optimized.sh << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ Ollama
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./start_ollama_optimized.sh

set -e

echo "üöÄ [OLLAMA_STARTUP] –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Ollama..."

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
if [ -f "ollama_startup_config.env" ]; then
    source ollama_startup_config.env
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
else
    echo "‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ Ollama
if pgrep -f "ollama serve" > /dev/null; then
    echo "‚ö†Ô∏è Ollama —É–∂–µ –∑–∞–ø—É—â–µ–Ω. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    pkill -f "ollama serve"
    sleep 3
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º Ollama —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
echo "ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º Ollama —Å –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏..."

# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
export OLLAMA_HOST=${OLLAMA_HOST:-0.0.0.0}
export OLLAMA_ORIGINS=${OLLAMA_ORIGINS:-*}
export OLLAMA_NUM_CTX=${OLLAMA_NUM_CTX:-32768}
export OLLAMA_NUM_BATCH=${OLLAMA_NUM_BATCH:-2048}
export OLLAMA_NUM_THREAD=${OLLAMA_NUM_THREAD:-8}
# export OLLAMA_FLASH_ATTN=${OLLAMA_FLASH_ATTN:-1}  # Flash Attention –≤–∫–ª—é—á–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# –ó–∞–ø—É—Å–∫–∞–µ–º Ollama –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
nohup ollama serve > ollama.log 2>&1 &
OLLAMA_PID=$!

echo "‚úÖ Ollama –∑–∞–ø—É—â–µ–Ω —Å PID: $OLLAMA_PID"
echo "üìù –õ–æ–≥–∏: ollama.log"

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Ollama..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
if curl -s http://localhost:11434/api/tags > /dev/null; then
    echo "‚úÖ Ollama —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üîó API: http://localhost:11434"
    echo "üìä –ú–æ–¥–µ–ª–∏: http://localhost:11434/api/tags"
    echo "ü§ñ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å: gpt-oss-optimized"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏
    echo ""
    echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
    curl -s http://localhost:11434/api/tags | jq -r '.models[] | "  - \(.name) (\(.details.parameter_size))"'
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
    echo $OLLAMA_PID > ollama.pid
    echo "üíæ PID —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ollama.pid"
    
    echo ""
    echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: kill $OLLAMA_PID –∏–ª–∏ pkill -f 'ollama serve'"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Ollama"
    kill $OLLAMA_PID 2>/dev/null || true
    exit 1
fi
EOF
    
    chmod +x start_ollama_optimized.sh
    success "–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω: start_ollama_optimized.sh"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
create_stop_script() {
    log "–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Ollama..."
    
    cat > stop_ollama.sh << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Ollama
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./stop_ollama.sh

echo "üõë [OLLAMA_STOP] –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Ollama..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ PID —Ñ–∞–π–ª—É
if [ -f "ollama.pid" ]; then
    PID=$(cat ollama.pid)
    if kill -0 $PID 2>/dev/null; then
        kill $PID
        echo "‚úÖ Ollama –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (PID: $PID)"
        rm -f ollama.pid
    else
        echo "‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å —Å PID $PID –Ω–µ –Ω–∞–π–¥–µ–Ω"
        rm -f ollama.pid
    fi
fi

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
if pgrep -f "ollama serve" > /dev/null; then
    echo "üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Ollama..."
    pkill -f "ollama serve"
    sleep 2
    echo "‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Ollama –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ÑπÔ∏è Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

echo "‚úÖ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
EOF
    
    chmod +x stop_ollama.sh
    success "–°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–æ–∑–¥–∞–Ω: stop_ollama.sh"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
create_monitoring_script() {
    log "–°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    cat > monitor_ollama.sh << 'EOF'
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Ollama
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./monitor_ollama.sh

echo "üìä [OLLAMA_MONITOR] –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Ollama..."

while true; do
    clear
    echo "üìä [OLLAMA_MONITOR] $(date)"
    echo "=================================="
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    if curl -s http://localhost:11434/api/tags > /dev/null; then
        echo "‚úÖ Ollama: ONLINE"
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª—è—Ö
        echo ""
        echo "ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏:"
        curl -s http://localhost:11434/api/tags | jq -r '.models[] | "  - \(.name) (\(.details.parameter_size))"'
        
        # –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        echo ""
        echo "‚ö° –¢–µ—Å—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:"
        start_time=$(date +%s%N)
        response=$(curl -s http://localhost:11434/api/generate \
            -d '{"model": "gpt-oss-optimized", "prompt": "–¢–µ—Å—Ç", "stream": false}' \
            | jq -r '.eval_duration // .total_duration // 0')
        end_time=$(date +%s%N)
        
        if [ "$response" != "0" ] && [ "$response" != "null" ]; then
            echo "  - –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: $((response / 1000000))ms"
        else
            echo "  - –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: $(((end_time - start_time) / 1000000))ms"
        fi
        
    else
        echo "‚ùå Ollama: OFFLINE"
    fi
    
    echo ""
    echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥... (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)"
    sleep 30
done
EOF
    
    chmod +x monitor_ollama.sh
    success "–°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–∑–¥–∞–Ω: monitor_ollama.sh"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ [OLLAMA_OPTIMIZATION] –ù–∞—á–∏–Ω–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é Ollama —Å GPT-OSS..."
    echo "================================================================"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_ollama
    check_gpt_oss
    
    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
    create_optimized_model
    test_optimized_model
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    create_startup_config
    create_startup_script
    create_stop_script
    create_monitoring_script
    
    echo ""
    echo "üéâ [OLLAMA_OPTIMIZATION] –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "================================================================"
    echo ""
    echo "üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
    echo "  - Modelfile.gpt-oss-optimized (–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏)"
    echo "  - ollama_startup_config.env (–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è)"
    echo "  - start_ollama_optimized.sh (—Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞)"
    echo "  - stop_ollama.sh (—Å–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)"
    echo "  - monitor_ollama.sh (—Å–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)"
    echo ""
    echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ Ollama:"
    echo "  ./start_ollama_optimized.sh"
    echo ""
    echo "üìä –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:"
    echo "  ./monitor_ollama.sh"
    echo ""
    echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:"
    echo "  ./stop_ollama.sh"
    echo ""
    echo "‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
